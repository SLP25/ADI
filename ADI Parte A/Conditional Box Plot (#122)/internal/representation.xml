<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
    <entry key="jsNamespace" type="xstring" value="knimeConditionalBoxplot"/>
    <config key="jsCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* global d3:false */%%00010window.knimeConditionalBoxplot = (function () {%%00010    var boxplot = {};%%00010    var _data = {};%%00010    var MIN_HEIGHT = 100;%%00010    var MIN_WIDTH = 100;%%00010    var maxY = 0;%%00010    var minY = 0;%%00010    var Y_TICK_COUNT = 5;%%00010    var Y_LABEL_MAX_WIDTH = 200;%%00010    %%00010    var _representation, _value, layoutContainer,%%00010        _switchMissValClassCbx, _missValClass,%%00010        drawChart, drawControls, processMissingValues, updateSubtitle, updateTitle,%%00010        compareCategories, resize;%%00010%%00010    var MISSING_VALUES_CLASS = 'Missing values';%%00010%%00010    var MISSING_VALUES_ONLY = 'missingValuesOnly';%%00010    var IGNORED_MISSING_VALUES = 'ignoredMissingValues';%%00010    var NO_DATA_AVAILABLE = 'noDataAvailable';%%00010    var NO_DATA_COLUMN = 'noDataColumn';%%00010%%00010%%00010    boxplot.init = function (representation, value) {%%00010        // Store value and representation for later%%00010        _value = value;%%00010        _representation = representation;%%00010%%00010        // No numeric columns available?%%00010        if (_representation.options.columns.length === 0) {%%00010            alert('No numeric columns selected');%%00010            return;%%00010        }%%00010%%00010        // If no column to show is selected yet, we take the first from all candidates%%00010        if (!_value.options.numCol) {%%00010            _value.options.numCol = _representation.options.columns[0];%%00010        }%%00010%%00010        d3.select('html').style('width', '100%').style('height', '100%');%%00010        d3.select('body').style('width', '100%').style('height', '100%');%%00010%%00010        var body = d3.select('body');%%00010%%00010        // Create container for our content%%00010        layoutContainer = body.append('div')%%00010            .attr('id', 'layoutContainer')%%00010            .attr('class', 'knime-layout-container')%%00010            .style('min-width', MIN_WIDTH + 'px')%%00010            .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010        // Size layout container based on sizing settings%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            layoutContainer.style('width', '100%')%%00010                .style('height', '100%');%%00010        } else {%%00010            layoutContainer.style('width', _representation.options.svg.width + 'px')%%00010                .style('height', _representation.options.svg.height + 'px');%%00010        }%%00010%%00010        var div = layoutContainer.append('div')%%00010            .attr('id', 'svgContainer')%%00010            .attr('class', 'knime-svg-container')%%00010            .style('min-width', MIN_WIDTH + 'px')%%00010            .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010        // Add SVG element%%00010        var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010        div[0][0].appendChild(svg1);%%00010%%00010        var d3svg = d3.select('svg');%%00010        // Add rectangle for background color%%00010        d3svg.append('rect')%%00010            .attr('id', 'bgr')%%00010            .attr('fill', _representation.options.backgroundColor);%%00010%%00010        // Append a group for the plot and add a rectangle for the data area background%%00010        d3svg.append('g')%%00010            .attr('id', 'plotG')%%00010            .append('rect')%%00010            .attr('id', 'da')%%00010            .attr('fill', _representation.options.daColor);%%00010%%00010        // Title%%00010        d3svg.append('text')%%00010            .attr('id', 'title')%%00010            .attr('class', 'knime-title')%%00010            .attr('x', 20)%%00010            .attr('y', 30)%%00010            .text(_value.options.title);%%00010%%00010        // Subtitle%%00010        d3svg.append('text')%%00010            .attr('id', 'subtitle')%%00010            .attr('class', 'knime-subtitle')%%00010            .attr('x', 20)%%00010            .text(_value.options.subtitle);%%00010        // y attr is set in drawChart%%00010%%00010        if (_representation.options.enableViewControls) {%%00010            drawControls();%%00010        }%%00010        drawChart();%%00010%%00010        if (window.parent.KnimePageLoader) {%%00010            window.parent.KnimePageLoader.autoResize(window.frameElement.id);%%00010        }%%00010    };%%00010%%00010    drawControls = function () {%%00010        if (_representation.options.displayFullscreen) {%%00010            knimeService.allowFullscreen();%%00010        }%%00010%%00010        if (!_representation.options.enableViewControls) {%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.enableTitleEdit || _representation.options.enableSubtitleEdit) {%%00010            if (_representation.options.enableTitleEdit) {%%00010                var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title,%%00010                    updateTitle, true);%%00010                knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010            }%%00010%%00010            if (_representation.options.enableSubtitleEdit) {%%00010                var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle,%%00010                    updateSubtitle, true);%%00010                knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010            }%%00010%%00010            if (_representation.options.enableColumnSelection) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (_representation.options.enableColumnSelection) {%%00010            var colSelect = knimeService.createMenuSelect('columnSelect', _value.options.numCol,%%00010                _representation.options.columns, function () {%%00010                    _value.options.numCol = this.value;%%00010                    drawChart();%%00010                });%%00010            knimeService.addMenuItem('Selected column:', 'minus-square fa-rotate-90', colSelect);%%00010%%00010            if (_representation.options.enableSwitchMissValClass) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (_representation.options.enableSwitchMissValClass &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            _switchMissValClassCbx = knimeService.createMenuCheckbox('switchMissValClassCbx',%%00010                _value.options.includeMissValClass, function () {%%00010                    if (_value.options.includeMissValClass !== this.checked) {%%00010                        _value.options.includeMissValClass = this.checked;%%00010                        drawChart();%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Include \'Missing values\' class: ', 'question', _switchMissValClassCbx);%%00010        }%%00010    };%%00010%%00010    updateTitle = function () {%%00010        var hadTitle = _value.options.title.length &gt; 0;%%00010        _value.options.title = document.getElementById('chartTitleText').value;%%00010        var hasTitle = _value.options.title.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the title appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#title').text(_value.options.title);%%00010    };%%00010%%00010    updateSubtitle = function () {%%00010        var hadTitle = _value.options.subtitle.length &gt; 0;%%00010        _value.options.subtitle = document.getElementById('chartSubtitleText').value;%%00010        var hasTitle = _value.options.subtitle.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the subtitle appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#subtitle').text(_value.options.subtitle);%%00010    };%%00010%%00010    // Draws the chart. If resizing is true, there are no animations.%%00010    drawChart = function (resizing) {%%00010%%00010        // Select the data to show%%00010        _data = _representation.inObjects[0].stats[_value.options.numCol];%%00010%%00010        _missValClass = undefined; // eslint-disable-line no-undefined%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof _data !== 'undefined' &amp;&amp; typeof _data[MISSING_VALUES_CLASS] !== 'undefined') {%%00010            _missValClass = _data[MISSING_VALUES_CLASS];%%00010            delete _data[MISSING_VALUES_CLASS];%%00010        }%%00010%%00010        // Find the maximum y-value for the axis%%00010        maxY = Number.NEGATIVE_INFINITY;%%00010        minY = Number.POSITIVE_INFINITY;%%00010        for (var key in _data) {%%00010            maxY = Math.max(_data[key].max, maxY);%%00010            minY = Math.min(_data[key].min, minY);%%00010        }%%00010%%00010        // Calculate the correct chart width%%00010        var cw = Math.max(MIN_WIDTH, _representation.options.svg.width);%%00010        var ch = Math.max(MIN_HEIGHT, _representation.options.svg.height);%%00010%%00010        var chartWidth = cw + 'px';%%00010        var chartHeight = ch + 'px';%%00010        // If we are fullscreen, we set the chart width to 100%%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            chartWidth = '100%';%%00010            chartHeight = '100%';%%00010        }%%00010%%00010        d3.select('#svgContainer')%%00010            .style('height', chartHeight)%%00010            .style('width', chartWidth);%%00010%%00010        // The margins for the plot area%%00010        var topMargin = 10;%%00010        if (_value.options.title &amp;&amp; _value.options.subtitle) {%%00010            topMargin += 50;%%00010        } else if (_value.options.title) {%%00010            topMargin += 36;%%00010        } else if (_value.options.subtitle) {%%00010            topMargin += 26;%%00010        }%%00010%%00010        var margins = {%%00010            top: topMargin,%%00010            bottom: 40,%%00010            right: 10%%00010        };%%00010%%00010        d3.select('#subtitle').attr('y', topMargin - 14);%%00010%%00010        var d3svg = d3.select('svg')%%00010            .attr({ width: cw, height: ch })%%00010            .style({ width: chartWidth, height: chartHeight });%%00010%%00010        // Calculate height of the plot area (without x-axis)%%00010        var h = Math.max(50, parseInt(d3svg.style('height'), 10) - margins.top - margins.bottom);%%00010%%00010        // y-axis scale%%00010        var yScale = d3.scale.linear().domain([minY, maxY]).range([h, 0]).nice();%%00010%%00010        // determine required margin-left%%00010        var yLabels = yScale.ticks(Y_TICK_COUNT).map(yScale.tickFormat(Y_TICK_COUNT)).map(String);%%00010        var maxYLabelWidth = knimeService.measureAndTruncate(yLabels, {%%00010            container: d3svg.node(),%%00010            classes: 'knime-tick-label',%%00010            maxWidth: Y_LABEL_MAX_WIDTH%%00010        }).max.maxWidth;%%00010        margins.left = 15 + maxYLabelWidth;%%00010%%00010        // Calculate width of the plot area (without y-axis)%%00010        var w = Math.max(50, parseInt(d3svg.style('width'), 10) - margins.left - margins.right);%%00010%%00010        // x-axis scale%%00010        var xScale = d3.scale.ordinal().domain(d3.keys(_data).sort(compareCategories)).rangeBands([0, w], 0.75, 0.5);%%00010%%00010        // color scale%%00010        var colorScale = d3.scale.category10();%%00010        if (_value.options.applyColors) {%%00010            if (d3.entries(_data).length &gt; 10) {%%00010                colorScale = d3.scale.category20();%%00010            }%%00010            if (_representation.inObjects[1] &amp;&amp; _representation.inObjects[1].spec.colTypes[0] === 'string') {%%00010                var categories = [];%%00010                var colors = _representation.inObjects[1].spec.rowColorValues;%%00010                for (var i = 0; i &lt; _representation.inObjects[1].rows.length; i++) {%%00010                    categories.push(_representation.inObjects[1].rows[i].data[0]);%%00010                }%%00010                categories.push(null);%%00010                colors.push('#404040');%%00010                colorScale = d3.scale.ordinal().domain(categories).range(colors);%%00010            }%%00010        }%%00010%%00010        // Position the plot group based on the margins%%00010        var plotG = d3svg.select('#plotG')%%00010            .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');%%00010%%00010        // Resize background rectangles%%00010        plotG.select('#da').attr({%%00010            width: w,%%00010            height: h + 5%%00010        });%%00010        d3svg.select('#bgr').attr({%%00010            width: w + margins.left + margins.right,%%00010            height: h + margins.top + margins.bottom%%00010        });%%00010%%00010        // d3 axes%%00010        var xAxis = d3.svg.axis().scale(xScale)%%00010            .orient('bottom');%%00010        var yAxis = d3.svg.axis().scale(yScale)%%00010            .orient('left').ticks(Y_TICK_COUNT);%%00010%%00010        // Remove axes so they are redrawn%%00010        d3.selectAll('.axis').remove();%%00010%%00010        // Append and style x-axis%%00010        var d3XAxis = plotG.append('g')%%00010            .attr('class', 'x axis knime-x knime-axis')%%00010            .attr('transform', 'translate(0,' + (h + 5) + ')')%%00010            .call(xAxis);%%00010        d3XAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        // Append and style y-axis%%00010        var d3YAxis = plotG.append('g')%%00010            .attr('class', 'y axis knime-y knime-axis')%%00010            .call(yAxis);%%00010        d3YAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        plotG.selectAll('.axis-label').remove();%%00010%%00010        plotG.append('text')%%00010            .attr('class', 'y axis-label knime-y knime-axis-label')%%00010            .attr('text-anchor', 'end')%%00010            .attr('y', 6)%%00010            .attr('dy', '.75em')%%00010            .attr('transform', 'rotate(-90)')%%00010            .text(_value.options.numCol);%%00010%%00010        plotG.append('text')%%00010            .attr('class', 'x axis-label knime-x knime-axis-label')%%00010            .attr('text-anchor', 'end')%%00010            .attr('x', w)%%00010            .attr('y', h - 6)%%00010            .text(_representation.inObjects[0].catCol);%%00010%%00010        d3.selectAll('.domain')%%00010            .classed('knime-axis-line', true);%%00010        var ticks = d3.selectAll('.tick')%%00010            .classed('knime-tick', true);%%00010        ticks.selectAll('line')%%00010            .classed('knime-tick-line', true);%%00010        ticks.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010%%00010        // Animate only when running in view and not resizing%%00010        var duration = (_representation.runningInView &amp;&amp; !resizing) ? 500 : 0;%%00010%%00010        // Create a selection for each box with data that we created at the beginning%%00010        var boxG = plotG.selectAll('g.box')%%00010            .data(d3.entries(_data), function (d) {%%00010                return d.key;%%00010            });%%00010%%00010        // Remove boxes that are not in the data anymore%%00010        boxG.exit().remove();%%00010%%00010        // Append a group element for each new box and shift it according to the class%%00010        var box = boxG.enter().append('g')%%00010            .attr('class', 'box')%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // Transition all boxes to their position%%00010        d3.selectAll('.box').transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // The main rectangle for the box%%00010        box.append('rect')%%00010            .attr('class', 'boxrect')%%00010            .attr('stroke', 'black')%%00010            // .attr(&quot;fill&quot;, _representation.options.boxColor || &quot;none&quot;);%%00010            .attr('fill', function (d) {%%00010                if (_value.options.applyColors) {%%00010                    return colorScale(d.key);%%00010                } else {%%00010                    return _representation.options.boxColor || 'none';%%00010                }%%00010            });%%00010%%00010        // Update the box according to the data%%00010        boxG.selectAll('.boxrect')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('height', function (d) { return yScale(d.value.lowerQuartile) - yScale(d.value.upperQuartile); })%%00010            .attr('width', xScale.rangeBand());%%00010%%00010        // The middle of the box on the x-axis%%00010        var middle = xScale.rangeBand() / 2;%%00010%%00010        // Text for the upper quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'uqText knime-label');%%00010        boxG.selectAll('.uqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.upperQuartile * 100) / 100; });%%00010%%00010        // Text for the lower quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'lqText knime-label');%%00010        boxG.selectAll('.lqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.lowerQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerQuartile * 100) / 100; });%%00010%%00010%%00010        // Median%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('stroke-width', 3)%%00010            .attr('x1', '0')%%00010            .attr('class', 'median');%%00010%%00010        boxG.selectAll('.median')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.median); })%%00010            .attr('y2', function (d) { return yScale(d.value.median); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'medianText knime-label');%%00010%%00010        boxG.selectAll('.medianText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.median) + 3; })%%00010            .text(function (d) { return Math.round(d.value.median * 100) / 100; });%%00010%%00010        // Upper whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'uwL1');%%00010%%00010        boxG.selectAll('.uwL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'uwL2');%%00010%%00010        boxG.selectAll('.uwL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.upperWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'uwText knime-label');%%00010%%00010        boxG.selectAll('.uwText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.upperWhisker) + 10; })%%00010            .text(function (d) { return Math.round(d.value.upperWhisker * 100) / 100; });%%00010%%00010        // Lower whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'ulL1');%%00010%%00010        boxG.selectAll('.ulL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.lowerQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'ulL2');%%00010%%00010        boxG.selectAll('.ulL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.lowerWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'ulText knime-label');%%00010%%00010        boxG.selectAll('.ulText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.lowerWhisker) - 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerWhisker * 100) / 100; });%%00010%%00010        // Mild outliers%%00010        var outl = boxG.selectAll('circle.mo')%%00010            .data(function (d) { return d.value.mildOutliers; });%%00010%%00010        outl.enter().append('circle')%%00010            .attr('class', 'mo')%%00010            .attr('r', 5)%%00010            .attr('fill', _representation.options.daColor)%%00010            .attr('stroke', 'black')%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        outl.transition().duration(duration)%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); });%%00010%%00010        outl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        // Extreme outliers%%00010        var exoutl = boxG.selectAll('g.eo')%%00010            .data(function (d) { return d.value.extremeOutliers; });%%00010%%00010        var enterG = exoutl.enter().append('g')%%00010            .attr('class', 'eo')%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        var crossSize = 4;%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: -crossSize,%%00010                x2: crossSize,%%00010                y2: crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: crossSize,%%00010                x2: crossSize,%%00010                y2: -crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        exoutl.transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        // Fade out outliers%%00010        exoutl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        processMissingValues();%%00010%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof _missValClass !== 'undefined') {%%00010            _data[MISSING_VALUES_CLASS] = _missValClass;%%00010        }%%00010%%00010        // Set resize handler%%00010        if (_representation.options.svg.fullscreen) {%%00010            var win = document.defaultView || document.parentWindow;%%00010            win.onresize = resize;%%00010        }%%00010    };%%00010%%00010    // Use custom compare function to ensure that the missing values category is the last one%%00010    compareCategories = function (a, b) {%%00010        if (a = 'Missing values') {%%00010            return 1;%%00010        }%%00010        if (a &lt; b) {%%00010            return -1;%%00010        }%%00010        if (a &gt; b) {%%00010            return 1;%%00010        }%%00010        return 0;%%00010    };%%00010%%00010    resize = function (event) {%%00010        drawChart(true);%%00010    };%%00010%%00010    processMissingValues = function () {%%00010        if (!_representation.options.showWarnings) {%%00010            return;%%00010        }%%00010%%00010        knimeService.clearWarningMessage(NO_DATA_AVAILABLE);%%00010        knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010        knimeService.clearWarningMessage(IGNORED_MISSING_VALUES);%%00010        knimeService.clearWarningMessage(NO_DATA_COLUMN);%%00010%%00010        // temporary workaround for being able to select a data column which was not included in the node settings%%00010        if (typeof _data === 'undefined') {%%00010            knimeService.setWarningMessage('No chart was generated since the selected column was not included in the ' +%%00010                'node configuration dialog. Please choose another column or add the selected column to the list of ' +%%00010                'included columns.', NO_DATA_COLUMN);%%00010            return;%%00010        }%%00010%%00010        var excludedClasses = _representation.inObjects[0].excludedClasses[_value.options.numCol];%%00010        var ignoredMissVals = _representation.inObjects[0].ignoredMissVals[_value.options.numCol];%%00010%%00010        if (typeof _switchMissValClassCbx !== 'undefined') {%%00010            if (typeof _missValClass === 'undefined' &amp;&amp; typeof _data[MISSING_VALUES_CLASS] === 'undefined' &amp;&amp;%%00010                excludedClasses.indexOf(MISSING_VALUES_CLASS) === -1 &amp;&amp;%%00010                typeof ignoredMissVals[MISSING_VALUES_CLASS] === 'undefined') {%%00010                // there's no missing values in class column - disable the control%%00010                _switchMissValClassCbx.disabled = true;%%00010                _switchMissValClassCbx.checked = false;%%00010            } else {%%00010                // restore the state%%00010                _switchMissValClassCbx.disabled = false;%%00010                _switchMissValClassCbx.checked = _value.options.includeMissValClass;%%00010            }%%00010        }%%00010%%00010        var missValClass, ignoredMVal;%%00010        // if option &quot;Include 'Missing values'&quot; is off, we don't show a warning about them%%00010        if (!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) {%%00010            excludedClasses = excludedClasses.filter(function (x) {%%00010                return x !== MISSING_VALUES_CLASS;%%00010            });%%00010%%00010            if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010                typeof ignoredMissVals[MISSING_VALUES_CLASS] !== 'undefined') {%%00010                missValClass = ignoredMissVals[MISSING_VALUES_CLASS];%%00010                delete ignoredMissVals[MISSING_VALUES_CLASS];%%00010            }%%00010        }%%00010%%00010        if (Object.keys(_data).length === 0) {%%00010            if (typeof _missValClass !== 'undefined' &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage('No chart was generated since all classes have only missing values or ' +%%00010                    'special doubles.\nThere are values where the class name is missing.\n' +%%00010                    'To see them switch on the option &quot;Include \'Missing values\' class&quot; in the view settings.',%%00010                    NO_DATA_AVAILABLE);%%00010            } else {%%00010                knimeService.setWarningMessage('No chart was generated since all classes have only missing values or ' +%%00010                    'special doubles.\nChoose another data column or re-run the workflow with different data.',%%00010                    NO_DATA_AVAILABLE);%%00010            }%%00010        } else if (_representation.options.reportOnMissingValues) {%%00010            if (excludedClasses.length &gt; 0) {%%00010                knimeService.setWarningMessage('Following classes contain only missing values or special doubles and ' +%%00010                    'were excluded from the view:\n    ' + excludedClasses.join('\n    '), MISSING_VALUES_ONLY);%%00010            }%%00010            if (Object.keys(ignoredMissVals).length &gt; 0) {%%00010                var str = '';%%00010                for (ignoredMVal in ignoredMissVals) {%%00010                    // if option &quot;Include 'Missing values'&quot; is off, we don't show a warning about them%%00010                    if (ignoredMissVals.hasOwnProperty(ignoredMVal) &amp;&amp;%%00010                        (_value.options.includeMissValClass || ignoredMVal !== MISSING_VALUES_CLASS)) {%%00010                        str += '    ' + ignoredMVal + ' - ' + ignoredMissVals[ignoredMVal] +%%00010                            ' missing value(s) or special double(s)\n';%%00010                    }%%00010                }%%00010                knimeService.setWarningMessage('Missing values or special doubles ignored during statistics ' +%%00010                    'calculations per class:\n' + str, IGNORED_MISSING_VALUES);%%00010            }%%00010        }%%00010%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof missValClass !== 'undefined') {%%00010            ignoredMissVals[MISSING_VALUES_CLASS] = missValClass;%%00010        }%%00010    };%%00010%%00010    boxplot.getSVG = function () {%%00010        var svgElement = d3.select('svg')[0][0];%%00010        knimeService.inlineSvgStyles(svgElement);%%00010        // Return the SVG as a string.%%00010        return (new XMLSerializer()).serializeToString(svgElement);%%00010    };%%00010%%00010    boxplot.validate = function () {%%00010        return true;%%00010    };%%00010%%00010    boxplot.getComponentValue = function () {%%00010        return _value;%%00010    };%%00010%%00010    return boxplot;%%00010%%00010})();%%00010"/>
    </config>
    <config key="cssCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value=".axis path,%%00010line {%%00010  fill: none;%%00010  stroke: #000;%%00010  shape-rendering: crispEdges;%%00010}"/>
    </config>
    <config key="jsDependencies">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="dependency_0">
            <entry key="name" type="xstring" value="D3"/>
            <entry key="path" type="xstring" value="js-lib/d3/d3.v3_2_8.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
        <config key="dependency_1">
            <entry key="name" type="xstring" value="jQuery"/>
            <entry key="path" type="xstring" value="js-lib/jQuery/jquery-1.11.0.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
    </config>
    <config key="cssDependencies">
        <entry key="array-size" type="xint" value="0"/>
    </config>
    <entry key="new" type="xboolean" value="false"/>
    <entry key="inView" type="xboolean" value="true"/>
    <config key="tableIds">
        <entry key="array-size" type="xint" value="2"/>
        <entry key="0" type="xstring" value="963eacef-c57c-49e5-8997-5aec8b39d844"/>
        <entry key="1" type="xstring" isnull="true" value=""/>
    </config>
    <config key="variables">
        <entry key="numSettings" type="xint" value="1"/>
        <entry key="mapClass" type="xstring" value="string"/>
        <entry key="key_0" type="xstring" value="knime.workspace"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="C:\Users\Guilherme\Documents\Projects\ADI"/>
    </config>
    <config key="binaryFiles">
        <entry key="numSettings" type="xint" value="0"/>
        <entry key="mapClass" type="xstring" value="string"/>
    </config>
    <config key="options">
        <entry key="numSettings" type="xint" value="14"/>
        <entry key="mapClass" type="xstring" value="object"/>
        <entry key="key_0" type="xstring" value="backgroundColor"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="#FFFFFF"/>
        <entry key="key_1" type="xstring" value="svg"/>
        <entry key="class_1" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
        <config key="value_1">
            <entry key="width" type="xint" value="800"/>
            <entry key="height" type="xint" value="600"/>
            <entry key="fullscreen" type="xboolean" value="true"/>
        </config>
        <entry key="key_2" type="xstring" value="enableSwitchMissValClass"/>
        <entry key="class_2" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_2" type="xboolean" value="true"/>
        <entry key="key_3" type="xstring" value="columns"/>
        <entry key="class_3" type="xstring" value="[Ljava.lang.String;"/>
        <config key="value_3">
            <entry key="array-size" type="xint" value="1"/>
            <entry key="0" type="xstring" value="Price"/>
        </config>
        <entry key="key_4" type="xstring" value="boxColor"/>
        <entry key="class_4" type="xstring" value="java.lang.String"/>
        <entry key="value_4" type="xstring" value="#FFFFFF"/>
        <entry key="key_5" type="xstring" value="enableTitleEdit"/>
        <entry key="class_5" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_5" type="xboolean" value="true"/>
        <entry key="key_6" type="xstring" value="displayFullscreen"/>
        <entry key="class_6" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_6" type="xboolean" value="true"/>
        <entry key="key_7" type="xstring" value="reportOnMissingValues"/>
        <entry key="class_7" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_7" type="xboolean" value="true"/>
        <entry key="key_8" type="xstring" value="catCol"/>
        <entry key="class_8" type="xstring" value="java.lang.String"/>
        <entry key="value_8" type="xstring" value="Company name"/>
        <entry key="key_9" type="xstring" value="enableViewControls"/>
        <entry key="class_9" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_9" type="xboolean" value="true"/>
        <entry key="key_10" type="xstring" value="enableColumnSelection"/>
        <entry key="class_10" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_10" type="xboolean" value="true"/>
        <entry key="key_11" type="xstring" value="showWarnings"/>
        <entry key="class_11" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_11" type="xboolean" value="true"/>
        <entry key="key_12" type="xstring" value="enableSubtitleEdit"/>
        <entry key="class_12" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_12" type="xboolean" value="true"/>
        <entry key="key_13" type="xstring" value="daColor"/>
        <entry key="class_13" type="xstring" value="java.lang.String"/>
        <entry key="value_13" type="xstring" value="#FFFFFF"/>
    </config>
    <config key="inObjects">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="inObject_0">
            <entry key="className" type="xstring" value="org.knime.dynamic.js.base.boxplot.ConditionalBoxplotProcessor_v2$CondBoxPlotResult"/>
            <entry key="jsonValue" type="xstring" value="{&quot;stats&quot;:{&quot;Price&quot;:{&quot;Audi&quot;:{&quot;lowerQuartile&quot;:699000.0,&quot;lowerWhisker&quot;:500000.0,&quot;median&quot;:1499000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:3100000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:1900000.0,&quot;min&quot;:500000.0,&quot;max&quot;:3100000.0},&quot;BMW&quot;:{&quot;lowerQuartile&quot;:825000.0,&quot;lowerWhisker&quot;:600000.0,&quot;median&quot;:1050000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:1600000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:1224500.0,&quot;min&quot;:600000.0,&quot;max&quot;:1600000.0},&quot;Chevrolet&quot;:{&quot;lowerQuartile&quot;:125000.0,&quot;lowerWhisker&quot;:80000.0,&quot;median&quot;:154200.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row872&quot;,&quot;value&quot;:465000.0},{&quot;rowKey&quot;:&quot;Row558&quot;,&quot;value&quot;:400000.0},{&quot;rowKey&quot;:&quot;Row573&quot;,&quot;value&quot;:490000.0}],&quot;upperWhisker&quot;:375000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:225000.0,&quot;min&quot;:80000.0,&quot;max&quot;:490000.0},&quot;Datsun&quot;:{&quot;lowerQuartile&quot;:235000.0,&quot;lowerWhisker&quot;:235000.0,&quot;median&quot;:245000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:299999.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:285000.0,&quot;min&quot;:235000.0,&quot;max&quot;:299999.0},&quot;Fiat&quot;:{&quot;lowerQuartile&quot;:75000.0,&quot;lowerWhisker&quot;:75000.0,&quot;median&quot;:97500.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:169500.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:144750.0,&quot;min&quot;:75000.0,&quot;max&quot;:169500.0},&quot;Force&quot;:{&quot;lowerQuartile&quot;:565000.0,&quot;lowerWhisker&quot;:550000.0,&quot;median&quot;:580000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:580000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:580000.0,&quot;min&quot;:550000.0,&quot;max&quot;:580000.0},&quot;Ford&quot;:{&quot;lowerQuartile&quot;:195000.0,&quot;lowerWhisker&quot;:45000.0,&quot;median&quot;:477499.5,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:830000.0,&quot;extremeOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row838&quot;,&quot;value&quot;:2900000.0}],&quot;upperQuartile&quot;:575000.0,&quot;min&quot;:45000.0,&quot;max&quot;:2900000.0},&quot;Hindustan&quot;:{&quot;lowerQuartile&quot;:70000.0,&quot;lowerWhisker&quot;:70000.0,&quot;median&quot;:90000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:750000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:750000.0,&quot;min&quot;:70000.0,&quot;max&quot;:750000.0},&quot;Honda&quot;:{&quot;lowerQuartile&quot;:237500.0,&quot;lowerWhisker&quot;:65000.0,&quot;median&quot;:299499.5,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row875&quot;,&quot;value&quot;:860000.0}],&quot;upperWhisker&quot;:760000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:450000.0,&quot;min&quot;:65000.0,&quot;max&quot;:860000.0},&quot;Hyundai&quot;:{&quot;lowerQuartile&quot;:168000.0,&quot;lowerWhisker&quot;:45000.0,&quot;median&quot;:280000.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row525&quot;,&quot;value&quot;:1000000.0},{&quot;rowKey&quot;:&quot;Row625&quot;,&quot;value&quot;:855000.0},{&quot;rowKey&quot;:&quot;Row816&quot;,&quot;value&quot;:900000.0},{&quot;rowKey&quot;:&quot;Row194&quot;,&quot;value&quot;:895000.0},{&quot;rowKey&quot;:&quot;Row544&quot;,&quot;value&quot;:900000.0},{&quot;rowKey&quot;:&quot;Row418&quot;,&quot;value&quot;:950000.0}],&quot;upperWhisker&quot;:800000.0,&quot;extremeOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row738&quot;,&quot;value&quot;:1200000.0}],&quot;upperQuartile&quot;:424999.0,&quot;min&quot;:45000.0,&quot;max&quot;:1200000.0},&quot;Jaguar&quot;:{&quot;lowerQuartile&quot;:2190000.0,&quot;lowerWhisker&quot;:2190000.0,&quot;median&quot;:2495000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:2800000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:2800000.0,&quot;min&quot;:2190000.0,&quot;max&quot;:2800000.0},&quot;Jeep&quot;:{&quot;lowerQuartile&quot;:950000.0,&quot;lowerWhisker&quot;:950000.0,&quot;median&quot;:950000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:950000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:950000.0,&quot;min&quot;:950000.0,&quot;max&quot;:950000.0},&quot;Land&quot;:{&quot;lowerQuartile&quot;:2100000.0,&quot;lowerWhisker&quot;:2100000.0,&quot;median&quot;:2100000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:2100000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:2100000.0,&quot;min&quot;:2100000.0,&quot;max&quot;:2100000.0},&quot;Mahindra&quot;:{&quot;lowerQuartile&quot;:340000.0,&quot;lowerWhisker&quot;:130000.0,&quot;median&quot;:424500.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row563&quot;,&quot;value&quot;:1299000.0}],&quot;upperWhisker&quot;:1130000.0,&quot;extremeOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row562&quot;,&quot;value&quot;:8500003.0}],&quot;upperQuartile&quot;:699000.0,&quot;min&quot;:130000.0,&quot;max&quot;:8500003.0},&quot;Maruti&quot;:{&quot;lowerQuartile&quot;:130000.0,&quot;lowerWhisker&quot;:30000.0,&quot;median&quot;:240000.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row718&quot;,&quot;value&quot;:970000.0},{&quot;rowKey&quot;:&quot;Row690&quot;,&quot;value&quot;:1000000.0},{&quot;rowKey&quot;:&quot;Row321&quot;,&quot;value&quot;:799999.0}],&quot;upperWhisker&quot;:730000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:370000.0,&quot;min&quot;:30000.0,&quot;max&quot;:1000000.0},&quot;Mercedes&quot;:{&quot;lowerQuartile&quot;:500001.0,&quot;lowerWhisker&quot;:399000.0,&quot;median&quot;:1312500.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:2000000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:1500000.0,&quot;min&quot;:399000.0,&quot;max&quot;:2000000.0},&quot;Mini&quot;:{&quot;lowerQuartile&quot;:1891111.0,&quot;lowerWhisker&quot;:1891111.0,&quot;median&quot;:1891111.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:1891111.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:1891111.0,&quot;min&quot;:1891111.0,&quot;max&quot;:1891111.0},&quot;Mitsubishi&quot;:{&quot;lowerQuartile&quot;:1475000.0,&quot;lowerWhisker&quot;:1475000.0,&quot;median&quot;:1482500.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row694&quot;,&quot;value&quot;:1725000.0}],&quot;upperWhisker&quot;:1540000.0,&quot;extremeOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row528&quot;,&quot;value&quot;:85000.0}],&quot;upperQuartile&quot;:1540000.0,&quot;min&quot;:85000.0,&quot;max&quot;:1725000.0},&quot;Nissan&quot;:{&quot;lowerQuartile&quot;:224999.0,&quot;lowerWhisker&quot;:179000.0,&quot;median&quot;:330000.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row427&quot;,&quot;value&quot;:1200000.0}],&quot;upperWhisker&quot;:499999.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:499999.0,&quot;min&quot;:179000.0,&quot;max&quot;:1200000.0},&quot;Renault&quot;:{&quot;lowerQuartile&quot;:375000.0,&quot;lowerWhisker&quot;:244999.0,&quot;median&quot;:449999.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row688&quot;,&quot;value&quot;:800000.0},{&quot;rowKey&quot;:&quot;Row420&quot;,&quot;value&quot;:715000.0}],&quot;upperWhisker&quot;:689999.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:501000.0,&quot;min&quot;:244999.0,&quot;max&quot;:800000.0},&quot;Skoda&quot;:{&quot;lowerQuartile&quot;:159500.0,&quot;lowerWhisker&quot;:110000.0,&quot;median&quot;:182000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:530000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:349999.0,&quot;min&quot;:110000.0,&quot;max&quot;:530000.0},&quot;Tata&quot;:{&quot;lowerQuartile&quot;:95000.0,&quot;lowerWhisker&quot;:32000.0,&quot;median&quot;:155555.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row485&quot;,&quot;value&quot;:650000.0},{&quot;rowKey&quot;:&quot;Row819&quot;,&quot;value&quot;:600000.0},{&quot;rowKey&quot;:&quot;Row762&quot;,&quot;value&quot;:568500.0}],&quot;upperWhisker&quot;:480000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:275000.0,&quot;min&quot;:32000.0,&quot;max&quot;:650000.0},&quot;Toyota&quot;:{&quot;lowerQuartile&quot;:252500.0,&quot;lowerWhisker&quot;:150000.0,&quot;median&quot;:350000.0,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row734&quot;,&quot;value&quot;:1499000.0},{&quot;rowKey&quot;:&quot;Row483&quot;,&quot;value&quot;:1525000.0},{&quot;rowKey&quot;:&quot;Row494&quot;,&quot;value&quot;:1525000.0}],&quot;upperWhisker&quot;:1074999.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:750000.0,&quot;min&quot;:150000.0,&quot;max&quot;:1525000.0},&quot;Volkswagen&quot;:{&quot;lowerQuartile&quot;:245000.0,&quot;lowerWhisker&quot;:199999.0,&quot;median&quot;:330000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:749999.0,&quot;extremeOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row86&quot;,&quot;value&quot;:1200000.0}],&quot;upperQuartile&quot;:450000.0,&quot;min&quot;:199999.0,&quot;max&quot;:1200000.0},&quot;Volvo&quot;:{&quot;lowerQuartile&quot;:1850000.0,&quot;lowerWhisker&quot;:1850000.0,&quot;median&quot;:1850000.0,&quot;mildOutliers&quot;:[],&quot;upperWhisker&quot;:1850000.0,&quot;extremeOutliers&quot;:[],&quot;upperQuartile&quot;:1850000.0,&quot;min&quot;:1850000.0,&quot;max&quot;:1850000.0}}},&quot;excludedClasses&quot;:{&quot;Price&quot;:[&quot;2012&quot;,&quot;7&quot;,&quot;9&quot;,&quot;Any&quot;,&quot;Commercial&quot;,&quot;I&quot;,&quot;MARUTI&quot;,&quot;Sale&quot;,&quot;Swift&quot;,&quot;TATA&quot;,&quot;Tara&quot;,&quot;URJENT&quot;,&quot;Used&quot;,&quot;Well&quot;,&quot;Yamaha&quot;,&quot;all&quot;,&quot;i&quot;,&quot;scratch&quot;,&quot;sell&quot;,&quot;selling&quot;,&quot;tata&quot;,&quot;urgent&quot;,&quot;very&quot;]},&quot;ignoredMissVals&quot;:{&quot;Price&quot;:{}},&quot;catCol&quot;:&quot;Company name&quot;}"/>
        </config>
        <config key="inObject_1">
            <entry key="jsonValue" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <entry key="warnMessage" type="xstring" value=""/>
    <entry key="errorMessage" type="xstring" value=""/>
</config>
