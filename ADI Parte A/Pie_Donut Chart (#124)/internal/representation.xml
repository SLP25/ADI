<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
    <entry key="jsNamespace" type="xstring" value="knimePieChart"/>
    <config key="jsCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* global d3:false, kt:false, nv:false */%%00010window.knimePieChart = (function () {%%00010    var pie = {};%%00010    var MIN_HEIGHT = 100;%%00010    var MIN_WIDTH = 100;%%00010    var MISSING_VALUES_ONLY = 'missingValuesOnly';%%00010    var NO_DATA_AVAILABLE = 'noDataAvailable';%%00010%%00010    var _representation,%%00010        _value,%%00010        layoutContainer,%%00010        chart,%%00010        svg,%%00010        knimeTable,%%00010        plotData,%%00010        excludeCat,%%00010        missValCatValue,%%00010        _translator,%%00010        _keyNameMap,%%00010        _incomingTable,%%00010        showWarnings,%%00010%%00010        /**%%00010         * Function declarations%%00010         */%%00010        subscribeToSelection, drawChart, drawControls, getClusterToRowMapping, sortByClusterName, processData,%%00010        setColorRange, setCssClasses, redrawSelection, removeHilightBar, setTooltipCssClasses, hideTooltips,%%00010        updateTitles, publishSelection, handleHighlightClick, createHilightBar, checkClearSelectionButton,%%00010        onSelectionChanged, getSelectedRowIDs, selectCorrectBar, processMissingValues, colorScale, // updateData%%00010%%00010        /**%%00010         * Helper classes%%00010         */%%00010        KeyNameMap;%%00010%%00010    pie.init = function (representation, value) {%%00010        _representation = representation;%%00010        _value = value;%%00010        _incomingTable = _representation.inObjects[0].table;%%00010%%00010        if (_representation.options.enableSelection &amp;&amp; _representation.inObjects[0].translator) {%%00010            _translator = _representation.inObjects[0].translator;%%00010            _translator.sourceID = _representation.inObjects[0].uuid;%%00010            _translator.targetIDs = [_representation.tableIds[0]];%%00010            knimeService.registerSelectionTranslator(_translator, _translator.sourceID);%%00010            subscribeToSelection(_value.options.subscribeToSelection);%%00010        }%%00010%%00010        showWarnings = _representation.options.showWarnings;%%00010%%00010        if (_representation.warnMessage &amp;&amp; showWarnings) {%%00010            knimeService.setWarningMessage(_representation.warnMessage);%%00010        }%%00010%%00010        drawChart(false);%%00010        if (_representation.options.enableViewControls) {%%00010            drawControls();%%00010        }%%00010        _keyNameMap = new KeyNameMap(getClusterToRowMapping());%%00010    };%%00010%%00010    drawChart = function (redraw) {%%00010        // Parse the options%%00010        var optTitle = _value.options.title;%%00010        var optSubtitle = _value.options.subtitle;%%00010%%00010        var showLabels = _value.options.showLabels;%%00010        var labelThreshold = _representation.options.labelThreshold;%%00010        var labelType = _value.options.labelType.toLowerCase();%%00010%%00010        var optDonutChart = _value.options.togglePie;%%00010        var holeSize = _value.options.holeSize;%%00010        var optInsideTitle = _value.options.insideTitle;%%00010%%00010        var showLegend = _representation.options.legend;%%00010%%00010        var optFullscreen = _representation.options.svg.fullscreen &amp;&amp; _representation.runningInView;%%00010        var optWidth = _representation.options.svg.width;%%00010        var optHeight = _representation.options.svg.height;%%00010%%00010        var optEnableSelection = _representation.options.enableSelection;%%00010%%00010        var isTitle = optTitle || optSubtitle;%%00010%%00010        /*%%00010         * Setup interactive controls%%00010         */%%00010%%00010        d3.select('html').style('width', '100%').style('height', '100%');%%00010        d3.select('body').style('width', '100%').style('height', '100%');%%00010%%00010        var body = d3.select('body');%%00010%%00010        var width = optWidth + 'px';%%00010        var height = optHeight + 'px';%%00010        if (optFullscreen) {%%00010            width = '100%';%%00010            height = isTitle ? '100%' : 'calc(100% - ' + knimeService.headerHeight() + 'px)';%%00010        }%%00010%%00010        var div;%%00010        if (redraw) {%%00010            d3.select('svg').remove();%%00010            div = d3.select('#svgContainer');%%00010        } else {%%00010            layoutContainer = body.append('div').attr('id', 'layoutContainer').attr('class', 'knime-layout-container')%%00010                .style('width', width).style('height', height).style('min-width', MIN_WIDTH + 'px').style('min-height',%%00010                    MIN_HEIGHT + 'px');%%00010%%00010            div = layoutContainer.append('div').attr('id', 'svgContainer').attr('class', 'knime-svg-container').style(%%00010                'min-width', MIN_WIDTH + 'px').style('min-height', MIN_HEIGHT + 'px');%%00010        }%%00010%%00010        /*%%00010         * Process data%%00010         */%%00010        knimeTable = new kt();%%00010        // Add the data from the input port to the knimeTable.%%00010        var port0dataTable = _representation.inObjects[0].table;%%00010        port0dataTable.rows = sortByClusterName(port0dataTable.rows);%%00010        knimeTable.setDataTable(port0dataTable);%%00010%%00010        processData(true);%%00010        setColorRange();%%00010%%00010        // Create the SVG object%%00010        var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010        div[0][0].appendChild(svg1);%%00010%%00010        svg = d3.select('svg').style('display', 'block');%%00010%%00010        if (optFullscreen) {%%00010            // Set full screen height/width%%00010            div.style('width', '100%');%%00010            div.style('height', height);%%00010%%00010            svg.attr('width', '100%');%%00010        } else {%%00010            svg.attr('height', '100%');%%00010            if (optWidth &gt; 0) {%%00010                div.style('width', optWidth + 'px');%%00010                svg.attr('width', optWidth);%%00010            }%%00010            if (optHeight &gt; 0) {%%00010                svg.attr('height', optHeight);%%00010                div.style('height', optHeight + 'px');%%00010            }%%00010        }%%00010%%00010        // Pie chart%%00010        nv.addGraph(function () {%%00010            chart = nv.models.pieChart().x(function (d) {%%00010                return d.label;%%00010            }).y(function (d) {%%00010                return d.value;%%00010            }).color(function(category){%%00010                return colorScale(category.label);%%00010            }).duration(0).showLegend(showLegend).showLabels(showLabels).labelThreshold(%%00010                labelThreshold).labelType(labelType); // &quot;key&quot;, &quot;value&quot; or &quot;percent&quot;%%00010%%00010            chart.dispatch.on('renderEnd.css', function () {%%00010                setCssClasses();%%00010                redrawSelection();%%00010            });%%00010            // tooltip is re-created every time therefore we need to assign classes accordingly%%00010            chart.pie.dispatch.on('elementMouseover.tooltipCss', setTooltipCssClasses);%%00010            chart.pie.dispatch.on('elementMouseout.tooltipCss', hideTooltips);%%00010            chart.pie.dispatch.on('elementMousemove.tooltipCss', setTooltipCssClasses);%%00010            chart.pie.dispatch.on('elementMouseout.tooltipCss', hideTooltips);%%00010            chart.legend.dispatch.on('legendClick', function (series, index) {%%00010                // drawChart(true);%%00010                removeHilightBar('', true);%%00010                d3.event.stopPropagation();%%00010            });%%00010%%00010            chart.width(optFullscreen ? '100%' : optWidth);%%00010            chart.height(optFullscreen ? '100%' : optHeight);%%00010            chart.margin({%%00010                top: 0,%%00010                bottom: 0,%%00010                left: 20,%%00010                right: 0%%00010            });%%00010%%00010            // TODO: Add a mechanism to remember the categories that are%%00010            // switched on.%%00010%%00010            chart.donut(optDonutChart);%%00010            chart.donutRatio(holeSize);%%00010            if (optInsideTitle) {%%00010                chart.title(optInsideTitle);%%00010            }%%00010            updateTitles(false);%%00010%%00010            // checking if all the pies are 0s%%00010            if (plotData.filter(function (d) {%%00010                return d.value !== 0;%%00010            }).length === 0) {%%00010                svg.append('text').attr('x', 20).attr('y', 80).attr('font-size', 20).attr('fill', 'red').text(%%00010                    'The plot is empty because all values are equal to 0.');%%00010            } else {%%00010                svg.datum(plotData).transition().duration(0).call(chart);%%00010            }%%00010            // nv.utils.windowResize(chart.update);%%00010            nv.utils.windowResize(function () {%%00010                chart.update();%%00010                removeHilightBar('', true);%%00010                redrawSelection();%%00010            });%%00010%%00010            if (optEnableSelection) {%%00010                svg.on('click', function () {%%00010                    removeHilightBar('', true);%%00010                    _value.options.selection = [];%%00010                    publishSelection(true);%%00010                });%%00010            }%%00010%%00010            // redraws selection%%00010            redrawSelection();%%00010%%00010            return chart;%%00010        });%%00010    };%%00010%%00010    sortByClusterName = function (array) {%%00010        return array.sort(function (a, b) {%%00010            var x = a.data[0];%%00010            var y = b.data[0];%%00010%%00010            // Make sure, that missing values are displayed last%%00010            if (x === null) {%%00010                return 1;%%00010            } else if (y === null) {%%00010                return -1;%%00010            }%%00010%%00010            if (typeof x === 'string') {%%00010                x = (String(x)).toLowerCase();%%00010            }%%00010            if (typeof y === 'string') {%%00010                y = (String(y)).toLowerCase();%%00010            }%%00010            return ((x &lt; y) ? -1 : ((x &gt; y) ? 1 : 0));%%00010        });%%00010    };%%00010%%00010    function registerClickHandler() {%%00010        d3.selectAll('.nv-slice').on('click', function (event) {%%00010            handleHighlightClick(event);%%00010            d3.event.stopPropagation();%%00010        });%%00010    }%%00010%%00010    redrawSelection = function () {%%00010        var length = _value.options.selection ? _value.options.selection.length : 0;%%00010        for (var i = 0; i &lt; length; i++) {%%00010            createHilightBar(_keyNameMap.getNameFromKey(_value.options.selection[i][0]),%%00010                _value.options.selection[i][1]);%%00010        }%%00010    };%%00010%%00010    subscribeToSelection = function (subscribeBool) {%%00010        if (_representation.options.enableSelection) {%%00010            if (subscribeBool) {%%00010                knimeService.subscribeToSelection(_translator.sourceID, onSelectionChanged);%%00010            } else {%%00010                knimeService.unsubscribeSelection(_translator.sourceID, onSelectionChanged);%%00010            }%%00010        }%%00010    };%%00010%%00010    publishSelection = function (shouldPublish) {%%00010        if (shouldPublish) {%%00010            knimeService.setSelectedRows(_translator.sourceID, getSelectedRowIDs(), _translator.sourceID);%%00010        }%%00010    };%%00010%%00010    checkClearSelectionButton = function () {%%00010        var button = d3.select('#clearSelectionButton');%%00010        if (button) {%%00010            button.classed('inactive', function () {%%00010                return !_value.options.selection.length &gt; 0;%%00010            });%%00010        }%%00010    };%%00010%%00010    getSelectedRowIDs = function () {%%00010        if (_value.options.selection) {%%00010            var selectedRowIDs = [];%%00010            for (var i = 0; i &lt; _value.options.selection.length; i++) {%%00010                selectedRowIDs.push(_value.options.selection[i][0]);%%00010            }%%00010            return selectedRowIDs;%%00010        } else {%%00010            return [];%%00010        }%%00010    };%%00010%%00010    // Removes the clusterName with the given cluster name. If &quot;removeAll&quot; is true all bars are removed%%00010    removeHilightBar = function (clusterName, removeAll) {%%00010        if (removeAll) {%%00010            var length = _value.options.selection ? _value.options.selection.length : 0;%%00010            for (var i = 0; i &lt; length; i++) {%%00010                d3.selectAll('.hilightBar').remove();%%00010            }%%00010        } else {%%00010            var barIndex = getSelectedRowIDs().indexOf(_keyNameMap.getKeyFromName(clusterName));%%00010            if (barIndex &gt; -1) {%%00010                let pie = selectCorrectBar(clusterName);%%00010                if (pie) {%%00010                    pie.remove();%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    selectCorrectBar = function (clusterName) {%%00010        let allSlices = d3.selectAll('.nv-slice');%%00010        for (var j = 0; j &lt; allSlices[0].length; j++) {%%00010            if (d3.select(allSlices[0][j]).data()[0].data.label === clusterName) {%%00010                return d3.select(allSlices[0][j]).select('.hilightBar');%%00010            }%%00010        }%%00010        return null;%%00010    };%%00010%%00010    // Create a hilight-bar above the cluster with the given name and assigns the given css class to it%%00010    createHilightBar = function (clusterName, selectionClass) {%%00010        for (var j = 0; j &lt; plotData.length; j++) {%%00010            if (plotData[j].label === clusterName) {%%00010                var slices = d3.selectAll('.nv-slice');%%00010                for (var i = 0; i &lt; slices[0].length; i++) {%%00010                    if (i === j) {%%00010                        var slice = d3.select(slices[0][i]).select('path');%%00010                        var availableWidth = chart.width() - 20;%%00010                        var availableHeight = chart.height();%%00010                        var radius = Math.min(availableWidth, availableHeight) / 2;%%00010                        var selectionTitle;%%00010                        if (selectionClass === 'knime-selected') {%%00010                            selectionTitle = 'Selected';%%00010                        } else {%%00010                            selectionTitle = 'Partially selected';%%00010                        }%%00010                        // PieChart Code%%00010                        var arc = d3.svg.arc().innerRadius((radius - radius / 5))%%00010                            .outerRadius((radius - radius / 5) + 8).startAngle(slice.data()[0].startAngle) // converting%%00010                                                                                                            // from degs%%00010                                                                                                            // to%%00010                                                                                                            // radians%%00010                            .endAngle(slice.data()[0].endAngle); // just radians%%00010                        slice.select(function () {%%00010                            return this.parentNode;%%00010                        }).append('path').attr('d', arc).classed('hilightBar', true).classed(selectionClass, true)%%00010                            .append('title').classed('knime-tooltip', true).text(selectionTitle);%%00010                    }%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    getClusterToRowMapping = function () {%%00010        var map = {};%%00010        for (var i = 0; i &lt; _incomingTable.rows.length; i++) {%%00010            if (_incomingTable.rows[i].data[0]) {%%00010                map[_incomingTable.rows[i].data[0]] = _incomingTable.rows[i].rowKey;%%00010            } else {%%00010                map['Missing values'] = _incomingTable.rows[i].rowKey;%%00010            }%%00010        }%%00010        return map;%%00010    };%%00010%%00010    // Helper class to handle conversion from cluster name to row key%%00010    KeyNameMap = function (map) {%%00010        this.map = map;%%00010        this.reverseMap = {};%%00010        for (var key in map) {%%00010            var value = map[key];%%00010            this.reverseMap[value] = key;%%00010        }%%00010    };%%00010%%00010    KeyNameMap.prototype.getKeyFromName = function (name) {%%00010        return this.map[name];%%00010    };%%00010%%00010    KeyNameMap.prototype.getNameFromKey = function (key) {%%00010        return this.reverseMap[key];%%00010    };%%00010%%00010    handleHighlightClick = function (event) {%%00010        if (!_value.options.selection) {%%00010            _value.options.selection = [];%%00010        }%%00010        var clusterName = event.data.label;%%00010        var clusterKey = _keyNameMap.getKeyFromName(clusterName);%%00010        var barIndex = getSelectedRowIDs().indexOf(clusterKey);%%00010        // Deselect already selected bar when clicking again on it%%00010        if (barIndex &gt; -1 &amp;&amp; (d3.event.ctrlKey || d3.event.shiftKey || d3.event.metaKey)) {%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.removeRowsFromSelection(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            removeHilightBar(clusterName, false);%%00010            _value.options.selection.splice(barIndex, 1);%%00010        } else if (!d3.event.ctrlKey &amp;&amp; !d3.event.shiftKey &amp;&amp; !d3.event.metaKey) {%%00010            // Deselect all previously selected bars and select the newly clicked one%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.setSelectedRows(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            removeHilightBar(clusterName, true);%%00010            _value.options.selection = [];%%00010            createHilightBar(clusterName, 'knime-selected');%%00010            _value.options.selection.push([clusterKey, 'knime-selected']);%%00010        } else {%%00010            // Select the clicked bar, as it is either a new selection or a additional selection%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.addRowsToSelection(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            createHilightBar(clusterName, 'knime-selected');%%00010            _value.options.selection.push([clusterKey, 'knime-selected']);%%00010        }%%00010        checkClearSelectionButton();%%00010    };%%00010%%00010    onSelectionChanged = function (data) {%%00010        if (!_value.options.selection) {%%00010            _value.options.selection = [];%%00010        }%%00010        if (data.reevaluate) {%%00010            removeHilightBar('', true);%%00010            var selectedRows = knimeService.getAllRowsForSelection(_translator.sourceID);%%00010            var partiallySelectedRows = knimeService.getAllPartiallySelectedRows(_translator.sourceID);%%00010            _value.options.selection = [];%%00010            for (let selectedRow in selectedRows) {%%00010                let length = _value.options.selection.length;%%00010                _value.options.selection[length] = [selectedRows[selectedRow], 'knime-selected'];%%00010                createHilightBar(_keyNameMap.getNameFromKey(selectedRows[selectedRow]), 'knime-selected');%%00010            }%%00010            for (let partiallySelectedRow in partiallySelectedRows) {%%00010                let length = _value.options.selection.length;%%00010                _value.options.selection[length] = [partiallySelectedRows[partiallySelectedRow],%%00010                    'knime-partially-selected'];%%00010                createHilightBar(_keyNameMap.getNameFromKey(partiallySelectedRows[partiallySelectedRow]),%%00010                    'knime-partially-selected');%%00010            }%%00010        } else if (data.changeSet) {%%00010            if (data.changeSet.removed) {%%00010                data.changeSet.removed.map(function (rowId) {%%00010                    var clusterName = rowId;%%00010                    var index = getSelectedRowIDs().indexOf(clusterName);%%00010                    if (index &gt; -1) {%%00010                        removeHilightBar(_keyNameMap.getNameFromKey(rowId), false);%%00010                        _value.options.selection.splice(index, 1);%%00010                    }%%00010                    return null;%%00010                });%%00010            }%%00010            if (data.changeSet.partialRemoved) {%%00010                data.changeSet.partialRemoved.map(function (rowId) {%%00010                    var clusterName = rowId;%%00010                    var index = getSelectedRowIDs().indexOf(clusterName);%%00010                    if (index &gt; -1) {%%00010                        removeHilightBar(_keyNameMap.getNameFromKey(rowId), false);%%00010                        _value.options.selection.splice(index, 1);%%00010                    }%%00010                    return null;%%00010                });%%00010            }%%00010            if (data.changeSet.added) {%%00010                data.changeSet.added.map(function (rowId) {%%00010                    var index = getSelectedRowIDs().indexOf(rowId);%%00010                    if (index === -1) {%%00010                        _value.options.selection.push([rowId, 'knime-selected']);%%00010                        createHilightBar(_keyNameMap.getNameFromKey(rowId), 'knime-selected');%%00010                    }%%00010                    return null;%%00010                });%%00010            }%%00010            if (data.changeSet.partialAdded) {%%00010                data.changeSet.partialAdded.map(function (rowId) {%%00010                    var index = getSelectedRowIDs().indexOf(rowId);%%00010                    if (index === -1) {%%00010                        _value.options.selection.push([rowId, 'knime-partially-selected']);%%00010                        createHilightBar(_keyNameMap.getNameFromKey(rowId), 'knime-partially-selected');%%00010                    }%%00010                    return null;%%00010                });%%00010            }%%00010        }%%00010        checkClearSelectionButton();%%00010    };%%00010%%00010    /*%%00010     * updateData = function (updateChart) { processData(); if (updateChart) { chart.update(); } };%%00010     */%%00010%%00010    updateTitles = function (updateChart) {%%00010        if (chart) {%%00010            var curTitle = d3.select('#title');%%00010            var curSubtitle = d3.select('#subtitle');%%00010            var chartNeedsUpdating = curTitle.empty() !== !_value.options.title ||%%00010                curSubtitle.empty() !== !_value.options.subtitle;%%00010            if (!_value.options.title) {%%00010                curTitle.remove();%%00010            }%%00010            if (_value.options.title) {%%00010                if (curTitle.empty()) {%%00010                    svg.append('text').attr('x', 20).attr('y', 30).attr('id', 'title').attr('class', 'knime-title')%%00010                        .text(_value.options.title);%%00010                } else {%%00010                    curTitle.text(_value.options.title);%%00010                }%%00010            }%%00010            if (!_value.options.subtitle) {%%00010                curSubtitle.remove();%%00010            }%%00010            if (_value.options.subtitle) {%%00010                if (curSubtitle.empty()) {%%00010                    svg.append('text').attr('x', 20).attr('y', _value.options.title ? 46 : 20).attr('id', 'subtitle')%%00010                        .attr('class', 'knime-subtitle').text(_value.options.subtitle);%%00010                } else {%%00010                    curSubtitle.text(_value.options.subtitle).attr('y', _value.options.title ? 46 : 20);%%00010                }%%00010            }%%00010%%00010            var topMargin = 10;%%00010            topMargin += _value.options.title ? 10 : 0;%%00010            topMargin += _value.options.subtitle ? 8 : 0;%%00010            chart.legend.margin({%%00010                top: topMargin,%%00010                bottom: topMargin%%00010            });%%00010            chart.margin({%%00010                top: topMargin,%%00010                bottom: topMargin%%00010            });%%00010%%00010            var isTitle = _value.options.title || _value.options.subtitle;%%00010            knimeService.floatingHeader(isTitle);%%00010%%00010            if (updateChart &amp;&amp; chartNeedsUpdating) {%%00010                if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010                    var height = isTitle ? '100%' : 'calc(100% - ' + knimeService.headerHeight() + 'px)';%%00010                    layoutContainer.style('height', height)%%00010                    // two rows below force to invalidate the container which solves a weird problem with vertical%%00010                    // scroll bar in IE%%00010                    .style('display', 'none').style('display', 'block');%%00010                    d3.select('#svgContainer').style('height', height);%%00010                }%%00010                chart.update();%%00010            }%%00010        }%%00010    };%%00010%%00010    processData = function (setColorRange) {%%00010        var optMethod = _representation.options.aggr;%%00010        var optCat = _representation.options.cat;%%00010        var optFreqCol = _value.options.freq;%%00010%%00010        var categories = knimeTable.getColumn(optCat);%%00010%%00010        var valCol;%%00010        if (optMethod === 'Occurence\u00A0Count') {%%00010            valCol = knimeTable.getColumn(1);%%00010        } else {%%00010            valCol = knimeTable.getColumn(optFreqCol);%%00010        }%%00010%%00010        plotData = [];%%00010        excludeCat = [];%%00010        missValCatValue = null;%%00010        if (valCol.length &gt; 0) {%%00010            var numDataPoints = valCol.length;%%00010            for (var i = 0; i &lt; numDataPoints; i++) {%%00010                var label = categories[i];%%00010                var value = valCol[i];%%00010%%00010                if (label === null) {%%00010                    // missing values category%%00010                    // save the value to append as the last item%%00010                    missValCatValue = value;%%00010                    continue;%%00010                }%%00010%%00010                if (value === null) {%%00010                    // category has only missing values - exclude it%%00010                    excludeCat.push(label);%%00010                    continue;%%00010                }%%00010%%00010                var plotStream = {%%00010                    label: label,%%00010                    value: Math.abs(value)%%00010                // take abs value to prevent a damaged plot%%00010                };%%00010                plotData.push(plotStream);%%00010            }%%00010        }%%00010%%00010        processMissingValues(false);%%00010    };%%00010%%00010    setColorRange = function () {%%00010        var numCat = plotData.length;%%00010        if (missValCatValue !== null) {%%00010            // We don't want the option &quot;includeMissValCat&quot; to influence on the number of categories,%%00010            // because the option can be changed in the view and the color scale then can also be changed (if a border%%00010            // case) - and we don't want this.%%00010            // Hence, only the real value matters.%%00010            numCat++;%%00010        }%%00010        if (_representation.options.customColors) {%%00010            var colorRange = [];%%00010            var possibleValues = [];%%00010            colorRange = _representation.inObjects[0].table.spec.colorModels[0].colors;%%00010            possibleValues = _representation.inObjects[0].table.spec.colorModels[0].labels;%%00010            if (_representation.options.enableSwitchMissValCat) {%%00010                colorRange.push('#7C7C7C');%%00010                possibleValues.push('Missing values');%%00010            }%%00010            colorScale = d3.scale.ordinal().domain(possibleValues)%%00010                .range(colorRange);%%00010        } else {%%00010            if (numCat &gt; 10) {%%00010                colorScale = d3.scale.category20();%%00010            } else {%%00010                colorScale = d3.scale.category10();%%00010            }%%00010        }%%00010    };%%00010%%00010    /**%%00010     * switched - if the chart update was triggered by changing the &quot;include 'Missing values' category&quot; option in the%%00010     * view%%00010     */%%00010    processMissingValues = function (switched) {%%00010        // Missing values post-processing%%00010        if (missValCatValue !== null) { // null means there's no missing value in the category column at%%00010                                                // all%%00010            if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                // add missing values category%%00010                var label = 'Missing values';%%00010                if (missValCatValue === null) {%%00010                    excludeCat.push(label);%%00010                } else {%%00010                    plotData.push({%%00010                        label: label,%%00010                        value: missValCatValue%%00010                    });%%00010                }%%00010            } else if (switched) {%%00010                // remove missing values category, but only if we have triggered switch from the view%%00010                // otherwise there's nothing to remove yet%%00010                if (missValCatValue === null) {%%00010                    excludeCat.pop();%%00010                } else {%%00010                    plotData.pop();%%00010                }%%00010            }%%00010        }%%00010%%00010        // Set warning messages%%00010        if (!showWarnings) {%%00010            return;%%00010        }%%00010        if (plotData.length === 0) {%%00010            // No data available warnings%%00010            var str;%%00010            if (missValCatValue !== null &amp;&amp;%%00010                _representation.options.reportOnMissingValues) {%%00010                str = 'No chart was generated since the frequency column has only missing values.\n ' +%%00010                'There are values where the category name is missing.\nTo see them switch on the option' +%%00010                '&quot;Include \'Missing values\' category&quot; in the view settings.';%%00010            } else {%%00010                str = 'No chart was generated since the frequency column has only missing values or empty.\n' +%%00010                'Re-run the workflow with different data.';%%00010            }%%00010            knimeService.setWarningMessage(str, NO_DATA_AVAILABLE);%%00010        } else if (excludeCat.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            knimeService.setWarningMessage('Categories \'' + excludeCat.join('\', \'') +%%00010                '\' have only missing values in the frequency column and were excluded from the view.',%%00010                MISSING_VALUES_ONLY);%%00010        } else {%%00010            knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010        }%%00010    };%%00010%%00010    // eslint-disable-next-line%%00010    drawControls = function () {%%00010        if (!knimeService) {%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.displayFullscreenButton) {%%00010            knimeService.allowFullscreen();%%00010        }%%00010%%00010        if (!_representation.options.enableViewControls) {%%00010            return;%%00010        }%%00010%%00010        var titleEdit = _representation.options.enableTitleEdit;%%00010        var subtitleEdit = _representation.options.enableSubtitleEdit;%%00010        var donutToggle = _representation.options.enableDonutToggle;%%00010        var holeEdit = _representation.options.enableHoleEdit;%%00010        // var insideTitleEdit = _representation.options.enableInsideTitleEdit;%%00010        // var colChooser = _representation.options.enableColumnChooser;%%00010        var labelEdit = _representation.options.enableLabelEdit;%%00010        var switchMissValCat = _representation.options.enableSwitchMissValCat;%%00010        var enableSelection = _representation.options.enableSelection;%%00010        var displayClearButton = _representation.options.displayClearSelectionButton;%%00010%%00010        if (titleEdit || subtitleEdit) {%%00010            if (titleEdit) {%%00010                var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title,%%00010                    function () {%%00010                        if (_value.options.title !== this.value) {%%00010                            _value.options.title = this.value;%%00010                            updateTitles(true);%%00010                        }%%00010                    }, true);%%00010                knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010            }%%00010            if (subtitleEdit) {%%00010                var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle,%%00010                    function () {%%00010                        if (_value.options.subtitle !== this.value) {%%00010                            _value.options.subtitle = this.value;%%00010                            updateTitles(true);%%00010                        }%%00010                    }, true);%%00010                knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null,%%00010                    knimeService.SMALL_ICON);%%00010            }%%00010            if (/* colChooser || */labelEdit || donutToggle || holeEdit /* || insideTitleEdit */) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        /*%%00010         * if (colChooser) { // filter out non number columns var colNames = _representation.inObjects[0].spec.colNames;%%00010         * var colTypes = _representation.inObjects[0].spec.colTypes; var numberColumns = []; for (var i = 0; i &lt;%%00010         * colNames.length; i++) { if (colTypes[i] == &quot;number&quot;) { numberColumns.push(colNames[i]); } } var colSelect =%%00010         * knimeService.createMenuSelect('columnSelect', _value.options.freq, numberColumns, function() {%%00010         * _value.options.freq = this.value; updateData(true); }); knimeService.addMenuItem('Column:', 'minus-square%%00010         * fa-rotate-90', colSelect);%%00010         *%%00010         * if (labelEdit || donutToggle || holeEdit || insideTitleEdit) { knimeService.addMenuDivider(); } }%%00010         */%%00010%%00010        if (labelEdit) {%%00010            var labelCbx = knimeService.createMenuCheckbox('labelCbx', _value.options.showLabels, function () {%%00010                if (_value.options.showLabels !== this.checked) {%%00010                    _value.options.showLabels = this.checked;%%00010                    chart.showLabels(this.checked);%%00010                    d3.selectAll('#labelType input').property('disabled', !_value.options.showLabels);%%00010                    // workaround for nvd3 bug, remove labels manually%%00010                    if (!this.checked) {%%00010                        d3.selectAll('.nv-pieLabels *').remove();%%00010                    }%%00010                    chart.update();%%00010                }%%00010            });%%00010            knimeService.addMenuItem('Show labels:', 'comment-o', labelCbx);%%00010%%00010            var labelTypeRadio = knimeService.createInlineMenuRadioButtons('labelType', 'labelType', 'Value', ['Key',%%00010                'Value', 'Percent'], function () {%%00010                    _value.options.labelType = this.value;%%00010                    chart.labelType(this.value.toLowerCase());%%00010                    chart.update();%%00010                });%%00010            knimeService.addMenuItem('Label type:', 'commenting-o', labelTypeRadio);%%00010%%00010            if (switchMissValCat || donutToggle || holeEdit) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (switchMissValCat &amp;&amp; missValCatValue !== null &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            var switchMissValCatCbx = knimeService.createMenuCheckbox('switchMissValCatCbx',%%00010                _value.options.includeMissValCat, function () {%%00010                    if (_value.options.includeMissValCat !== this.checked) {%%00010                        _value.options.includeMissValCat = this.checked;%%00010                        processMissingValues(true);%%00010                        chart.update();%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Include \'Missing values\' category: ', 'question', switchMissValCatCbx);%%00010%%00010            if (donutToggle || holeEdit) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (donutToggle || holeEdit /* || insideTitleEdit */) {%%00010            if (donutToggle) {%%00010                var donutCbx = knimeService.createMenuCheckbox('donutCbx', _value.options.togglePie, function () {%%00010                    if (_value.options.togglePie !== this.checked) {%%00010                        _value.options.togglePie = this.checked;%%00010                        chart.donut(this.checked);%%00010                        d3.selectAll('#insideTitleText, #holeRatioText')%%00010                            .property('disabled', !_value.options.togglePie);%%00010                        chart.update();%%00010                    }%%00010                });%%00010                knimeService.addMenuItem('Render donut chart:', knimeService.createStackedIcon('gear', 'circle-o'),%%00010                    donutCbx);%%00010            }%%00010%%00010            if (holeEdit) {%%00010                var holeRatioText = knimeService.createMenuTextField('holeRatioText', _value.options.holeSize,%%00010                    function () {%%00010                        if (this.value &lt; 0) {%%00010                            this.value = 0;%%00010                        } else if (this.value &gt; 1) {%%00010                            this.value = 1;%%00010                        }%%00010                        chart.donutRatio(this.value);%%00010                        chart.update();%%00010                    }, true);%%00010                holeRatioText.setAttribute('type', 'number');%%00010                holeRatioText.setAttribute('min', 0);%%00010                holeRatioText.setAttribute('max', 1);%%00010                holeRatioText.setAttribute('step', 0.1);%%00010                holeRatioText.disabled = !_value.options.togglePie;%%00010                knimeService.addMenuItem('Donut hole ratio:', 'adjust', holeRatioText);%%00010            }%%00010%%00010            /*%%00010             * if (insideTitleEdit) { var insideTitleText = knimeService.createMenuTextField('insideTitleText',%%00010             * _value.options.insideTitle, function() { if (_value.options.insideTitle != this.value) {%%00010             * _value.options.insideTitle = this.value; chart.title(this.value); chart.update(); } }, true);%%00010             * insideTitleText.disabled = !_value.options.togglePie; knimeService.addMenuItem('Title inside:', 'header',%%00010             * insideTitleText, null, knimeService.SMALL_ICON); }%%00010             */%%00010%%00010            if (enableSelection) {%%00010                knimeService.addMenuDivider();%%00010                var subscribeToSelectionIcon = knimeService.createStackedIcon('check-square-o', 'angle-double-right',%%00010                    'faded right sm', 'left bold');%%00010                var subscribeToSelectionMenu = knimeService.createMenuCheckbox('subscribeToSelection',%%00010                    _value.options.subscribeToSelection, function () {%%00010                        if (_value.options.subscribeToSelection !== this.checked) {%%00010                            _value.options.subscribeToSelection = this.checked;%%00010                            subscribeToSelection(_value.options.subscribeToSelection);%%00010                        }%%00010                    });%%00010                knimeService.addMenuItem('Subscribe to selection:', subscribeToSelectionIcon, subscribeToSelectionMenu);%%00010%%00010                var publishSelectionIcon = knimeService.createStackedIcon('check-square-o', 'angle-right',%%00010                    'faded left sm', 'right bold');%%00010                var publishSelectionMenu = knimeService.createMenuCheckbox('publishSelection',%%00010                    _value.options.publishSelection, function () {%%00010                        if (_value.options.publishSelection !== this.checked) {%%00010                            _value.options.publishSelection = this.checked;%%00010                            publishSelection(this.checked);%%00010                        }%%00010                    });%%00010                knimeService.addMenuItem('Publish selection:', publishSelectionIcon, publishSelectionMenu);%%00010            }%%00010%%00010            if (displayClearButton &amp;&amp; _representation.options.enableSelection) {%%00010                knimeService.addButton('clearSelectionButton', 'minus-square-o', 'Clear selection', function () {%%00010                    d3.selectAll('.row').classed({%%00010                        selected: false,%%00010                        'knime-selected': false,%%00010                        unselected: false%%00010                    });%%00010                    removeHilightBar('', true);%%00010                    _value.options.selection = [];%%00010                    publishSelection(true);%%00010                });%%00010                d3.select('#clearSelectionButton').classed('inactive', true);%%00010            }%%00010        }%%00010    };%%00010%%00010    setCssClasses = function () {%%00010        d3.selectAll('.nv-label').classed('knime-label', true);%%00010%%00010        // legend%%00010        d3.selectAll('.nv-legendWrap')%%00010            .classed('knime-legend', true);%%00010        d3.selectAll('.nv-legend-symbol')%%00010            .classed('knime-legend-symbol', true);%%00010        d3.selectAll('.nv-legend-text')%%00010            .classed('knime-legend-label', true);%%00010        if (_representation.options.enableSelection) {%%00010            registerClickHandler();%%00010        }%%00010    };%%00010%%00010    setTooltipCssClasses = function () {%%00010        // tooltip%%00010        var tooltip = d3.selectAll('.nvtooltip')%%00010            .style('display', 'block')%%00010            .classed('knime-tooltip', true);%%00010        tooltip.selectAll('.x-value')%%00010            .classed('knime-tooltip-caption', true)%%00010            .classed('knime-x', true);%%00010        tooltip.selectAll('.legend-color-guide')%%00010            .classed('knime-tooltip-color', true);%%00010        tooltip.selectAll('.key')%%00010            .classed('knime-tooltip-key', true);%%00010        tooltip.selectAll('.value')%%00010            .classed('knime-tooltip-value', true);%%00010    };%%00010    %%00010    hideTooltips = function () {%%00010        d3.selectAll('.nvtooltip').style('display', 'none');%%00010    };%%00010%%00010    pie.validate = function () {%%00010        return true;%%00010    };%%00010%%00010    pie.getComponentValue = function () {%%00010        return _value;%%00010    };%%00010%%00010    pie.getSVG = function () {%%00010        // correct faulty rect elements%%00010        d3.selectAll('rect').each(function () {%%00010            var rect = d3.select(this);%%00010            if (!rect.attr('width')) {%%00010                rect.attr('width', 0);%%00010            }%%00010            if (!rect.attr('height')) {%%00010                rect.attr('height', 0);%%00010            }%%00010        });%%00010%%00010        var svgElement = d3.select('svg')[0][0];%%00010        knimeService.inlineSvgStyles(svgElement);%%00010%%00010        // Return the SVG as a string.%%00010        return (new XMLSerializer()).serializeToString(svgElement);%%00010    };%%00010%%00010    return pie;%%00010%%00010})();%%00010"/>
    </config>
    <config key="cssCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="text.knime-tick-label.knime-selected {%%00010%%00009font-weight: bold;%%00010}%%00010path.knime-selected {%%00010%%00009fill: orange;%%00010%%00009%%00010}%%00010path.knime-partially-selected {%%00010%%00009fill: grey;%%00010}%%00010text.knime-tick-label.knime-partially-selected {%%00010%%00009font-weight: bold;%%00010}%%00010%%00010path.nv-bar.positive {%%00010%%00009cursor:pointer;%%00010}%%00010/* Overwrite the default title fill of pie/donut chart because the default has bad contrast */%%00010.nvd3.nv-pie text.nv-pie-title {%%00010%%00009fill: black;%%00010}"/>
    </config>
    <config key="jsDependencies">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="dependency_0">
            <entry key="name" type="xstring" value="nvd3"/>
            <entry key="path" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" value="nv"/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="1"/>
                <entry key="0" type="xstring" value="D3_3.5.5"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
        <config key="dependency_1">
            <entry key="name" type="xstring" value="D3_3.5.5"/>
            <entry key="path" type="xstring" value="js-lib/d3/d3.v3_5_5.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
    </config>
    <config key="cssDependencies">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.min.css"/>
    </config>
    <entry key="new" type="xboolean" value="false"/>
    <entry key="inView" type="xboolean" value="true"/>
    <config key="tableIds">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="963eacef-c57c-49e5-8997-5aec8b39d844"/>
    </config>
    <config key="variables">
        <entry key="numSettings" type="xint" value="1"/>
        <entry key="mapClass" type="xstring" value="string"/>
        <entry key="key_0" type="xstring" value="knime.workspace"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="C:\Users\Guilherme\Documents\Projects\ADI"/>
    </config>
    <config key="binaryFiles">
        <entry key="numSettings" type="xint" value="0"/>
        <entry key="mapClass" type="xstring" value="string"/>
    </config>
    <config key="options">
        <entry key="numSettings" type="xint" value="21"/>
        <entry key="mapClass" type="xstring" value="object"/>
        <entry key="key_0" type="xstring" value="displayFullscreenButton"/>
        <entry key="class_0" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_0" type="xboolean" value="true"/>
        <entry key="key_1" type="xstring" value="displayClearSelectionButton"/>
        <entry key="class_1" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_1" type="xboolean" value="true"/>
        <entry key="key_2" type="xstring" value="enableHoleEdit"/>
        <entry key="class_2" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_2" type="xboolean" value="true"/>
        <entry key="key_3" type="xstring" value="svg"/>
        <entry key="class_3" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
        <config key="value_3">
            <entry key="width" type="xint" value="600"/>
            <entry key="height" type="xint" value="400"/>
            <entry key="fullscreen" type="xboolean" value="true"/>
        </config>
        <entry key="key_4" type="xstring" value="legend"/>
        <entry key="class_4" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_4" type="xboolean" value="true"/>
        <entry key="key_5" type="xstring" value="enableInsideTitleEdit"/>
        <entry key="class_5" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_5" type="xboolean" value="true"/>
        <entry key="key_6" type="xstring" value="customColors"/>
        <entry key="class_6" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_6" type="xboolean" value="false"/>
        <entry key="key_7" type="xstring" value="enableTitleEdit"/>
        <entry key="class_7" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_7" type="xboolean" value="true"/>
        <entry key="key_8" type="xstring" value="enableSelection"/>
        <entry key="class_8" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_8" type="xboolean" value="true"/>
        <entry key="key_9" type="xstring" value="enableDonutToggle"/>
        <entry key="class_9" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_9" type="xboolean" value="true"/>
        <entry key="key_10" type="xstring" value="enableLabelEdit"/>
        <entry key="class_10" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_10" type="xboolean" value="true"/>
        <entry key="key_11" type="xstring" value="enableSwitchMissValCat"/>
        <entry key="class_11" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_11" type="xboolean" value="true"/>
        <entry key="key_12" type="xstring" value="processInMemory"/>
        <entry key="class_12" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_12" type="xboolean" value="true"/>
        <entry key="key_13" type="xstring" value="reportOnMissingValues"/>
        <entry key="class_13" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_13" type="xboolean" value="true"/>
        <entry key="key_14" type="xstring" value="labelThreshold"/>
        <entry key="class_14" type="xstring" value="java.lang.Double"/>
        <entry key="value_14" type="xdouble" value="0.05"/>
        <entry key="key_15" type="xstring" value="cat"/>
        <entry key="class_15" type="xstring" value="java.lang.String"/>
        <entry key="value_15" type="xstring" value="Fuel_type"/>
        <entry key="key_16" type="xstring" value="enableViewControls"/>
        <entry key="class_16" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_16" type="xboolean" value="true"/>
        <entry key="key_17" type="xstring" value="enableColumnChooser"/>
        <entry key="class_17" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_17" type="xboolean" value="true"/>
        <entry key="key_18" type="xstring" value="showWarnings"/>
        <entry key="class_18" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_18" type="xboolean" value="true"/>
        <entry key="key_19" type="xstring" value="enableSubtitleEdit"/>
        <entry key="class_19" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_19" type="xboolean" value="true"/>
        <entry key="key_20" type="xstring" value="aggr"/>
        <entry key="class_20" type="xstring" value="java.lang.String"/>
        <entry key="value_20" type="xstring" value="Occurence Count"/>
    </config>
    <config key="inObjects">
        <entry key="numSettings" type="xint" value="1"/>
        <config key="inObject_0">
            <entry key="className" type="xstring" value="org.knime.dynamic.js.base.grouped.GroupedProcessor$GroupingResult"/>
            <entry key="jsonValue" type="xstring" value="{&quot;uuid&quot;:&quot;99f4c1bf-b97b-4b91-bab8-eff111e547ef&quot;,&quot;table&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;fragment&quot;:false,&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;maxValues&quot;:[&quot;Petrol&quot;,428.0],&quot;numColumns&quot;:2,&quot;numRows&quot;:3,&quot;filterIds&quot;:[null,null],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (integer)&quot;],&quot;colNames&quot;:[&quot;Fuel_type&quot;,&quot;Fuel_type_1&quot;],&quot;possibleValues&quot;:[[&quot;Petrol&quot;,&quot;Diesel&quot;,&quot;LPG&quot;],null],&quot;hiddenColumns&quot;:[],&quot;containsMissingValues&quot;:[false,false],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;minValues&quot;:[&quot;Diesel&quot;,2.0],&quot;rowSizeValues&quot;:null,&quot;colorModels&quot;:[],&quot;extensionTypes&quot;:[],&quot;extensionNames&quot;:[],&quot;numExtensions&quot;:0},&quot;filtered&quot;:false,&quot;rows&quot;:[{&quot;data&quot;:[&quot;Petrol&quot;,428.0],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;Diesel&quot;,386.0],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;LPG&quot;,2.0],&quot;rowKey&quot;:&quot;Row2&quot;}],&quot;id&quot;:&quot;0a351ece-3050-4db8-bf45-ff3ec0c02fc5&quot;,&quot;totalFilteredRows&quot;:0,&quot;fragmentFirstRowIndex&quot;:0,&quot;totalRows&quot;:0,&quot;dataHash&quot;:null},&quot;translator&quot;:{&quot;mapping&quot;:{&quot;Row0&quot;:[&quot;Row250&quot;,&quot;Row130&quot;,&quot;Row493&quot;,&quot;Row131&quot;,&quot;Row373&quot;,&quot;Row253&quot;,&quot;Row495&quot;,&quot;Row133&quot;,&quot;Row375&quot;,&quot;Row255&quot;,&quot;Row497&quot;,&quot;Row135&quot;,&quot;Row256&quot;,&quot;Row377&quot;,&quot;Row498&quot;,&quot;Row136&quot;,&quot;Row257&quot;,&quot;Row378&quot;,&quot;Row499&quot;,&quot;Row137&quot;,&quot;Row380&quot;,&quot;Row140&quot;,&quot;Row261&quot;,&quot;Row141&quot;,&quot;Row262&quot;,&quot;Row263&quot;,&quot;Row384&quot;,&quot;Row264&quot;,&quot;Row144&quot;,&quot;Row265&quot;,&quot;Row386&quot;,&quot;Row145&quot;,&quot;Row267&quot;,&quot;Row268&quot;,&quot;Row389&quot;,&quot;Row148&quot;,&quot;Row269&quot;,&quot;Row149&quot;,&quot;Row109&quot;,&quot;Row470&quot;,&quot;Row350&quot;,&quot;Row230&quot;,&quot;Row352&quot;,&quot;Row111&quot;,&quot;Row353&quot;,&quot;Row595&quot;,&quot;Row233&quot;,&quot;Row354&quot;,&quot;Row475&quot;,&quot;Row476&quot;,&quot;Row597&quot;,&quot;Row114&quot;,&quot;Row235&quot;,&quot;Row477&quot;,&quot;Row598&quot;,&quot;Row115&quot;,&quot;Row236&quot;,&quot;Row116&quot;,&quot;Row358&quot;,&quot;Row117&quot;,&quot;Row118&quot;,&quot;Row239&quot;,&quot;Row481&quot;,&quot;Row240&quot;,&quot;Row120&quot;,&quot;Row362&quot;,&quot;Row242&quot;,&quot;Row363&quot;,&quot;Row122&quot;,&quot;Row244&quot;,&quot;Row486&quot;,&quot;Row124&quot;,&quot;Row245&quot;,&quot;Row487&quot;,&quot;Row125&quot;,&quot;Row488&quot;,&quot;Row126&quot;,&quot;Row127&quot;,&quot;Row128&quot;,&quot;Row249&quot;,&quot;Row290&quot;,&quot;Row170&quot;,&quot;Row171&quot;,&quot;Row293&quot;,&quot;Row173&quot;,&quot;Row176&quot;,&quot;Row297&quot;,&quot;Row298&quot;,&quot;Row299&quot;,&quot;Row180&quot;,&quot;Row182&quot;,&quot;Row187&quot;,&quot;Row189&quot;,&quot;Row150&quot;,&quot;Row151&quot;,&quot;Row394&quot;,&quot;Row153&quot;,&quot;Row274&quot;,&quot;Row275&quot;,&quot;Row396&quot;,&quot;Row276&quot;,&quot;Row156&quot;,&quot;Row277&quot;,&quot;Row157&quot;,&quot;Row399&quot;,&quot;Row158&quot;,&quot;Row280&quot;,&quot;Row281&quot;,&quot;Row282&quot;,&quot;Row162&quot;,&quot;Row284&quot;,&quot;Row164&quot;,&quot;Row287&quot;,&quot;Row289&quot;,&quot;Row41&quot;,&quot;Row48&quot;,&quot;Row47&quot;,&quot;Row46&quot;,&quot;Row42&quot;,&quot;Row34&quot;,&quot;Row33&quot;,&quot;Row32&quot;,&quot;Row28&quot;,&quot;Row61&quot;,&quot;Row68&quot;,&quot;Row67&quot;,&quot;Row66&quot;,&quot;Row190&quot;,&quot;Row191&quot;,&quot;Row192&quot;,&quot;Row193&quot;,&quot;Row194&quot;,&quot;Row199&quot;,&quot;Row59&quot;,&quot;Row57&quot;,&quot;Row55&quot;,&quot;Row54&quot;,&quot;Row53&quot;,&quot;Row0&quot;,&quot;Row9&quot;,&quot;Row7&quot;,&quot;Row3&quot;,&quot;Row26&quot;,&quot;Row25&quot;,&quot;Row24&quot;,&quot;Row23&quot;,&quot;Row22&quot;,&quot;Row19&quot;,&quot;Row16&quot;,&quot;Row14&quot;,&quot;Row12&quot;,&quot;Row11&quot;,&quot;Row10&quot;,&quot;Row804&quot;,&quot;Row813&quot;,&quot;Row814&quot;,&quot;Row815&quot;,&quot;Row818&quot;,&quot;Row819&quot;,&quot;Row820&quot;,&quot;Row821&quot;,&quot;Row702&quot;,&quot;Row604&quot;,&quot;Row846&quot;,&quot;Row84&quot;,&quot;Row605&quot;,&quot;Row847&quot;,&quot;Row83&quot;,&quot;Row606&quot;,&quot;Row607&quot;,&quot;Row849&quot;,&quot;Row89&quot;,&quot;Row87&quot;,&quot;Row730&quot;,&quot;Row851&quot;,&quot;Row611&quot;,&quot;Row853&quot;,&quot;Row855&quot;,&quot;Row735&quot;,&quot;Row856&quot;,&quot;Row74&quot;,&quot;Row615&quot;,&quot;Row736&quot;,&quot;Row857&quot;,&quot;Row73&quot;,&quot;Row72&quot;,&quot;Row738&quot;,&quot;Row618&quot;,&quot;Row739&quot;,&quot;Row70&quot;,&quot;Row79&quot;,&quot;Row77&quot;,&quot;Row76&quot;,&quot;Row860&quot;,&quot;Row740&quot;,&quot;Row861&quot;,&quot;Row500&quot;,&quot;Row742&quot;,&quot;Row863&quot;,&quot;Row501&quot;,&quot;Row502&quot;,&quot;Row744&quot;,&quot;Row865&quot;,&quot;Row745&quot;,&quot;Row504&quot;,&quot;Row746&quot;,&quot;Row703&quot;,&quot;Row824&quot;,&quot;Row704&quot;,&quot;Row825&quot;,&quot;Row705&quot;,&quot;Row827&quot;,&quot;Row707&quot;,&quot;Row708&quot;,&quot;Row709&quot;,&quot;Row710&quot;,&quot;Row711&quot;,&quot;Row712&quot;,&quot;Row833&quot;,&quot;Row834&quot;,&quot;Row835&quot;,&quot;Row95&quot;,&quot;Row836&quot;,&quot;Row94&quot;,&quot;Row716&quot;,&quot;Row837&quot;,&quot;Row717&quot;,&quot;Row92&quot;,&quot;Row91&quot;,&quot;Row719&quot;,&quot;Row90&quot;,&quot;Row98&quot;,&quot;Row840&quot;,&quot;Row720&quot;,&quot;Row841&quot;,&quot;Row721&quot;,&quot;Row601&quot;,&quot;Row843&quot;,&quot;Row602&quot;,&quot;Row724&quot;,&quot;Row406&quot;,&quot;Row528&quot;,&quot;Row408&quot;,&quot;Row529&quot;,&quot;Row409&quot;,&quot;Row770&quot;,&quot;Row771&quot;,&quot;Row530&quot;,&quot;Row772&quot;,&quot;Row410&quot;,&quot;Row531&quot;,&quot;Row652&quot;,&quot;Row773&quot;,&quot;Row411&quot;,&quot;Row532&quot;,&quot;Row653&quot;,&quot;Row774&quot;,&quot;Row412&quot;,&quot;Row533&quot;,&quot;Row654&quot;,&quot;Row655&quot;,&quot;Row656&quot;,&quot;Row777&quot;,&quot;Row415&quot;,&quot;Row536&quot;,&quot;Row657&quot;,&quot;Row537&quot;,&quot;Row779&quot;,&quot;Row659&quot;,&quot;Row418&quot;,&quot;Row539&quot;,&quot;Row419&quot;,&quot;Row780&quot;,&quot;Row660&quot;,&quot;Row781&quot;,&quot;Row540&quot;,&quot;Row661&quot;,&quot;Row782&quot;,&quot;Row541&quot;,&quot;Row300&quot;,&quot;Row421&quot;,&quot;Row542&quot;,&quot;Row663&quot;,&quot;Row422&quot;,&quot;Row543&quot;,&quot;Row664&quot;,&quot;Row785&quot;,&quot;Row302&quot;,&quot;Row544&quot;,&quot;Row786&quot;,&quot;Row424&quot;,&quot;Row545&quot;,&quot;Row787&quot;,&quot;Row546&quot;,&quot;Row305&quot;,&quot;Row547&quot;,&quot;Row548&quot;,&quot;Row505&quot;,&quot;Row747&quot;,&quot;Row507&quot;,&quot;Row628&quot;,&quot;Row749&quot;,&quot;Row508&quot;,&quot;Row629&quot;,&quot;Row509&quot;,&quot;Row870&quot;,&quot;Row750&quot;,&quot;Row871&quot;,&quot;Row751&quot;,&quot;Row510&quot;,&quot;Row631&quot;,&quot;Row632&quot;,&quot;Row874&quot;,&quot;Row512&quot;,&quot;Row633&quot;,&quot;Row754&quot;,&quot;Row875&quot;,&quot;Row513&quot;,&quot;Row755&quot;,&quot;Row756&quot;,&quot;Row877&quot;,&quot;Row515&quot;,&quot;Row878&quot;,&quot;Row516&quot;,&quot;Row637&quot;,&quot;Row879&quot;,&quot;Row517&quot;,&quot;Row518&quot;,&quot;Row639&quot;,&quot;Row519&quot;,&quot;Row881&quot;,&quot;Row761&quot;,&quot;Row520&quot;,&quot;Row762&quot;,&quot;Row883&quot;,&quot;Row521&quot;,&quot;Row402&quot;,&quot;Row523&quot;,&quot;Row765&quot;,&quot;Row886&quot;,&quot;Row403&quot;,&quot;Row404&quot;,&quot;Row525&quot;,&quot;Row647&quot;,&quot;Row768&quot;,&quot;Row208&quot;,&quot;Row570&quot;,&quot;Row693&quot;,&quot;Row452&quot;,&quot;Row453&quot;,&quot;Row574&quot;,&quot;Row695&quot;,&quot;Row212&quot;,&quot;Row333&quot;,&quot;Row454&quot;,&quot;Row575&quot;,&quot;Row213&quot;,&quot;Row576&quot;,&quot;Row697&quot;,&quot;Row335&quot;,&quot;Row457&quot;,&quot;Row458&quot;,&quot;Row459&quot;,&quot;Row339&quot;,&quot;Row460&quot;,&quot;Row461&quot;,&quot;Row583&quot;,&quot;Row100&quot;,&quot;Row221&quot;,&quot;Row463&quot;,&quot;Row584&quot;,&quot;Row464&quot;,&quot;Row102&quot;,&quot;Row344&quot;,&quot;Row465&quot;,&quot;Row345&quot;,&quot;Row466&quot;,&quot;Row104&quot;,&quot;Row225&quot;,&quot;Row467&quot;,&quot;Row588&quot;,&quot;Row105&quot;,&quot;Row226&quot;,&quot;Row347&quot;,&quot;Row468&quot;,&quot;Row348&quot;,&quot;Row469&quot;,&quot;Row107&quot;,&quot;Row349&quot;,&quot;Row428&quot;,&quot;Row429&quot;,&quot;Row670&quot;,&quot;Row550&quot;,&quot;Row551&quot;,&quot;Row310&quot;,&quot;Row431&quot;,&quot;Row794&quot;,&quot;Row311&quot;,&quot;Row674&quot;,&quot;Row312&quot;,&quot;Row434&quot;,&quot;Row555&quot;,&quot;Row676&quot;,&quot;Row556&quot;,&quot;Row677&quot;,&quot;Row315&quot;,&quot;Row557&quot;,&quot;Row316&quot;,&quot;Row317&quot;,&quot;Row438&quot;,&quot;Row318&quot;,&quot;Row440&quot;,&quot;Row200&quot;,&quot;Row684&quot;,&quot;Row201&quot;,&quot;Row564&quot;,&quot;Row202&quot;,&quot;Row444&quot;,&quot;Row565&quot;,&quot;Row686&quot;,&quot;Row203&quot;,&quot;Row204&quot;,&quot;Row446&quot;,&quot;Row326&quot;,&quot;Row568&quot;,&quot;Row569&quot;,&quot;Row207&quot;,&quot;Row328&quot;],&quot;Row1&quot;:[&quot;Row490&quot;,&quot;Row370&quot;,&quot;Row491&quot;,&quot;Row371&quot;,&quot;Row492&quot;,&quot;Row251&quot;,&quot;Row372&quot;,&quot;Row252&quot;,&quot;Row494&quot;,&quot;Row374&quot;,&quot;Row254&quot;,&quot;Row496&quot;,&quot;Row134&quot;,&quot;Row376&quot;,&quot;Row258&quot;,&quot;Row379&quot;,&quot;Row259&quot;,&quot;Row139&quot;,&quot;Row260&quot;,&quot;Row381&quot;,&quot;Row382&quot;,&quot;Row383&quot;,&quot;Row142&quot;,&quot;Row143&quot;,&quot;Row266&quot;,&quot;Row387&quot;,&quot;Row146&quot;,&quot;Row147&quot;,&quot;Row590&quot;,&quot;Row591&quot;,&quot;Row471&quot;,&quot;Row592&quot;,&quot;Row351&quot;,&quot;Row472&quot;,&quot;Row110&quot;,&quot;Row231&quot;,&quot;Row473&quot;,&quot;Row594&quot;,&quot;Row232&quot;,&quot;Row474&quot;,&quot;Row112&quot;,&quot;Row596&quot;,&quot;Row113&quot;,&quot;Row234&quot;,&quot;Row355&quot;,&quot;Row356&quot;,&quot;Row357&quot;,&quot;Row478&quot;,&quot;Row237&quot;,&quot;Row479&quot;,&quot;Row238&quot;,&quot;Row359&quot;,&quot;Row119&quot;,&quot;Row480&quot;,&quot;Row361&quot;,&quot;Row241&quot;,&quot;Row483&quot;,&quot;Row121&quot;,&quot;Row484&quot;,&quot;Row243&quot;,&quot;Row364&quot;,&quot;Row485&quot;,&quot;Row123&quot;,&quot;Row365&quot;,&quot;Row366&quot;,&quot;Row246&quot;,&quot;Row367&quot;,&quot;Row247&quot;,&quot;Row489&quot;,&quot;Row248&quot;,&quot;Row369&quot;,&quot;Row129&quot;,&quot;Row291&quot;,&quot;Row292&quot;,&quot;Row172&quot;,&quot;Row174&quot;,&quot;Row175&quot;,&quot;Row296&quot;,&quot;Row177&quot;,&quot;Row178&quot;,&quot;Row179&quot;,&quot;Row181&quot;,&quot;Row183&quot;,&quot;Row184&quot;,&quot;Row186&quot;,&quot;Row188&quot;,&quot;Row390&quot;,&quot;Row270&quot;,&quot;Row391&quot;,&quot;Row271&quot;,&quot;Row392&quot;,&quot;Row272&quot;,&quot;Row393&quot;,&quot;Row152&quot;,&quot;Row273&quot;,&quot;Row154&quot;,&quot;Row155&quot;,&quot;Row397&quot;,&quot;Row398&quot;,&quot;Row278&quot;,&quot;Row279&quot;,&quot;Row159&quot;,&quot;Row160&quot;,&quot;Row161&quot;,&quot;Row283&quot;,&quot;Row163&quot;,&quot;Row285&quot;,&quot;Row165&quot;,&quot;Row166&quot;,&quot;Row167&quot;,&quot;Row288&quot;,&quot;Row168&quot;,&quot;Row169&quot;,&quot;Row40&quot;,&quot;Row49&quot;,&quot;Row45&quot;,&quot;Row44&quot;,&quot;Row43&quot;,&quot;Row39&quot;,&quot;Row30&quot;,&quot;Row38&quot;,&quot;Row37&quot;,&quot;Row36&quot;,&quot;Row35&quot;,&quot;Row31&quot;,&quot;Row29&quot;,&quot;Row63&quot;,&quot;Row62&quot;,&quot;Row60&quot;,&quot;Row65&quot;,&quot;Row64&quot;,&quot;Row196&quot;,&quot;Row197&quot;,&quot;Row198&quot;,&quot;Row52&quot;,&quot;Row51&quot;,&quot;Row50&quot;,&quot;Row58&quot;,&quot;Row56&quot;,&quot;Row1&quot;,&quot;Row8&quot;,&quot;Row6&quot;,&quot;Row4&quot;,&quot;Row27&quot;,&quot;Row21&quot;,&quot;Row20&quot;,&quot;Row18&quot;,&quot;Row17&quot;,&quot;Row15&quot;,&quot;Row13&quot;,&quot;Row816&quot;,&quot;Row817&quot;,&quot;Row700&quot;,&quot;Row701&quot;,&quot;Row823&quot;,&quot;Row726&quot;,&quot;Row727&quot;,&quot;Row82&quot;,&quot;Row81&quot;,&quot;Row729&quot;,&quot;Row80&quot;,&quot;Row609&quot;,&quot;Row88&quot;,&quot;Row86&quot;,&quot;Row850&quot;,&quot;Row610&quot;,&quot;Row731&quot;,&quot;Row852&quot;,&quot;Row732&quot;,&quot;Row612&quot;,&quot;Row733&quot;,&quot;Row734&quot;,&quot;Row737&quot;,&quot;Row858&quot;,&quot;Row617&quot;,&quot;Row71&quot;,&quot;Row78&quot;,&quot;Row75&quot;,&quot;Row620&quot;,&quot;Row741&quot;,&quot;Row862&quot;,&quot;Row622&quot;,&quot;Row743&quot;,&quot;Row864&quot;,&quot;Row623&quot;,&quot;Row866&quot;,&quot;Row625&quot;,&quot;Row867&quot;,&quot;Row706&quot;,&quot;Row828&quot;,&quot;Row829&quot;,&quot;Row830&quot;,&quot;Row831&quot;,&quot;Row832&quot;,&quot;Row713&quot;,&quot;Row96&quot;,&quot;Row714&quot;,&quot;Row715&quot;,&quot;Row93&quot;,&quot;Row838&quot;,&quot;Row718&quot;,&quot;Row839&quot;,&quot;Row99&quot;,&quot;Row97&quot;,&quot;Row600&quot;,&quot;Row842&quot;,&quot;Row722&quot;,&quot;Row844&quot;,&quot;Row603&quot;,&quot;Row527&quot;,&quot;Row648&quot;,&quot;Row769&quot;,&quot;Row407&quot;,&quot;Row649&quot;,&quot;Row650&quot;,&quot;Row651&quot;,&quot;Row775&quot;,&quot;Row413&quot;,&quot;Row534&quot;,&quot;Row776&quot;,&quot;Row535&quot;,&quot;Row778&quot;,&quot;Row416&quot;,&quot;Row658&quot;,&quot;Row417&quot;,&quot;Row538&quot;,&quot;Row420&quot;,&quot;Row662&quot;,&quot;Row783&quot;,&quot;Row784&quot;,&quot;Row301&quot;,&quot;Row423&quot;,&quot;Row665&quot;,&quot;Row303&quot;,&quot;Row666&quot;,&quot;Row425&quot;,&quot;Row667&quot;,&quot;Row788&quot;,&quot;Row426&quot;,&quot;Row668&quot;,&quot;Row789&quot;,&quot;Row306&quot;,&quot;Row427&quot;,&quot;Row669&quot;,&quot;Row626&quot;,&quot;Row868&quot;,&quot;Row506&quot;,&quot;Row627&quot;,&quot;Row748&quot;,&quot;Row869&quot;,&quot;Row630&quot;,&quot;Row872&quot;,&quot;Row752&quot;,&quot;Row873&quot;,&quot;Row753&quot;,&quot;Row876&quot;,&quot;Row514&quot;,&quot;Row636&quot;,&quot;Row757&quot;,&quot;Row638&quot;,&quot;Row759&quot;,&quot;Row880&quot;,&quot;Row760&quot;,&quot;Row640&quot;,&quot;Row641&quot;,&quot;Row400&quot;,&quot;Row642&quot;,&quot;Row522&quot;,&quot;Row885&quot;,&quot;Row644&quot;,&quot;Row766&quot;,&quot;Row646&quot;,&quot;Row767&quot;,&quot;Row888&quot;,&quot;Row405&quot;,&quot;Row526&quot;,&quot;Row889&quot;,&quot;Row329&quot;,&quot;Row209&quot;,&quot;Row690&quot;,&quot;Row691&quot;,&quot;Row450&quot;,&quot;Row571&quot;,&quot;Row692&quot;,&quot;Row330&quot;,&quot;Row451&quot;,&quot;Row572&quot;,&quot;Row210&quot;,&quot;Row331&quot;,&quot;Row573&quot;,&quot;Row694&quot;,&quot;Row211&quot;,&quot;Row332&quot;,&quot;Row696&quot;,&quot;Row334&quot;,&quot;Row455&quot;,&quot;Row214&quot;,&quot;Row456&quot;,&quot;Row577&quot;,&quot;Row698&quot;,&quot;Row215&quot;,&quot;Row336&quot;,&quot;Row578&quot;,&quot;Row699&quot;,&quot;Row216&quot;,&quot;Row337&quot;,&quot;Row579&quot;,&quot;Row217&quot;,&quot;Row338&quot;,&quot;Row218&quot;,&quot;Row219&quot;,&quot;Row580&quot;,&quot;Row581&quot;,&quot;Row340&quot;,&quot;Row582&quot;,&quot;Row220&quot;,&quot;Row341&quot;,&quot;Row462&quot;,&quot;Row342&quot;,&quot;Row101&quot;,&quot;Row222&quot;,&quot;Row343&quot;,&quot;Row585&quot;,&quot;Row223&quot;,&quot;Row586&quot;,&quot;Row103&quot;,&quot;Row224&quot;,&quot;Row587&quot;,&quot;Row346&quot;,&quot;Row589&quot;,&quot;Row106&quot;,&quot;Row227&quot;,&quot;Row228&quot;,&quot;Row108&quot;,&quot;Row229&quot;,&quot;Row307&quot;,&quot;Row549&quot;,&quot;Row308&quot;,&quot;Row309&quot;,&quot;Row790&quot;,&quot;Row791&quot;,&quot;Row671&quot;,&quot;Row430&quot;,&quot;Row672&quot;,&quot;Row793&quot;,&quot;Row552&quot;,&quot;Row673&quot;,&quot;Row553&quot;,&quot;Row554&quot;,&quot;Row675&quot;,&quot;Row313&quot;,&quot;Row314&quot;,&quot;Row435&quot;,&quot;Row436&quot;,&quot;Row678&quot;,&quot;Row437&quot;,&quot;Row558&quot;,&quot;Row679&quot;,&quot;Row559&quot;,&quot;Row439&quot;,&quot;Row319&quot;,&quot;Row680&quot;,&quot;Row681&quot;,&quot;Row561&quot;,&quot;Row682&quot;,&quot;Row320&quot;,&quot;Row562&quot;,&quot;Row683&quot;,&quot;Row321&quot;,&quot;Row442&quot;,&quot;Row563&quot;,&quot;Row322&quot;,&quot;Row443&quot;,&quot;Row685&quot;,&quot;Row323&quot;,&quot;Row324&quot;,&quot;Row445&quot;,&quot;Row566&quot;,&quot;Row687&quot;,&quot;Row325&quot;,&quot;Row688&quot;,&quot;Row205&quot;,&quot;Row447&quot;,&quot;Row689&quot;,&quot;Row327&quot;,&quot;Row448&quot;],&quot;Row2&quot;:[&quot;Row482&quot;,&quot;Row621&quot;]},&quot;sourceID&quot;:null,&quot;forward&quot;:false,&quot;targetIDs&quot;:null}}"/>
        </config>
    </config>
    <entry key="warnMessage" type="xstring" value=""/>
    <entry key="errorMessage" type="xstring" value=""/>
</config>
