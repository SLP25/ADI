<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
    <entry key="jsNamespace" type="xstring" value="knimeGroupedBarChart"/>
    <config key="jsCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* global d3:false, kt:false, nv:false */%%00010window.knimeGroupedBarChart = (function () {%%00010%%00010    var barChart = {};%%00010    var MIN_HEIGHT = 100;%%00010    var MIN_WIDTH = 100;%%00010    var layoutContainer,%%00010        _representation,%%00010        _value,%%00010        chart,%%00010        svg,%%00010        knimeTable,%%00010        plotData,%%00010        wrappedPlotData,%%00010        colorRange,%%00010        categories,%%00010        freqCols,%%00010        _translator,%%00010        _keyNameMap,%%00010        _incomingTable,%%00010%%00010        /**%%00010         * 2d-array where for each category (indexing follows categories array) we%%00010         * store an array of those frequency columns, which have a missing value in%%00010         * the current category. This allows to exclude specific bars or even the%%00010         * whole category. Storing by category helps to group warnings also by%%00010         * category. Required for missing values handling.%%00010         */%%00010        missValInCat,%%00010%%00010        /**%%00010         * Array where for each frequency column, which has in all other categories%%00010         * only missing values, we store whether it has a value in the Missing%%00010         * values category. This allows to decide, if we should keep this freq%%00010         * column (if it has a value in MissValCat and the option &quot;include%%00010         * MissValCat&quot; is on) or exclude it. Each item has the fields: col - name of%%00010         * freq column hasValueOnMissValCat - whether the column has a non-missing%%00010         * value in the Missing values category (true/false) Required for missing%%00010         * values handling.%%00010         */%%00010        freqColValueOnMissValCat,%%00010%%00010        /**%%00010         * Array where for each frequency column, which has non-missing value in the%%00010         * Missing values category, we store this value. We need to store it%%00010         * separately to quickly add/remove them to the plot data, when the option%%00010         * &quot;include MissValCat&quot; is getting switched. Each item has the fields: col -%%00010         * name of freq column value - non-missing value, this freq column has in%%00010         * the Missing values category Required for missing values handling.%%00010         */%%00010        missValCatValues,%%00010%%00010        /**%%00010         * Boolean flag - is the Missing values category present in the dataset.%%00010         * Required for missing values handling.%%00010         */%%00010        isMissValCat,%%00010%%00010        /**%%00010         * Map where keys - frequency column names, values - array of those%%00010         * categories for which the bar, specified by the corresponding freq column%%00010         * and the category, was excluded from the view. There excluded bars%%00010         * actually specify those dummy null values, we have to add to the stacked%%00010         * chart to fix it. Choosing freq cols as keys helps adding dummy nulls%%00010         * since the plot dataset has to be key-&gt;values. Required for missing values%%00010         * handling.%%00010         */%%00010        excludeFreqColCatMap,%%00010        showWarnings,%%00010%%00010        /**%%00010         * Function declarations%%00010         */%%00010        drawChart, drawControls, fixStackedData, createHilightBar, removeHilightBar, getClusterToRowMapping,%%00010        subscribeToSelection, publishSelection, processData, getRoundedMaxValue, getSelectedRowIDs,%%00010        handleHighlightClick, sortByClusterName, setCssClasses, setTooltipCssClasses, updateTitles, updateAxisLabels,%%00010        updateLabels, updateChartType, redrawSelection, onSelectionChanged, registerClickHandler, getActiveBars,%%00010        checkClearSelectionButton, selectCorrectBar, processMissingValues, checkMaxSizeXAxis, KeyNameMap,%%00010        handleWarnings, handleMissingValues, getStackedMaxValue, createStaticBarValues, removeStaticBarValues, hasSufficientBackgroundContrast;%%00010%%00010    var MISSING_VALUES_LABEL = 'Missing values';%%00010    var MISSING_VALUES_ONLY = 'missingValuesOnly';%%00010    var FREQ_COLUMN_MISSING_VALUES_ONLY = 'freqColumnMissingValuesOnly';%%00010    var CATEGORY_MISSING_VALUES_ONLY = 'categoryMissingValuesOnly';%%00010    var NO_DATA_AVAILABLE = 'noDataAvailable';%%00010    var NO_STATIC_BAR_VALUES = 'noStaticBarValues';%%00010%%00010    barChart.init = function (representation, value) {%%00010        _value = value;%%00010        _representation = representation;%%00010        _incomingTable = _representation.inObjects[0].table;%%00010%%00010        if (_representation.options.enableSelection &amp;&amp; _representation.inObjects[0].translator) {%%00010            _translator = _representation.inObjects[0].translator;%%00010            _translator.sourceID = _representation.inObjects[0].uuid;%%00010            _translator.targetIDs = [_representation.tableIds[0]];%%00010            knimeService.registerSelectionTranslator(_translator, _translator.sourceID);%%00010            subscribeToSelection(_value.options.subscribeToSelection);%%00010        }%%00010%%00010        showWarnings = _representation.options.showWarnings;%%00010%%00010        if (_representation.warnMessage &amp;&amp; showWarnings) {%%00010            knimeService.setWarningMessage(_representation.warnMessage);%%00010        }%%00010        if (_representation.options.enableViewControls) {%%00010            drawControls();%%00010        }%%00010        drawChart();%%00010%%00010        _keyNameMap = new KeyNameMap(getClusterToRowMapping());%%00010    };%%00010%%00010%%00010    drawChart = function (redraw) {%%00010%%00010        d3.select('html').style('width', '100%').style('height', '100%');%%00010        d3.select('body').style('width', '100%').style('height', '100%');%%00010%%00010        // Process options%%00010        var optWidth = _representation.options.svg.width;%%00010        var optHeight = _representation.options.svg.height;%%00010%%00010        var optTitle = _value.options.title;%%00010        var optSubtitle = _value.options.subtitle;%%00010%%00010        var sortLabels = _representation.options.sort;%%00010        var optLegend = _representation.options.legend;%%00010        var optTooltips = _representation.options.tooltip;%%00010%%00010        var optOrientation = _value.options.orientation;%%00010%%00010        var optFullscreen = _representation.options.svg.fullscreen &amp;&amp; _representation.runningInView;%%00010        var optEnableSelection = _representation.options.enableSelection;%%00010%%00010        var isTitle = optTitle || optSubtitle;%%00010%%00010        var body = d3.select('body');%%00010%%00010        var width = optWidth + 'px';%%00010        var height = optHeight + 'px';%%00010        if (optFullscreen) {%%00010            knimeService.floatingHeader(isTitle);%%00010            width = '100%';%%00010            height = isTitle ? '100%' : 'calc(100% - ' + knimeService.headerHeight() + 'px)';%%00010        }%%00010%%00010        var div;%%00010        if (redraw) {%%00010            d3.select('svg').remove();%%00010            div = d3.select('#svgContainer');%%00010        } else {%%00010            layoutContainer = body.append('div')%%00010                .attr('id', 'layoutContainer')%%00010                .attr('class', 'knime-layout-container')%%00010                .style('width', width)%%00010                .style('height', height)%%00010                .style('min-width', MIN_WIDTH + 'px')%%00010                .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010            div = layoutContainer.append('div')%%00010                .attr('id', 'svgContainer')%%00010                .attr('class', 'knime-svg-container')%%00010                .style('min-width', MIN_WIDTH + 'px')%%00010                .style('min-height', MIN_HEIGHT + 'px');%%00010        }%%00010%%00010        var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010        div[0][0].appendChild(svg1);%%00010%%00010        svg = d3.select('svg')%%00010            .style('display', 'block')%%00010            .classed('colored', true);%%00010%%00010%%00010        // handle clicks on background to deselect current selection%%00010        if (optEnableSelection) {%%00010            svg.on('click', function () {%%00010                removeHilightBar('', true);%%00010                _value.options.selection = [];%%00010                publishSelection(true);%%00010            });%%00010        }%%00010%%00010%%00010        if (optFullscreen) {%%00010            // Set full screen height/width%%00010            div.style('width', '100%');%%00010            div.style('height', height /* this should be 100% always, but for some reason that doesn't work */);%%00010%%00010            svg.attr('width', '100%');%%00010            svg.attr('height', '100%');%%00010        } else {%%00010            if (optWidth &gt; 0) {%%00010                div.style('width', optWidth + 'px');%%00010                svg.attr('width', optWidth);%%00010                // Looks like the below doesn't work,%%00010                // above does work...%%00010                // chart.width(optWidth);%%00010            }%%00010            if (optHeight &gt; 0) {%%00010                svg.attr('height', optHeight);%%00010                div.style('height', optHeight + 'px');%%00010                // Looks like the below doesn't work,%%00010                // above does work...%%00010                // chart.height(optHeight);%%00010            }%%00010        }%%00010%%00010        if (!redraw) {%%00010            /*%%00010             * Process data%%00010             */%%00010            knimeTable = new kt();%%00010            // Add the data from the input port to the knimeTable.%%00010            var port0dataTable = _representation.inObjects[0].table;%%00010            if (!_representation.isHistogram &amp;&amp; sortLabels) {%%00010                port0dataTable.rows = sortByClusterName(port0dataTable.rows);%%00010            }%%00010            knimeTable.setDataTable(port0dataTable);%%00010%%00010            processData();%%00010        }%%00010%%00010        /*%%00010         * Plot chart%%00010         */%%00010        nv.addGraph(function () {%%00010            if (optOrientation) {%%00010                chart = nv.models.multiBarHorizontalChart();%%00010            } else {%%00010                chart = nv.models.multiBarChart();%%00010                chart.reduceXTicks(Boolean(_representation.isHistogram));%%00010                /* if (_representation.options.rotateLabels) {%%00010                    chart.rotateLabels(_representation.options.rotateLabels);%%00010                } */%%00010            }%%00010%%00010            chart.dispatch.on('renderEnd.css', function () {%%00010                setCssClasses();%%00010                if (_value.options.showStaticBarValues) {%%00010                    removeStaticBarValues();%%00010                    createStaticBarValues();%%00010                }%%00010            });%%00010            // tooltip is re-created every time therefore we need to assign%%00010            // classes accordingly%%00010            chart.multibar.dispatch.on('elementMouseover.tooltipCss', setTooltipCssClasses);%%00010            chart.multibar.dispatch.on('elementMousemove.tooltipCss', setTooltipCssClasses);%%00010            chart.legend.dispatch.on('legendClick', function () {%%00010                drawChart(true);%%00010                d3.event.stopPropagation();%%00010            });%%00010%%00010            var stacked = _value.options.chartType === 'Stacked';%%00010            if (stacked) {%%00010                fixStackedData(true); // add dummy nulls%%00010            }%%00010            chart.stacked(stacked);%%00010%%00010            chart%%00010                .color(colorRange)%%00010                .duration(0)%%00010                .margin({ right: 20 })%%00010                .groupSpacing(_representation.isHistogram ? 0.01 : 0.1);%%00010%%00010            updateTitles(false);%%00010%%00010            chart.showControls(false); // all the controls moved to settings menu%%00010            chart.showLegend(optLegend);%%00010            chart.tooltip.enabled(typeof optTooltips === 'undefined' || optTooltips);%%00010%%00010            updateAxisLabels(false);%%00010            svg.datum(plotData).transition().duration(0).call(chart);%%00010            nv.utils.windowResize(function () {%%00010                updateAxisLabels(true);%%00010                updateLabels();%%00010                setCssClasses();%%00010                removeHilightBar('', true);%%00010                redrawSelection();%%00010            });%%00010%%00010            // redraws selection%%00010            if (_value.options.selection) {%%00010                redrawSelection();%%00010            }%%00010            return chart;%%00010        });%%00010    };%%00010%%00010    sortByClusterName = function (array) {%%00010        return array.sort(function (a, b) {%%00010            var x = a.data[0];%%00010            var y = b.data[0];%%00010%%00010            // Make sure, that missing values are displayed last%%00010            if (x === null) {%%00010                return 1;%%00010            } else if (y === null) {%%00010                return -1;%%00010            }%%00010%%00010            if (typeof x === 'string') {%%00010                x = (String(x)).toLowerCase();%%00010            }%%00010            if (typeof y === 'string') {%%00010                y = (String(y)).toLowerCase();%%00010            }%%00010            var compare = 0;%%00010            if (x &lt; y) {%%00010                compare = -1;%%00010            } else if (x &gt; y) {%%00010                compare = 1;%%00010            }%%00010            return compare;%%00010        });%%00010    };%%00010%%00010    registerClickHandler = function () {%%00010        d3.selectAll('.nv-bar').on('click', function (event) {%%00010            handleHighlightClick(event);%%00010            d3.event.stopPropagation();%%00010        });%%00010    };%%00010%%00010    getActiveBars = function () {%%00010        var stacked = _value.options.chartType;%%00010        var counter = 0;%%00010        if (stacked === 'Stacked') {%%00010            counter = 1;%%00010        } else {%%00010            for (var j = 0; j &lt; plotData.length; j++) {%%00010                if (plotData[j].disabled !== true) {%%00010                    counter++;%%00010                }%%00010            }%%00010        }%%00010        return counter;%%00010    };%%00010%%00010    redrawSelection = function () {%%00010        var length = _value.options.selection ? _value.options.selection.length : 0;%%00010        for (var i = 0; i &lt; length; i++) {%%00010            createHilightBar(_keyNameMap.getNameFromKey(_value.options.selection[i][0]),%%00010                _value.options.selection[i][1]);%%00010        }%%00010    };%%00010%%00010    subscribeToSelection = function (subscribeBool) {%%00010        if (_representation.options.enableSelection) {%%00010            if (subscribeBool) {%%00010                knimeService.subscribeToSelection(_translator.sourceID, onSelectionChanged);%%00010            } else {%%00010                knimeService.unsubscribeSelection(_translator.sourceID, onSelectionChanged);%%00010            }%%00010        }%%00010    };%%00010%%00010    publishSelection = function (shouldPublish) {%%00010        if (shouldPublish) {%%00010            knimeService.setSelectedRows(_translator.sourceID, getSelectedRowIDs(), onSelectionChanged);%%00010        }%%00010    };%%00010%%00010    checkClearSelectionButton = function () {%%00010        if (_value.options.selection) {%%00010            var button = d3.select('#clearSelectionButton');%%00010            if (button) {%%00010                button.classed('inactive', function () {%%00010                    return !_value.options.selection.length &gt; 0;%%00010                });%%00010            }%%00010        }%%00010    };%%00010%%00010    getSelectedRowIDs = function () {%%00010        if (_value.options.selection) {%%00010            var selectedRowIDs = [];%%00010            for (var i = 0; i &lt; _value.options.selection.length; i++) {%%00010                selectedRowIDs.push(_value.options.selection[i][0]);%%00010            }%%00010            return selectedRowIDs;%%00010        } else {%%00010            return [];%%00010        }%%00010    };%%00010%%00010    selectCorrectBar = function (clusterName) {%%00010        var allBars = d3.selectAll('.knime-x text.knime-tick-label');%%00010        for (var j = 0; j &lt; allBars[0].length; j++) {%%00010            if (d3.select(allBars[0][j]).data()[0] === clusterName) {%%00010                return d3.select(allBars[0][j]);%%00010            }%%00010        }%%00010        // no bar found%%00010        return null;%%00010    };%%00010%%00010    // Removes the clusterName with the given cluster name. If &quot;removeAll&quot; is true all bars are removed%%00010    removeHilightBar = function (clusterName, removeAll) {%%00010        if (_value.options.selection) {%%00010            var selectedEntry, barParent;%%00010            if (removeAll) {%%00010                var length = _value.options.selection.length;%%00010                for (var i = 0; i &lt; length; i++) {%%00010                    selectedEntry = _value.options.selection[i];%%00010                    var bars = d3.selectAll('.hilightBar');%%00010                    barParent = bars.select(function () {%%00010                        return this.parentNode;%%00010                    });%%00010                    barParent.select('text').classed(selectedEntry[1], false);%%00010                    d3.selectAll('.hilightBar').remove();%%00010                }%%00010            } else {%%00010                var barIndex = getSelectedRowIDs().indexOf(_keyNameMap.getKeyFromName(clusterName));%%00010                if (barIndex &gt; -1) {%%00010                    selectedEntry = _value.options.selection[barIndex];%%00010                    var bar = selectCorrectBar(clusterName);%%00010                    if (bar) {%%00010                        barParent = bar.select(function () {%%00010                            return this.parentNode;%%00010                        });%%00010                        barParent.select('text').classed(selectedEntry[1], false);%%00010                        barParent.selectAll('.hilightBar').remove();%%00010                    }%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    // Create a hilight-bar above the cluster with the given name and assigns the given css class to it%%00010    createHilightBar = function (clusterName, selectionClass) {%%00010        var optOrientation = _value.options.orientation;%%00010        var overallBarCount = -1;%%00010        for (var k = 0; k &lt; plotData.length; k++) {%%00010            for (var j = 0; j &lt; plotData[k].values.length; j++) {%%00010                overallBarCount++;%%00010                if (plotData[k].values[j].x === clusterName) {%%00010                    d3.selectAll('.knime-x text').each(function (d, i) {%%00010                        if (i === overallBarCount) {%%00010                            d3.select(this).classed(selectionClass, true);%%00010                            var selectionTitle;%%00010                            if (selectionClass === 'knime-selected') {%%00010                                selectionTitle = 'Selected';%%00010                            } else {%%00010                                selectionTitle = 'Partially selected';%%00010                            }%%00010                            var posX = 0;%%00010                            var posY = 0;%%00010                            var highlightHeight = 0;%%00010                            var highlightWidth = 5;%%00010                            var highlightBarBBox = d3.select('.nv-bar.positive').node().getBBox();%%00010                            var spaceBetweenBarAndChart = -7;%%00010                            if (optOrientation) {%%00010                                posY = -0.5 * (highlightBarBBox.height * getActiveBars());%%00010                                posX = spaceBetweenBarAndChart;%%00010                                highlightHeight = highlightBarBBox.height *%%00010                                    getActiveBars();%%00010                            } else {%%00010                                posX = -0.5 * (highlightBarBBox.width * getActiveBars());%%00010                                highlightWidth = highlightBarBBox.width * getActiveBars();%%00010                                highlightHeight = 5;%%00010                                posY = -spaceBetweenBarAndChart - highlightHeight;%%00010                            }%%00010                            d3.select(this.parentNode).append('rect').classed('hilightBar', true)%%00010                                .classed(selectionClass, true)%%00010                                .attr({ x: posX, y: posY, width: highlightWidth, height: highlightHeight })%%00010                                .style('pointer-events', 'all')%%00010                                .append('title')%%00010                                .classed('knime-tooltip', true)%%00010                                .text(selectionTitle);%%00010                        }%%00010                    });%%00010                    j = plotData[k].values.length;%%00010                    k = plotData.length - 1;%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    // Create static values on top of each bar%%00010    createStaticBarValues = function () {%%00010        var parentBBox = d3.select('.nv-barsWrap').node().getBBox();%%00010%%00010        d3.selectAll('.nv-bar.positive').each(function (d) {%%00010            var DEFAULT_MARGIN = 10;%%00010            var barBBox = this.getBBox();%%00010%%00010            // calculate the maxWidth with a slightly larger default margin%%00010            // in order to ensure that the label has enough space%%00010            var configObject = {%%00010                container: document.querySelector('svg'),%%00010                maxWidth: barBBox.width - 1.1 * DEFAULT_MARGIN,%%00010                minimalChars: 1%%00010            };%%00010            var labelSize = knimeService.measureAndTruncate([d.y], configObject);%%00010%%00010            var label = d3.select(this.parentNode).append('text')%%00010                .attr('class', 'knime-static-bar-value')%%00010                .attr('dominant-baseline', 'middle')%%00010                .attr('transform', d3.select(this).attr('transform'))%%00010                .attr('fill', 'black')%%00010                .attr('stroke', 'none')%%00010                .text(labelSize.values[0].truncated);%%00010%%00010            var labelBBox = label.node().getBBox();%%00010%%00010            // Position text-elements based on orientation and free space%%00010            if (_value.options.orientation) {%%00010                var y = barBBox.y + barBBox.height / 2;%%00010                var hasEnoughSpaceAboveBar = barBBox.width + labelBBox.width + DEFAULT_MARGIN &lt; parentBBox.width;%%00010                if ((labelBBox.height + DEFAULT_MARGIN &gt;= barBBox.height%%00010                    || labelBBox.width + DEFAULT_MARGIN &gt;= barBBox.width) &amp;&amp; !hasEnoughSpaceAboveBar) {%%00010                    d3.select(label).node().remove();%%00010                    knimeService.setWarningMessage('Some static bar values can not be displayed due to missing space', NO_STATIC_BAR_VALUES);%%00010                }%%00010                if (hasEnoughSpaceAboveBar &amp;&amp; _value.options.chartType === 'Grouped') {%%00010                    configObject.maxWidth = parentBBox.width - barBBox.width - DEFAULT_MARGIN;%%00010                    labelSize = knimeService.measureAndTruncate([d.y], configObject);%%00010                    label%%00010                        .attr('text-anchor', 'start')%%00010                        .attr({ x: barBBox.width + DEFAULT_MARGIN, y: y })%%00010                        .text(labelSize.values[0].truncated);%%00010                } else {%%00010                    label%%00010                        .attr('text-anchor', 'end')%%00010                        .attr({ x: barBBox.width - DEFAULT_MARGIN, y: y })%%00010                        .style('fill', hasSufficientBackgroundContrast(this.parentNode.style.fill) ? 'black' : 'white');%%00010                }%%00010            } else {%%00010                var x = barBBox.x + barBBox.width / 2;%%00010                label.attr('text-anchor', 'middle');%%00010                var hasEnoughSpaceAboveBar = barBBox.height + labelBBox.height + DEFAULT_MARGIN &lt; parentBBox.height;%%00010%%00010                if ((labelBBox.width &gt;= barBBox.width%%00010                    || labelBBox.height + DEFAULT_MARGIN &gt;= barBBox.height) &amp;&amp; !hasEnoughSpaceAboveBar) {%%00010                    d3.select(label).node().remove();%%00010                    knimeService.setWarningMessage('Some static bar values can not be displayed due to missing space', NO_STATIC_BAR_VALUES);%%00010                }%%00010                if (hasEnoughSpaceAboveBar &amp;&amp; _value.options.chartType === 'Grouped') {%%00010                    label%%00010                        .attr({ x: x, y: barBBox.y - labelBBox.height });%%00010                } else {%%00010                    label%%00010                        .attr({ x: x, y: barBBox.y + labelBBox.height })%%00010                        .style('fill', hasSufficientBackgroundContrast(this.parentNode.style.fill) ? 'black' : 'white');%%00010                }%%00010            }%%00010        });%%00010    };%%00010%%00010    removeStaticBarValues = function () {%%00010        d3.selectAll('.knime-static-bar-value').remove();%%00010        knimeService.clearWarningMessage(NO_STATIC_BAR_VALUES);%%00010    };%%00010%%00010    hasSufficientBackgroundContrast = function (color) {%%00010        return d3.hsl(color).l &gt;= 0.5;%%00010    };%%00010%%00010    getClusterToRowMapping = function () {%%00010        var map = {};%%00010        for (var i = 0; i &lt; _incomingTable.rows.length; i++) {%%00010            if (_incomingTable.rows[i].data[0]) {%%00010                map[_incomingTable.rows[i].data[0]] = _incomingTable.rows[i].rowKey;%%00010            } else {%%00010                map['Missing values'] = _incomingTable.rows[i].rowKey;%%00010            }%%00010        }%%00010        return map;%%00010    };%%00010%%00010    // Helper class to handle conversion from cluster name to row key%%00010    KeyNameMap = function (map) {%%00010        this.map = map;%%00010        this.reverseMap = {};%%00010        for (var key in map) {%%00010            var value = map[key];%%00010            this.reverseMap[value] = key;%%00010        }%%00010    };%%00010%%00010    KeyNameMap.prototype.getKeyFromName = function (name) {%%00010        return this.map[name];%%00010    };%%00010    KeyNameMap.prototype.getNameFromKey = function (key) {%%00010        return this.reverseMap[key];%%00010    };%%00010%%00010    handleHighlightClick = function (event) {%%00010        if (!_value.options.selection) {%%00010            _value.options.selection = [];%%00010        }%%00010        var clusterName = event.x;%%00010        var clusterKey = _keyNameMap.getKeyFromName(clusterName);%%00010        var barIndex = getSelectedRowIDs().indexOf(clusterKey);%%00010        // Deselect already selected bar when clicking again on it%%00010        if (barIndex &gt; -1 &amp;&amp; (d3.event.ctrlKey || d3.event.shiftKey || d3.event.metaKey)) {%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.removeRowsFromSelection(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            removeHilightBar(clusterName, false);%%00010            _value.options.selection.splice(barIndex, 1);%%00010        } else if (!d3.event.ctrlKey &amp;&amp; !d3.event.shiftKey &amp;&amp; !d3.event.metaKey) {%%00010            // Deselect all previously selected bars and select the newly clicked one%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.setSelectedRows(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            removeHilightBar(clusterName, true);%%00010            createHilightBar(clusterName, 'knime-selected');%%00010            _value.options.selection = [];%%00010            _value.options.selection.push([clusterKey, 'knime-selected']);%%00010        } else {%%00010            // Select the clicked bar, as it is either a new selection or a additional selection%%00010            if (_representation.options.enableSelection) {%%00010                if (_value.options.publishSelection) {%%00010                    knimeService.addRowsToSelection(_translator.sourceID, [clusterKey], _translator.sourceID);%%00010                }%%00010            }%%00010            createHilightBar(clusterName, 'knime-selected');%%00010            _value.options.selection.push([clusterKey, 'knime-selected']);%%00010        }%%00010        checkClearSelectionButton();%%00010    };%%00010%%00010    onSelectionChanged = function (data) {%%00010        if (!_value.options.selection) {%%00010            _value.options.selection = [];%%00010        }%%00010        if (data.reevaluate) {%%00010            removeHilightBar('', true);%%00010            var selectedRows = knimeService.getAllRowsForSelection(_translator.sourceID);%%00010            var partiallySelectedRows = knimeService.getAllPartiallySelectedRows(_translator.sourceID);%%00010            var length, selectedRow, partiallySelectedRow;%%00010            for (selectedRow in selectedRows) {%%00010                length = _value.options.selection.length;%%00010                _value.options.selection[length] = [selectedRows[selectedRow], 'knime-selected'];%%00010                createHilightBar(_keyNameMap.getNameFromKey(selectedRows[selectedRow]), 'knime-selected');%%00010            }%%00010            for (partiallySelectedRow in partiallySelectedRows) {%%00010                length = _value.options.selection.length;%%00010                _value.options.selection[length] = [partiallySelectedRows[partiallySelectedRow],%%00010                    'knime-partially-selected'];%%00010                createHilightBar(_keyNameMap.getNameFromKey(partiallySelectedRows[partiallySelectedRow]),%%00010                    'knime-partially-selected');%%00010            }%%00010        } else if (data.changeSet) {%%00010            if (data.changeSet.removed) {%%00010                data.changeSet.removed.forEach(function (rowId) {%%00010                    var clusterName = rowId;%%00010                    var index = getSelectedRowIDs().indexOf(clusterName);%%00010                    if (index &gt; -1) {%%00010                        removeHilightBar(_keyNameMap.getNameFromKey(rowId), false);%%00010                        _value.options.selection.splice(index, 1);%%00010                    }%%00010                });%%00010            }%%00010            if (data.changeSet.partialRemoved) {%%00010                data.changeSet.partialRemoved.forEach(function (rowId) {%%00010                    var clusterName = rowId;%%00010                    var index = getSelectedRowIDs().indexOf(clusterName);%%00010                    if (index &gt; -1) {%%00010                        removeHilightBar(_keyNameMap.getNameFromKey(rowId), false);%%00010                        _value.options.selection.splice(index, 1);%%00010                    }%%00010                });%%00010            }%%00010            if (data.changeSet.added) {%%00010                data.changeSet.added.forEach(function (rowId) {%%00010                    var index = getSelectedRowIDs().indexOf(rowId);%%00010                    if (index === -1) {%%00010                        _value.options.selection.push([rowId, 'knime-selected']);%%00010                        createHilightBar(_keyNameMap.getNameFromKey(rowId), 'knime-selected');%%00010                    }%%00010                });%%00010            }%%00010            if (data.changeSet.partialAdded) {%%00010                data.changeSet.partialAdded.forEach(function (rowId) {%%00010                    var index = getSelectedRowIDs().indexOf(rowId);%%00010                    if (index === -1) {%%00010                        _value.options.selection.push([rowId, 'knime-partially-selected']);%%00010                        createHilightBar(_keyNameMap.getNameFromKey(rowId), 'knime-partially-selected');%%00010                    }%%00010                });%%00010            }%%00010        }%%00010        checkClearSelectionButton();%%00010    };%%00010%%00010    // eslint-disable-next-line complexity%%00010    processData = function () {%%00010        var optMethod = _representation.options.aggr;%%00010        var optFreqCol = _representation.options.freq;%%00010        var optCat = _representation.options.cat;%%00010%%00010        var customColors, colorScale;%%00010        if (_representation.inObjects[1]) {%%00010            // Custom color scale%%00010            var colorTable = new kt();%%00010            colorTable.setDataTable(_representation.inObjects[1]);%%00010            if (colorTable.getColumnTypes()[0] === 'string') {%%00010                customColors = {};%%00010                var colorCol = colorTable.getColumn(0);%%00010                for (var color = 0; color &lt; colorCol.length; color++) {%%00010                    customColors[colorCol[color]] = colorTable.getRowColors()[color];%%00010                }%%00010                colorScale = [];%%00010            }%%00010        }%%00010%%00010        categories = knimeTable.getColumn(optCat);%%00010        var numCat = categories.length;%%00010%%00010        if (optMethod === 'Occurence\u00A0Count') {%%00010            optFreqCol = [knimeTable.getColumnNames()[1]];%%00010        }%%00010%%00010        // Get the frequency columns%%00010        var valCols = [];%%00010        freqCols = [];%%00010%%00010        for (var k = 0; k &lt; optFreqCol.length; k++) {%%00010            var valCol = knimeTable.getColumn(optFreqCol[k]);%%00010            valCols.push(valCol);%%00010            freqCols.push(optFreqCol[k]);%%00010        }%%00010%%00010        plotData = [];%%00010        freqColValueOnMissValCat = [];%%00010        missValInCat = new Array(numCat);%%00010        for (var category = 0; category &lt; numCat; category++) {%%00010            missValInCat[category] = [];%%00010        }%%00010        isMissValCat = false;%%00010        missValCatValues = [];%%00010        var numFreqColsNoMissVal = 0; // number of freq columns which have non-missing values (needed for color scale)%%00010        if (valCols.length &gt; 0) {%%00010            var numDataPoints = valCols[0].length;%%00010            for (var j = 0; j &lt; freqCols.length; j++) {%%00010%%00010                var col = freqCols[j];%%00010                if (optMethod === 'Occurence\u00A0Count' &amp;&amp; !_representation.isHistogram) {%%00010                    col = 'Occurrence Count';%%00010                }%%00010                var values = [];%%00010                var onlyMissValInCats = true; // whether the freq col has only%%00010                // missing values in%%00010                // non-&quot;Missing values&quot;%%00010                // categories%%00010                var hasValueOnMissValCat = false; // whether the freq col has%%00010                // a non-missing value in%%00010                // the Missing values%%00010                // category%%00010%%00010                for (var i = 0; i &lt; numDataPoints; i++) {%%00010                    if (typeof categories !== 'undefined') {%%00010                        var cat = categories[i];%%00010                        var val = valCols[j][i];%%00010%%00010                        if (cat === null) {%%00010                            // Missing values category%%00010                            isMissValCat = true;%%00010                            if (val !== null) {%%00010                                // save the non-missing value for the%%00010                                // corresponding freq col%%00010                                missValCatValues.push({%%00010                                    col: col,%%00010                                    value: val%%00010                                });%%00010                                // this freq col has non-missing value in the%%00010                                // Missing value category%%00010                                hasValueOnMissValCat = true;%%00010                            }%%00010                        } else if (val !== null) {%%00010                            // if both cat and value are not null - normal%%00010                            // case, just add the value%%00010                            onlyMissValInCats = false;%%00010                            values.push({%%00010                                x: cat,%%00010                                y: val%%00010                            });%%00010                        }%%00010%%00010                        if (val === null) {%%00010                            // this freq col has a missing value in the current%%00010                            // category - save this info%%00010                            missValInCat[i].push(col);%%00010                        }%%00010                    }%%00010                }%%00010%%00010                if (onlyMissValInCats) {%%00010                    // The freq col has only missing values in normal categories%%00010                    // -%%00010                    // we save whether it has a non-missing value in the Missing%%00010                    // values category.%%00010                    // Whether this column is going to be displayed in the view%%00010                    // depends on the &quot;includeMissValCat&quot; option.%%00010                    // So we don't add the column to the plot at this moment -%%00010                    // wait for processMissingValues()%%00010                    // Note: a non-missing value (if there is) is stored in%%00010                    // missValCatValues - hence, enough to store only a boolean%%00010                    // flag%%00010                    freqColValueOnMissValCat.push({%%00010                        col: col,%%00010                        hasValueOnMissValCat: hasValueOnMissValCat%%00010                    });%%00010                    if (hasValueOnMissValCat) {%%00010                        // If there is a non-missing value, then the presence of%%00010                        // the column depends on the &quot;includeMissValCat&quot; option,%%00010                        // which can be switched in the view on the fly.%%00010                        // We do not want this switch to influence on the color%%00010                        // scale, so we count it%%00010                        numFreqColsNoMissVal++;%%00010                    }%%00010                } else {%%00010                    // the freq col has non-missing values in normal categories%%00010                    // - add this column to the view%%00010                    var plotStream = {%%00010                        key: col,%%00010                        values: values%%00010                    };%%00010                    plotData.push(plotStream);%%00010%%00010                    if (customColors) {%%00010                        var customColor = customColors[col];%%00010                        if (!customColor) {%%00010                            customColor = '#7C7C7C';%%00010                        }%%00010                        colorScale.push(customColor);%%00010                    }%%00010                    numFreqColsNoMissVal++;%%00010                }%%00010            }%%00010        } else {%%00010            knimeService.setWarningMessage('No numeric values detected');%%00010            return;%%00010        }%%00010%%00010        if (customColors) {%%00010            colorRange = colorScale;%%00010        } else {%%00010            // Default color scale%%00010            if (numFreqColsNoMissVal &gt; 10) {%%00010                colorScale = d3.scale.category20();%%00010            } else {%%00010                colorScale = d3.scale.category10();%%00010            }%%00010            colorRange = colorScale.range();%%00010        }%%00010%%00010        processMissingValues();%%00010    };%%00010%%00010    /**%%00010     * @param {bool} switched - if the chart update was triggered by changing the &quot;include 'Missing values' category&quot;%%00010     * option in the view%%00010     * @returns {undefined}%%00010     */%%00010    processMissingValues = function (switched) {%%00010        // Make a list of freq columns to exclude%%00010        var excludeCols = []; // column names to exclude%%00010        // Go through the list of those freq cols which have only missing values%%00010        // in normal categories%%00010        // and exclude those which either 1) has a missing value in the Missing%%00010        // values category, or%%00010        // 2) has a non-missing value there but the option is set to Don't%%00010        // include missing values%%00010        for (var colI = 0; colI &lt; freqColValueOnMissValCat.length; colI++) {%%00010            var col = freqColValueOnMissValCat[colI];%%00010            if (!col.hasValueOnMissValCat || col.hasValueOnMissValCat &amp;&amp; !_value.options.includeMissValCat) {%%00010                excludeCols.push(col.col);%%00010            }%%00010        }%%00010%%00010        // Make a list of excluded bars per category or whole categories%%00010        var excludeBars = []; // bars (in string representation) to exclude%%00010        var excludeCats = []; // category names to exclude%%00010        var numLeftCols = freqCols.length - excludeCols.length; // how many%%00010        // columns left%%00010        // after%%00010        // excluded ones%%00010        var missValCatBars, // bars for Missing values category we add to the%%00010            data, dataInd;%%00010        // end, so we store them separately%%00010        var excludeWholeMissValCat = false;%%00010        excludeFreqColCatMap = {};%%00010        // We group the warnings by category, so we iterate over categories%%00010        for (var catI = 0; catI &lt; missValInCat.length; catI++) {%%00010            var cat = categories[catI];%%00010            // take only those freq cols which have missing values in the%%00010            // current category and were not whole excluded%%00010            var cols = missValInCat[catI].filter(function (x) {%%00010                return excludeCols.indexOf(x) === -1;%%00010            });%%00010            if (cols.length &gt; 0) {%%00010                if (cols.length === numLeftCols) {%%00010                    // if all the left freq cols have missing values - exclude%%00010                    // the whole category%%00010                    if (cat === null) {%%00010                        excludeWholeMissValCat = true; // Missing values category will be appended to the end%%00010                    } else {%%00010                        excludeCats.push(cat);%%00010                    }%%00010                } else {%%00010                    // build a string of excluded bars (cat - col1, col2 ...)%%00010                    var label = cat === null ? MISSING_VALUES_LABEL : cat;%%00010                    var exclStr = label + ' - ' + cols.join(', ');%%00010                    if (cat === null) {%%00010                        missValCatBars = exclStr; // Missing values category will be appended to the end%%00010                    } else {%%00010                        excludeBars.push(exclStr);%%00010                    }%%00010                    // for normal categories and also for the Missing values%%00010                    // category (if it's included in the view)%%00010                    // we fill the map of excluded bars (grouped by freq cols) -%%00010                    // needed for Stacked plot%%00010                    if (cat !== null || _value.options.includeMissValCat) {%%00010                        cols.forEach(function (col) {%%00010                            if (typeof excludeFreqColCatMap[col] === 'undefined') {%%00010                                excludeFreqColCatMap[col] = [cat];%%00010                            } else {%%00010                                excludeFreqColCatMap[col].push(cat);%%00010                            }%%00010                        });%%00010                    }%%00010                }%%00010            }%%00010        }%%00010        // exclude smth from Missing values category, if it's included in the%%00010        // view%%00010        if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            if (excludeWholeMissValCat) {%%00010                excludeCats.push(MISSING_VALUES_LABEL);%%00010            } else if (typeof missValCatBars !== 'undefined') {%%00010                excludeBars.push(missValCatBars);%%00010            }%%00010        }%%00010%%00010        // Add or remove the non-missing values of the Missing values category%%00010        handleMissingValues(excludeCols, switched, data, dataInd);%%00010%%00010        // Set warning messages%%00010        if (!showWarnings) {%%00010            return;%%00010        }%%00010%%00010        handleWarnings(excludeCols, excludeCats, excludeBars);%%00010    };%%00010%%00010    handleMissingValues = function (excludeCols, switched, data, dataInd) {%%00010        for (var i = 0; i &lt; missValCatValues.length; i++) {%%00010            var item = missValCatValues[i];%%00010            if (excludeCols.indexOf(item.col) !== -1 &amp;&amp; !(!_value.options.includeMissValCat &amp;&amp; switched)) {%%00010                /*%%00010                 * Fact that the freq col is in missValCatValues means it has a non-missing value in Missing values%%00010                 * category. If this col was excluded, that means it has only missing values in all other categories AND%%00010                 * we &quot;don't include MissValCat&quot;. In case it's the first time the plot is building, we don't need to do%%00010                 * anything - call continue. But if a user switched the option &quot;includeMissValCat&quot; from 'on' to 'off',%%00010                 * we need to remove the value of MissValCat from the plot further below.%%00010                 */%%00010                continue;%%00010            }%%00010            // find if the plot has already the data (key-&gt;values) for the current freq col == key%%00010            // data object needs to be reset, otherwise missing values will be added to previous data%%00010            data = null;%%00010            for (var j = 0; j &lt; plotData.length; j++) {%%00010                if (plotData[j].key === item.col) {%%00010                    data = plotData[j];%%00010                    dataInd = j;%%00010                    break;%%00010                }%%00010            }%%00010            if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                /* if we include Missing values category to the view, we need to add its values */%%00010                var val = {%%00010                    x: MISSING_VALUES_LABEL,%%00010                    y: item.value%%00010                };%%00010                if (typeof data === 'undefined' || data === null) {%%00010                    plotData.push({%%00010                        key: item.col,%%00010                        values: [val]%%00010                    });%%00010                } else {%%00010                    data.values.push(val);%%00010                }%%00010            } else if (switched) {%%00010                // if we don't include Missing values category to the view AND%%00010                // this option was switched in the view, we need to remove its%%00010                // value%%00010                if (typeof data !== 'undefined' &amp;&amp; data !== null) {%%00010                    data.values.pop();%%00010                    if (data.values.length === 0) {%%00010                        plotData.splice(dataInd, 1);%%00010                    }%%00010                }%%00010            }%%00010        }%%00010    };%%00010%%00010    handleWarnings = function (excludeCols, excludeCats, excludeBars) {%%00010        if (plotData.length === 0) {%%00010            // No data available warnings%%00010            var warning = '';%%00010            if (missValCatValues.length !== 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                warning = 'No chart was generated since all frequency columns have only missing values.\n' +%%00010                    'There are values where the category name is missing.\nTo see them switch on the option &quot;Include ' +%%00010                    '\'Missing values\' category&quot; in the view settings.';%%00010            } else {%%00010                warning = 'No chart was generated since all frequency columns have only missing values or empty.\n' +%%00010                    'Re-run the workflow with different data.';%%00010            }%%00010            knimeService.setWarningMessage(warning, NO_DATA_AVAILABLE);%%00010        } else {%%00010            knimeService.clearWarningMessage(NO_DATA_AVAILABLE);%%00010            // All other warnings%%00010            if (excludeCols.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage(%%00010                    'Following frequency columns are not present or contain only missing values and were ' +%%00010                    'excluded from the view:\n    ' + excludeCols.join(', '), FREQ_COLUMN_MISSING_VALUES_ONLY);%%00010            } else {%%00010                knimeService.clearWarningMessage(FREQ_COLUMN_MISSING_VALUES_ONLY);%%00010            }%%00010%%00010            if (excludeCats.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage(%%00010                    'Following categories contain only missing values and were excluded from the view:\n    ' +%%00010                    excludeCats.join(', '), CATEGORY_MISSING_VALUES_ONLY);%%00010            } else {%%00010                knimeService.clearWarningMessage(CATEGORY_MISSING_VALUES_ONLY);%%00010            }%%00010%%00010            if (excludeBars.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage(%%00010                    'Following bars contain only missing values in frequency column and were excluded from the ' +%%00010                    'view:\n    ' + excludeBars.join('\n    '), MISSING_VALUES_ONLY);%%00010            } else {%%00010                knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010            }%%00010        }%%00010    };%%00010%%00010    /**%%00010     * This is a workaround for the stacked plot problem coming from the nvd3%%00010     * library implementation. They do not really support missing values in the%%00010     * Stacked option: (https://github.com/novus/nvd3/issues/1941 - &quot;The%%00010     * solution is to adjust your data before handing it to nvd3.&quot; - nice%%00010     * answer) The implementation uses a simple d3.layout.stack which requires%%00010     * all data have the same length%%00010     * (https://github.com/d3/d3-3.x-api-reference/blob/master/Stack-Layout.md#_stack)%%00010     * Missing values may lead to different lengths. A workaround here is to add%%00010     * dummy null values in place of excluded bars before drawing to Stacked%%00010     * plot. And remove them before switching to Grouped plot.%%00010     * @param {bool} addDummy - true if dummy is supposed to be added, false otherwise%%00010     * @returns {undefined}%%00010     */%%00010    fixStackedData = function (addDummy) {%%00010        plotData.forEach(function (dataValues) {%%00010            var excludeCats = excludeFreqColCatMap[dataValues.key];%%00010            if (typeof excludeCats === 'undefined') {%%00010                // if this freq col does not have excluded bars at all - nothing%%00010                // to do%%00010                return;%%00010            }%%00010            if (addDummy) {%%00010                // Another implementation thing is that the categories in every%%00010                // freq col must follow the same order.%%00010                // So we cannot simply append dummy nulls to the end.%%00010                // Instead we need to replace the whole &quot;values&quot; array.%%00010                // We go over the categories and add either a real value or a%%00010                // dummy null depending on what's present.%%00010                var i = 0;%%00010                var j = 0;%%00010                var values = dataValues.values;%%00010                var newValues = [];%%00010                categories.forEach(function (cat) {%%00010                    if (cat === null) {%%00010                        return;%%00010                    }%%00010                    if (i &lt; values.length &amp;&amp; values[i].x === cat) {%%00010                        newValues.push(values[i]);%%00010                        i++;%%00010                    } else if (j &lt; excludeCats.length &amp;&amp; excludeCats[j] === cat) {%%00010                        newValues.push({%%00010                            x: cat,%%00010                            y: null%%00010                        });%%00010                        j++;%%00010                    }%%00010                });%%00010                if (i &lt; values.length &amp;&amp; values[i].x === MISSING_VALUES_LABEL) {%%00010                    newValues.push(values[i]);%%00010                } else if (j &lt; excludeCats.length &amp;&amp; excludeCats[j] === null) {%%00010                    newValues.push({%%00010                        x: MISSING_VALUES_LABEL,%%00010                        y: null%%00010                    });%%00010                }%%00010                dataValues.values = newValues;%%00010            } else {%%00010                // remove dummy null values (basically any null values as there%%00010                // can be no other nulls)%%00010                dataValues.values = dataValues.values.filter(function (value) {%%00010                    return value.y !== null;%%00010                });%%00010            }%%00010        });%%00010    };%%00010%%00010    updateTitles = function (updateChart) {%%00010        if (chart) {%%00010            var curTitle = d3.select('#title');%%00010            var curSubtitle = d3.select('#subtitle');%%00010            var chartNeedsUpdating = curTitle.empty() !== !_value.options.title ||%%00010                curSubtitle.empty() !== !_value.options.subtitle;%%00010            if (!_value.options.title) {%%00010                curTitle.remove();%%00010            }%%00010            if (_value.options.title) {%%00010                if (curTitle.empty()) {%%00010                    svg.append('text')%%00010                        .attr('x', 20)%%00010                        .attr('y', 30)%%00010                        .attr('id', 'title')%%00010                        .attr('class', 'knime-title')%%00010                        .text(_value.options.title);%%00010                } else {%%00010                    curTitle.text(_value.options.title);%%00010                }%%00010            }%%00010            if (!_value.options.subtitle) {%%00010                curSubtitle.remove();%%00010            }%%00010            if (_value.options.subtitle) {%%00010                if (curSubtitle.empty()) {%%00010                    svg.append('text')%%00010                        .attr('x', 20)%%00010                        .attr('y', _value.options.title ? 46 : 20)%%00010                        .attr('id', 'subtitle')%%00010                        .attr('class', 'knime-subtitle')%%00010                        .text(_value.options.subtitle);%%00010                } else {%%00010                    curSubtitle.text(_value.options.subtitle).attr('y', _value.options.title ? 46 : 20);%%00010                }%%00010            }%%00010%%00010            var topMargin = 10;%%00010            topMargin += _value.options.title ? 10 : 0;%%00010            topMargin += _value.options.subtitle ? 8 : 0;%%00010            if (_representation.options.legend) {%%00010                chart.legend.margin({%%00010                    top: topMargin,%%00010                    bottom: topMargin%%00010                });%%00010            } else {%%00010                chart.margin({%%00010                    top: topMargin * 2%%00010                });%%00010            }%%00010%%00010            var isTitle = _value.options.title || _value.options.subtitle;%%00010            knimeService.floatingHeader(isTitle);%%00010%%00010            if (updateChart &amp;&amp; chartNeedsUpdating) {%%00010                if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010                    var height = isTitle ? '100%' : 'calc(100% - ' + knimeService.headerHeight() + 'px)';%%00010                    layoutContainer.style('height', height)%%00010                        // two rows below force to invalidate the container which%%00010                        // solves a weird problem with vertical scroll bar in IE%%00010                        .style('display', 'none')%%00010                        .style('display', 'block');%%00010                    d3.select('#svgContainer').style('height', height);%%00010                }%%00010                chart.update();%%00010            }%%00010        }%%00010    };%%00010%%00010    /**%%00010     * Updates the axis labels after they have been wrapped. And add a title to%%00010     * show the full name. Additionally adjust the length of the maximum and%%00010     * minimum value on the y-axis.%%00010     * @returns {undefined}%%00010     */%%00010    updateLabels = function () {%%00010        var optShowMaximum = _value.options.showMaximum;%%00010        if (typeof optShowMaximum === 'undefined') {%%00010            optShowMaximum = _representation.options.showMaximum;%%00010        }%%00010        var optOrientation = _value.options.orientation;%%00010        var texts = svg.select('.knime-x').selectAll('text');%%00010        texts.each(function (d, i) {%%00010            if (typeof wrappedPlotData[0].values[i] !== 'undefined') {%%00010                var me = d3.select(this);%%00010                me.text(wrappedPlotData[0].values[i].x);%%00010                me.append('title').classed('knime-tooltip', true);%%00010            }%%00010        });%%00010        var stacked = _value.options.chartType;%%00010        var extremValues = [];%%00010        if (stacked === 'Grouped') {%%00010            extremValues = getRoundedMaxValue(false);%%00010        } else {%%00010            extremValues = getRoundedMaxValue(true);%%00010        }%%00010        var minValue = extremValues[0];%%00010        var maxValue = extremValues[1];%%00010%%00010        var tickAmount = chart.yAxis.ticks();%%00010        if (tickAmount &lt; 2) {%%00010            tickAmount = 2;%%00010        }%%00010%%00010        var textsYMin, textsYMax;%%00010        if (optShowMaximum) {%%00010            if (optOrientation) {%%00010                textsYMin = svg.select('.nv-axisMin-x').selectAll('text');%%00010                textsYMax = svg.select('.nv-axisMax-x').selectAll('text');%%00010            } else {%%00010                textsYMin = svg.select('.nv-axisMin-y').selectAll('text');%%00010                textsYMax = svg.select('.nv-axisMax-y').selectAll('text');%%00010            }%%00010            textsYMin.text(minValue);%%00010            textsYMax.text(maxValue);%%00010        }%%00010%%00010        var labelTooltip = texts.selectAll('.knime-tooltip');%%00010        var counter = 0;%%00010        labelTooltip.each(function () {%%00010            var me = d3.select(this);%%00010            if (typeof plotData[0].values[counter] !== 'undefined') {%%00010                me.text(plotData[0].values[counter].x);%%00010            }%%00010            counter++;%%00010        });%%00010%%00010        // Create titles for the Axis-Tooltips%%00010        svg.select('.knime-y text.knime-axis-label').append('title').classed('knime-tooltip', true).text(%%00010            _value.options.freqLabel);%%00010        svg.select('.knime-x text.knime-axis-label').append('title').classed('knime-tooltip', true).text(%%00010            _value.options.catLabel);%%00010    };%%00010%%00010    getRoundedMaxValue = function (isStacked) {%%00010        var maxValue = 0;%%00010        var minValue = 0;%%00010        var considerNegativeList = false;%%00010        if (isStacked) {%%00010            var stackedExtremValues = getStackedMaxValue (considerNegativeList, maxValue, minValue);%%00010            maxValue = stackedExtremValues.maxValue;%%00010            minValue = stackedExtremValues.minValue;%%00010        } else {%%00010            for (var i = 0; i &lt; plotData.length; i++) {%%00010                if (plotData[i].disabled !== true) {%%00010                    var tempMaxValue = Math.max(d3.max(plotData[i].values, function (d) {%%00010                        return parseFloat(d.y);%%00010                    }), 0);%%00010                    if (tempMaxValue &gt; maxValue) {%%00010                        maxValue = tempMaxValue;%%00010                    }%%00010                    var tempMinValue = Math.min(d3.min(plotData[i].values, function (d) {%%00010                        return parseFloat(d.y);%%00010                    }), 0);%%00010                    if (tempMinValue &lt; minValue) {%%00010                        minValue = tempMinValue;%%00010                    }%%00010                }%%00010            }%%00010        }%%00010%%00010        var tickAmount = chart.yAxis.ticks();%%00010        if (tickAmount &lt; 2) {%%00010            tickAmount = 2;%%00010        }%%00010%%00010        var scale = d3.scale.linear().domain([minValue, maxValue]);%%00010        var ticks = scale.ticks(tickAmount);%%00010        var precision = 1;%%00010        for (var tickI = 0; tickI &lt; ticks.length; tickI++) {%%00010            if (ticks[tickI] !== 0) {%%00010                var curTick = ticks[tickI];%%00010                if (curTick.toString().indexOf('.') &gt;= 0) {%%00010                    // +1 because the precision of the maximum should be one%%00010                    // decimal more then the normal ticks%%00010                    precision = Math.max(curTick.toString().split('.')[1].length + 1, precision);%%00010                } else if (curTick.toString().indexOf('e') &gt;= 0) {%%00010                    precision = Math.max(Math.abs(parseFloat(curTick.toString().split('e')[1])), precision);%%00010                }%%00010            }%%00010        }%%00010%%00010        var roundedMaxValue = Math.ceil(parseFloat(maxValue) * Math.pow(10, precision)) / Math.pow(10, precision);%%00010        var roundedMinValue = Math.floor(parseFloat(minValue) * Math.pow(10, precision)) / Math.pow(10, precision);%%00010        return [roundedMinValue, roundedMaxValue];%%00010    };%%00010%%00010    getStackedMaxValue = function (considerNegativeList, maxValue, minValue) {%%00010        var sumListPositive = [];%%00010        var sumListNegative = [];%%00010        for (var dataI = 0; dataI &lt; plotData.length; dataI++) {%%00010            for (var valueI = 0; valueI &lt; plotData[dataI].values.length; valueI++) {%%00010                if (sumListPositive.length &lt; plotData[dataI].values.length) {%%00010                    sumListPositive.push(0);%%00010                    sumListNegative.push(0);%%00010                }%%00010                if (plotData[dataI].disabled !== true) {%%00010                    if (plotData[dataI].values[valueI].y &gt; 0) {%%00010                        sumListPositive[valueI] += plotData[dataI].values[valueI].y;%%00010                    } else {%%00010                        sumListNegative[valueI] += plotData[dataI].values[valueI].y;%%00010                        considerNegativeList = true;%%00010                    }%%00010                }%%00010            }%%00010        }%%00010        maxValue = d3.max(sumListPositive);%%00010        if (considerNegativeList) {%%00010            minValue = d3.min(sumListNegative);%%00010        }%%00010        return { minValue: minValue, maxValue: maxValue };%%00010    };%%00010%%00010    /**%%00010     * Find the max size of one element on the y-axis to see how much space is needed. To find out the max size, a%%00010     * temp-text object is created and measured. Afterwards that temp-text is deleted (is not visible in the view).%%00010     * @param {bool} optShowMaximum%%00010     * @returns {object}%%00010     */%%00010    function checkMaxSizeYAxis(optShowMaximum) {%%00010        var maxValue = 0;%%00010        var minValue = 0;%%00010        var extremValues = [];%%00010        var stacked = _value.options.chartType;%%00010        if (stacked === 'Grouped') {%%00010            extremValues = getRoundedMaxValue(false);%%00010        } else {%%00010            extremValues = getRoundedMaxValue(true);%%00010        }%%00010        minValue = extremValues[0];%%00010        maxValue = extremValues[1];%%00010%%00010        var svgHeight = parseInt(d3.select('svg').style('height'), 10);%%00010        var svgWidth = parseInt(d3.select('svg').style('width'), 10);%%00010%%00010        // Calculate values of the y-axis to get an impression about the precision.%%00010        var scale = d3.scale.linear().domain([minValue, maxValue]).range(%%00010            [0, _representation.options.svg.height]);%%00010        var defaultTicksAmount = 4;%%00010        var ticks = scale.ticks(defaultTicksAmount);%%00010        if (optShowMaximum) {%%00010            if (maxValue.toString().indexOf('.') &gt; 0) {%%00010                if (ticks[ticks.length - 1].toString().indexOf('.') &gt; 0) {%%00010                    var decimalString = ticks[ticks.length - 1].toString().split('.')[1];%%00010                    ticks.push(parseFloat(maxValue.toFixed(decimalString.length) + 1));%%00010                } else {%%00010                    ticks.push(parseFloat(maxValue.toFixed(0)));%%00010                }%%00010            } else {%%00010                ticks.push(maxValue);%%00010            }%%00010            if (minValue &lt; 0 &amp;&amp; minValue.toString().indexOf('e') &lt; 0) {%%00010                if (ticks[0].toString().split('.')[1]) {%%00010                    ticks.push(minValue.toFixed(ticks[0].toString().split('.')[1].length - 1));%%00010                } else {%%00010                    ticks.push(minValue.toFixed(1));%%00010                }%%00010            } else if (minValue &lt; 0) {%%00010                ticks.push(minValue);%%00010            }%%00010        }%%00010        var configObject = {%%00010            container: document.querySelector('svg'),%%00010            tempContainerClasses: 'knime-axis',%%00010            maxWidth: svgWidth,%%00010            maxHeight: svgHeight%%00010        };%%00010%%00010        var results = knimeService.measureAndTruncate(ticks, configObject);%%00010%%00010        // Return the format to show the result and the space needed to the left border.%%00010        return results;%%00010    }%%00010%%00010    /**%%00010     * Find the max size of the biggest element on the x-Axis. Move the Graph so that this object is completely visible.%%00010     * @param {array} dataValues - the data array of which the chart should be created for%%00010     * @param {bool} staggerLabels - true if x axis labels are staggered (allows more space), false otherwise%%00010     * @returns {object}%%00010     */%%00010    checkMaxSizeXAxis = function (dataValues, staggerLabels) {%%00010        var maxWidth, barWidth, nValue, group, groupValue;%%00010        var optOrientation = _value.options.orientation;%%00010        // var svgHeight = parseInt(d3.select('svg').style('height'));%%00010        var svgWidth = parseInt(d3.select('svg').style('width'), 10);%%00010        var amountOfBars = dataValues[0].values.length;%%00010        var amountOfDimensions = dataValues.length;%%00010%%00010        var spaceBetweenBars = _representation.isHistogram ? 0 : 40;%%00010        if (optOrientation) {%%00010            maxWidth = svgWidth / 2;%%00010        } else {%%00010            if (d3.select('.nv-groups').node() === null) {%%00010                barWidth = svgWidth / amountOfBars - spaceBetweenBars;%%00010            } else {%%00010                barWidth = d3.select('.nv-groups').select('rect')[0][0].width.baseVal.value * amountOfDimensions;%%00010            }%%00010            if (staggerLabels) {%%00010                maxWidth = barWidth * 2;%%00010            } else {%%00010                maxWidth = barWidth;%%00010            }%%00010        }%%00010%%00010        var configObject = {%%00010            container: document.querySelector('svg'),%%00010            tempContainerClasses: 'knime-axis',%%00010            /* maxHeight: svgHeight / amountOfBars, */%%00010            minimalChars: 1%%00010        };%%00010        if (!_representation.isHistogram) {%%00010            configObject.maxWidth = maxWidth;%%00010        }%%00010        var xValues = [];%%00010        for (nValue in dataValues[0].values) {%%00010            xValues.push(dataValues[0].values[nValue].x);%%00010        }%%00010%%00010        var results = knimeService.measureAndTruncate(xValues, configObject);%%00010%%00010        var xExtremValues = [];%%00010        xExtremValues.push(dataValues[0].values[0].x);%%00010        xExtremValues.push(dataValues[0].values[dataValues[0].values.length - 1].x);%%00010%%00010        if (staggerLabels) {%%00010            if (!optOrientation) {%%00010                configObject.maxWidth = svgWidth / amountOfBars - spaceBetweenBars;%%00010            }%%00010        }%%00010        var extremResults = knimeService.measureAndTruncate(xExtremValues, configObject);%%00010%%00010        // Update the cloned data array to contain the wrapped labels%%00010        for (group in dataValues) {%%00010            for (groupValue in dataValues[group].values) {%%00010                if (groupValue === 0) {%%00010                    wrappedPlotData[group].values[groupValue].x = extremResults.values[0].truncated;%%00010                } else if (groupValue === dataValues[group].values.length - 1) {%%00010                    wrappedPlotData[group].values[groupValue].x = extremResults.values[1].truncated;%%00010                } else {%%00010                    var val = results.values[parseInt(groupValue, 10)];%%00010                    wrappedPlotData[group].values[groupValue].x = typeof val === 'undefined' ? null : val.truncated;%%00010                }%%00010            }%%00010        }%%00010        return results;%%00010    };%%00010%%00010    // eslint-disable-next-line complexity%%00010    updateAxisLabels = function (updateChart) {%%00010%%00010        if (chart) {%%00010            var optOrientation = _value.options.orientation;%%00010            var optStaggerLabels = _value.options.staggerLabels;%%00010            var stacked = _value.options.chartType;%%00010            var optShowMaximum = _value.options.showMaximum;%%00010            var curCatAxisLabel, curFreqAxisLabel;%%00010            var curCatAxisLabelElement = d3.select('.nv-x.nv-axis .nv-axis-label');%%00010            var curFreqAxisLabelElement = d3.select('.nv-y.nv-axis .nv-axis-label');%%00010            var freqLabel = _value.options.freqLabel;%%00010            var catLabel = _value.options.catLabel;%%00010            var svgHeight = parseInt(d3.select('svg').style('height'), 10);%%00010            var svgWidth = parseInt(d3.select('svg').style('width'), 10);%%00010%%00010            if (typeof optShowMaximum === 'undefined') {%%00010                optShowMaximum = _representation.options.showMaximum;%%00010            }%%00010%%00010            wrappedPlotData = JSON.parse(JSON.stringify(plotData));%%00010%%00010            if (!curCatAxisLabelElement.empty()) {%%00010                curCatAxisLabel = curCatAxisLabelElement.text();%%00010            }%%00010%%00010            if (!curFreqAxisLabelElement.empty()) {%%00010                curFreqAxisLabel = curCatAxisLabelElement.text();%%00010            }%%00010%%00010            var chartNeedsUpdating = curCatAxisLabel !== _value.options.catLabel ||%%00010                curFreqAxisLabel !== _value.options.freqLabel;%%00010            if (!chartNeedsUpdating) {%%00010                return;%%00010            }%%00010%%00010            var configObjectLabels = {%%00010                container: document.querySelector('svg'),%%00010                tempContainerClasses: 'knime-axis-label',%%00010                maxWidth: svgWidth / 2,%%00010                maxHeight: svgHeight / 2,%%00010                minimalChars: 1%%00010            };%%00010%%00010            configObjectLabels.tempContainerAttributes = optOrientation ? { transform: 'rotate(-90)' } : '';%%00010            var catLabelSize = knimeService.measureAndTruncate(catLabel ? [catLabel] : [''], configObjectLabels);%%00010            configObjectLabels.tempContainerAttributes.transform = optOrientation ? '' : { transform: 'rotate(-90)' };%%00010            var freqLabelSize = knimeService.measureAndTruncate(freqLabel ? [freqLabel] : [''], configObjectLabels);%%00010%%00010            var maxSizeYAxis = checkMaxSizeYAxis(optShowMaximum);%%00010            var maxSizeXAxis = checkMaxSizeXAxis(wrappedPlotData, optStaggerLabels);%%00010            var svgSize = optOrientation ? parseInt(d3.select('svg').style('width'), 10)%%00010                : parseInt(d3.select('svg').style('height'), 10);%%00010%%00010            freqLabel = freqLabelSize.values[0].truncated;%%00010            catLabel = catLabelSize.values[0].truncated;%%00010%%00010            // space between two labels%%00010            var distanceBetweenLabels = 150;%%00010            var tickAmount = 0;%%00010            var rightMargin = 0;%%00010%%00010            if (optOrientation) {%%00010                tickAmount = parseInt((svgSize - maxSizeXAxis.max.maxWidth) /%%00010                    (maxSizeYAxis.max.maxWidth + distanceBetweenLabels), 10);%%00010                if (optShowMaximum) {%%00010                    // extend the border of the svg to be able to see the complete maximum label%%00010                    // factor 0.6 is chosen to give the label a little space to the border%%00010                    rightMargin = 0.6 * maxSizeYAxis.max.maxWidth;%%00010                }%%00010            } else {%%00010                tickAmount = parseInt((svgSize - maxSizeYAxis.max.maxHeight) /%%00010                    (maxSizeYAxis.max.maxHeight + distanceBetweenLabels), 10);%%00010            }%%00010%%00010            // nvd3 sets the cat label 55 pixel away from the axis. As with changing font size this%%00010            // is not enough, it is easier to calculate it ourselves%%00010            var spacingCatLabel = 25;%%00010%%00010            // nvd3 sets the freq label 20 pixel away from the axis. As with changing font size this%%00010            // is not enough, it is easier to calculate it ourselves%%00010            var spacingFreqLabel = 30;%%00010%%00010            // add some empty space, so that two labels are not to close together%%00010            var additionalEmptySpace = 15;%%00010%%00010            // add some empty space when labels are staggered. Normal empty space is too much.%%00010            var staggerLabelsAdditionalSpace = 5;%%00010%%00010            // space to the y-axis assured by nvd3%%00010            var paddingAmount = 15;%%00010%%00010            var xLabelDistance = 0;%%00010            var yLabelDistance = 0;%%00010%%00010            if (optOrientation) {%%00010                // -spacingCatLabel: reset the label to the position of the axis%%00010                // + maxSizeAxis: the calculated space needed by the label itself%%00010                // + additionalEmptySpace: add some empty space%%00010                // + freqLabelSize: on the x-Axis we have to account for the height of the label%%00010                xLabelDistance = -spacingFreqLabel + maxSizeXAxis.max.maxWidth + additionalEmptySpace;%%00010                yLabelDistance = -spacingCatLabel + freqLabelSize.max.maxHeight + additionalEmptySpace;%%00010            } else {%%00010                if (optStaggerLabels) {%%00010                    // -spacingCatLabel: reset the label to the position of the axis%%00010                    // maxSizeAxis: the calculated space needed by the label itself. 2x when staggered as%%00010                    // there are two lines in that case%%00010                    xLabelDistance = -spacingCatLabel + 2 * maxSizeXAxis.max.maxHeight + catLabelSize.max.maxHeight%%00010                        + additionalEmptySpace;%%00010                } else {%%00010                    xLabelDistance = -spacingCatLabel + maxSizeXAxis.max.maxHeight + catLabelSize.max.maxHeight%%00010                        + additionalEmptySpace;%%00010                }%%00010                yLabelDistance = -spacingFreqLabel + maxSizeYAxis.max.maxWidth + additionalEmptySpace;;%%00010            }%%00010%%00010            chart.xAxis.axisLabel(catLabel)%%00010                .axisLabelDistance(xLabelDistance)%%00010                .tickPadding(paddingAmount)%%00010                .showMaxMin(false);%%00010%%00010            chart.yAxis.axisLabel(freqLabel)%%00010                .axisLabelDistance(yLabelDistance)%%00010                .showMaxMin(optShowMaximum)%%00010                .ticks(tickAmount)%%00010                .tickFormat(d3.format('~.g'));%%00010%%00010            var extremValues = [];%%00010            if (stacked === 'Grouped') {%%00010                extremValues = getRoundedMaxValue(false);%%00010            } else {%%00010                extremValues = getRoundedMaxValue(true);%%00010            }%%00010            chart.yDomain([extremValues[0], extremValues[1]]);%%00010%%00010            // calculate the space the charts needs below the actual chart%%00010            // its calculated from the height of the text element,%%00010            // the height of the axis label and 2 times additional space for the 2 gaps between elements%%00010            var bottomMargin = optOrientation%%00010                ? maxSizeYAxis.max.maxHeight + freqLabelSize.max.maxHeight + 2 * additionalEmptySpace%%00010                : maxSizeXAxis.max.maxHeight + catLabelSize.max.maxHeight + 2 * additionalEmptySpace;%%00010            var leftMargin = optOrientation%%00010                ? maxSizeXAxis.max.maxWidth + catLabelSize.max.maxWidth + 2 * additionalEmptySpace%%00010                : maxSizeYAxis.max.maxWidth + freqLabelSize.max.maxHeight + 2 * additionalEmptySpace;%%00010%%00010            if (!_value.options.catLabel) {%%00010                bottomMargin = optOrientation ? bottomMargin : maxSizeXAxis.max.maxHeight + additionalEmptySpace;%%00010                leftMargin = optOrientation ? maxSizeXAxis.max.maxWidth + additionalEmptySpace : leftMargin;%%00010            }%%00010            if (!_value.options.freqLabel) {%%00010                bottomMargin = optOrientation ? maxSizeXAxis.max.maxHeight + additionalEmptySpace : bottomMargin;%%00010                leftMargin = optOrientation ? leftMargin : maxSizeYAxis.max.maxWidth + additionalEmptySpace;%%00010            }%%00010%%00010            if (!optOrientation) {%%00010                chart.staggerLabels(optStaggerLabels);%%00010                if (optStaggerLabels) {%%00010                    bottomMargin += _value.options.catLabel%%00010                        ? maxSizeXAxis.max.maxHeight + staggerLabelsAdditionalSpace%%00010                        : maxSizeXAxis.max.maxHeight / 2 + paddingAmount;%%00010                }%%00010            }%%00010            chart.margin({%%00010                left: leftMargin,%%00010                bottom: bottomMargin,%%00010                right: rightMargin%%00010            });%%00010%%00010            if (updateChart) {%%00010                chart.update();%%00010            }%%00010        }%%00010    };%%00010%%00010    updateChartType = function () {%%00010        if (this.value !== _value.options.chartType) {%%00010            _value.options.chartType = this.value;%%00010            var stacked = this.value === 'Stacked';%%00010            fixStackedData(stacked);%%00010            chart.stacked(stacked);%%00010            drawChart(true);%%00010        }%%00010    };%%00010    // eslint-disable-next-line complexity%%00010    drawControls = function () {%%00010        if (!knimeService) {%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.displayFullscreenButton) {%%00010            knimeService.allowFullscreen();%%00010        }%%00010        if (!_representation.options.enableViewControls) {%%00010            return;%%00010        }%%00010%%00010        var titleEdit = _representation.options.enableTitleEdit;%%00010        var subtitleEdit = _representation.options.enableSubtitleEdit;%%00010        var axisEdit = _representation.options.enableAxisEdit;%%00010        var chartTypeEdit = _representation.options.enableStackedEdit;%%00010        var orientationEdit = _representation.options.enableHorizontalToggle;%%00010        var staggerLabels = _representation.options.enableStaggerToggle;%%00010        var switchMissValCat = _representation.options.enableSwitchMissValCat;%%00010        var showMaximum = _representation.options.enableMaximumValue;%%00010        var enableSelection = _representation.options.enableSelection;%%00010        var displayClearButton = _representation.options.displayClearSelectionButton;%%00010        var enableStaticValuesEdit = _representation.options.enableStaticValuesEdit;%%00010%%00010        if (titleEdit) {%%00010            var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title,%%00010                function () {%%00010                    if (_value.options.title !== this.value) {%%00010                        _value.options.title = this.value;%%00010                        updateTitles(true);%%00010                    }%%00010                }, true);%%00010            knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010        }%%00010        if (subtitleEdit) {%%00010            var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle,%%00010                function () {%%00010                    if (_value.options.subtitle !== this.value) {%%00010                        _value.options.subtitle = this.value;%%00010                        updateTitles(true);%%00010                    }%%00010                }, true);%%00010            knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010        }%%00010        if ((titleEdit  || subtitleEdit) &amp;&amp; (axisEdit || orientationEdit || staggerLabels)) {%%00010            knimeService.addMenuDivider();%%00010        }%%00010%%00010        if (axisEdit) {%%00010            var catAxisText = knimeService.createMenuTextField('catAxisText', _value.options.catLabel, function () {%%00010                _value.options.catLabel = this.value;%%00010                updateAxisLabels(true);%%00010            }, true);%%00010            knimeService.addMenuItem('Category axis label:', 'ellipsis-h', catAxisText);%%00010%%00010            var freqAxisText = knimeService.createMenuTextField('freqAxisText', _value.options.freqLabel, function () {%%00010                _value.options.freqLabel = this.value;%%00010                updateAxisLabels(true);%%00010            }, true);%%00010            knimeService.addMenuItem('Frequency axis label:', 'ellipsis-v', freqAxisText);%%00010%%00010            if (switchMissValCat || orientationEdit || staggerLabels || chartTypeEdit) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (switchMissValCat &amp;&amp; isMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            var switchMissValCatCbx =%%00010                knimeService.createMenuCheckbox('switchMissValCatCbx', _value.options.includeMissValCat, function () {%%00010                    if (_value.options.includeMissValCat !== this.checked) {%%00010                        _value.options.includeMissValCat = this.checked;%%00010                        var stacked = _value.options.chartType === 'Stacked';%%00010                        if (stacked) {%%00010                            fixStackedData(false);%%00010                        }%%00010                        processMissingValues(true);%%00010                        if (stacked) {%%00010                            fixStackedData(true);%%00010                        }%%00010                        chart.update();%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Include \'Missing values\' category: ', 'question', switchMissValCatCbx);%%00010%%00010            if (orientationEdit || staggerLabels || chartTypeEdit) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (chartTypeEdit) {%%00010            var groupedRadio = knimeService.createMenuRadioButton('groupedRadio', 'chartType', 'Grouped',%%00010                updateChartType);%%00010            groupedRadio.checked = _value.options.chartType === groupedRadio.value;%%00010            knimeService.addMenuItem('Grouped:', 'align-left fa-rotate-270', groupedRadio);%%00010%%00010            var stackedRadio = knimeService.createMenuRadioButton('stackedRadio', 'chartType', 'Stacked',%%00010                updateChartType);%%00010            stackedRadio.checked = _value.options.chartType === stackedRadio.value;%%00010            knimeService.addMenuItem('Stacked:', 'tasks fa-rotate-270', stackedRadio);%%00010%%00010            if (orientationEdit || staggerLabels) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (orientationEdit) {%%00010            var orientationCbx = knimeService.createMenuCheckbox('orientationCbx', _value.options.orientation,%%00010                function () {%%00010                    if (_value.options.orientation !== this.checked) {%%00010                        _value.options.orientation = this.checked;%%00010                        d3.select('#staggerCbx').property('disabled', this.checked);%%00010                        drawChart(true);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Plot horizontal bar chart:', 'align-left', orientationCbx);%%00010        }%%00010%%00010        if (staggerLabels) {%%00010            var staggerCbx = knimeService.createMenuCheckbox('staggerCbx', _value.options.staggerLabels, function () {%%00010                if (_value.options.staggerLabels !== this.checked) {%%00010                    _value.options.staggerLabels = this.checked;%%00010                    drawChart(true);%%00010                }%%00010            });%%00010            staggerCbx.disabled = _value.options.orientation;%%00010            knimeService.addMenuItem('Stagger labels:', 'map-o', staggerCbx);%%00010        }%%00010%%00010        if (showMaximum) {%%00010            var displayMaximumCbx = knimeService.createMenuCheckbox('displayMaximumCbx', _value.options.showMaximum,%%00010                function () {%%00010                    if (_value.options.showMaximum !== this.checked) {%%00010                        _value.options.showMaximum = this.checked;%%00010                        drawChart(true);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Display maximum value:', 'arrows-v', displayMaximumCbx);%%00010        }%%00010%%00010        if (enableStaticValuesEdit) {%%00010            var enableStaticValues = knimeService.createMenuCheckbox('enableStaticValues', _value.options.showStaticBarValues, function () {%%00010                if (_value.options.showStaticBarValues !== this.checked) {%%00010                    _value.options.showStaticBarValues = this.checked;%%00010                    if (_value.options.showStaticBarValues) {%%00010                        createStaticBarValues();%%00010                    } else {%%00010                        removeStaticBarValues();%%00010                    }%%00010                }%%00010            }, true);%%00010            knimeService.addMenuItem('Show static bar values:', 'hashtag', enableStaticValues);%%00010        }%%00010%%00010        if (enableSelection) {%%00010            knimeService.addMenuDivider();%%00010            var subscribeToSelectionIcon = knimeService.createStackedIcon('check-square-o', 'angle-double-right',%%00010                'faded right sm', 'left bold');%%00010            var subscribeToSelectionMenu = knimeService.createMenuCheckbox('subscribeToSelection',%%00010                _value.options.subscribeToSelection, function () {%%00010                    if (_value.options.subscribeToSelection !== this.checked) {%%00010                        _value.options.subscribeToSelection = this.checked;%%00010                        subscribeToSelection(_value.options.subscribeToSelection);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Subscribe to selection:', subscribeToSelectionIcon, subscribeToSelectionMenu);%%00010%%00010            var publishSelectionIcon = knimeService.createStackedIcon('check-square-o', 'angle-right', 'faded left sm',%%00010                'right bold');%%00010            var publishSelectionMenu = knimeService.createMenuCheckbox('publishSelection',%%00010                _value.options.publishSelection, function () {%%00010                    if (_value.options.publishSelection !== this.checked) {%%00010                        _value.options.publishSelection = this.checked;%%00010                        publishSelection(this.checked);%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Publish selection:', publishSelectionIcon, publishSelectionMenu);%%00010        }%%00010%%00010        if (displayClearButton &amp;&amp;  _representation.options.enableSelection) {%%00010            knimeService.addButton('clearSelectionButton', 'minus-square-o', 'Clear selection', function () {%%00010                d3.selectAll('.row').classed({ selected: false, 'knime-selected': false, unselected: false });%%00010                removeHilightBar('', true);%%00010                _value.options.selection = [];%%00010                publishSelection(true);%%00010            });%%00010            d3.select('#clearSelectionButton').classed('inactive', true);%%00010        }%%00010    };%%00010%%00010    setCssClasses = function () {%%00010        // axis%%00010        var axis = d3.selectAll('.nv-axis')%%00010            .classed('knime-axis', true);%%00010        d3.selectAll('.nv-x')%%00010            .classed('knime-x', true);%%00010        d3.selectAll('.nv-y')%%00010            .classed('knime-y', true);%%00010        d3.selectAll('.nv-axislabel')%%00010            .classed('knime-axis-label', true);%%00010        axis.selectAll('path.domain')%%00010            .classed('knime-axis-line', true);%%00010        var axisMaxMin = d3.selectAll('.nv-axisMaxMin')%%00010            .classed('knime-axis-max-min', true);%%00010        axisMaxMin.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010        var tick = axis.selectAll('.knime-axis .tick')%%00010            .classed('knime-tick', true);%%00010        tick.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010        tick.selectAll('line')%%00010            .classed('knime-tick-line', true);%%00010%%00010        // legend%%00010        d3.selectAll('.nv-legendWrap')%%00010            .classed('knime-legend', true);%%00010        d3.selectAll('.nv-legend-symbol')%%00010            .classed('knime-legend-symbol', true);%%00010        d3.selectAll('.nv-legend-text')%%00010            .classed('knime-legend-label', true);%%00010%%00010        // Tooltip for axis labels allows to receive all mouse events%%00010        var axisToolTip = svg.selectAll('.knime-tick-label');%%00010        var labelToolTip = svg.selectAll('.knime-axis-label');%%00010        axisToolTip.style('pointer-events', 'all');%%00010        labelToolTip.style('pointer-events', 'all');%%00010        updateLabels();%%00010        if (_representation.options.enableSelection) {%%00010            registerClickHandler();%%00010        }%%00010    };%%00010%%00010    setTooltipCssClasses = function () {%%00010        // tooltip%%00010        var tooltip = d3.selectAll('.nvtooltip').classed('knime-tooltip', true);%%00010        tooltip.selectAll('.x-value').classed('knime-tooltip-caption', true).classed('knime-x', true);%%00010        tooltip.selectAll('.legend-color-guide').classed('knime-tooltip-color', true);%%00010        tooltip.selectAll('.key').classed('knime-tooltip-key', true);%%00010        tooltip.selectAll('.value').classed('knime-tooltip-value', true);%%00010    };%%00010%%00010    barChart.validate = function () {%%00010        return true;%%00010    };%%00010%%00010    barChart.getComponentValue = function () {%%00010        return _value;%%00010    };%%00010%%00010    barChart.getSVG = function () {%%00010        var svgElement = d3.select('svg')[0][0];%%00010        knimeService.inlineSvgStyles(svgElement);%%00010%%00010        // Return the SVG as a string.%%00010        return (new XMLSerializer()).serializeToString(svgElement);%%00010    };%%00010%%00010    return barChart;%%00010})();%%00010"/>
    </config>
    <config key="cssCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* make sure colors on bars are correct (inherit from group) */%%00010svg.colored .nvd3 .nv-multibar .nv-groups rect, %%00010svg.colored .nvd3 .nv-multibarHorizontal .nv-groups rect, %%00010svg.colored .nvd3 .nv-discretebar .nv-groups rect {%%00010%%00009fill: inherit !important;%%00010%%00009stroke: inherit !important;%%00010}%%00010%%00010text.knime-tick-label.knime-selected {%%00010%%00009font-weight: bold;%%00010}%%00010rect.knime-selected {%%00010%%00009fill: orange;%%00010%%00009%%00010}%%00010rect.knime-partially-selected {%%00010%%00009fill: grey;%%00010}%%00010text.knime-tick-label.knime-partially-selected {%%00010%%00009font-weight: bold;%%00010}%%00010%%00010rect.nv-bar.positive {%%00010%%00009cursor:pointer;%%00010}%%00010%%00010/* don't display the maximum grid line if present on vertical bar chart */%%00010/*.nv-multiBarWithLegend .knime-axis.knime-y g.tick.knime-tick:nth-last-child(3) line {%%00010    display: none;%%00010}*/"/>
    </config>
    <config key="jsDependencies">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="dependency_0">
            <entry key="name" type="xstring" value="nvd3"/>
            <entry key="path" type="xstring" value="js-lib/nvd3/1.8.6/nv.d3.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" value="nv"/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="1"/>
                <entry key="0" type="xstring" value="D3_3.5.5"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
        <config key="dependency_1">
            <entry key="name" type="xstring" value="D3_3.5.5"/>
            <entry key="path" type="xstring" value="js-lib/d3/d3.v3_5_5.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
    </config>
    <config key="cssDependencies">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="js-lib/nvd3/1.8.6/nv.d3.min.css"/>
    </config>
    <entry key="new" type="xboolean" value="false"/>
    <entry key="inView" type="xboolean" value="true"/>
    <config key="tableIds">
        <entry key="array-size" type="xint" value="2"/>
        <entry key="0" type="xstring" value="3709fe49-7732-4192-8cde-8f0896baa69c"/>
        <entry key="1" type="xstring" isnull="true" value=""/>
    </config>
    <config key="variables">
        <entry key="numSettings" type="xint" value="1"/>
        <entry key="mapClass" type="xstring" value="string"/>
        <entry key="key_0" type="xstring" value="knime.workspace"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="/home/luismfp/Desktop/Uni/ADI/praticas/ADI"/>
    </config>
    <config key="binaryFiles">
        <entry key="numSettings" type="xint" value="0"/>
        <entry key="mapClass" type="xstring" value="string"/>
    </config>
    <config key="options">
        <entry key="numSettings" type="xint" value="23"/>
        <entry key="mapClass" type="xstring" value="object"/>
        <entry key="key_0" type="xstring" value="displayFullscreenButton"/>
        <entry key="class_0" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_0" type="xboolean" value="true"/>
        <entry key="key_1" type="xstring" value="displayClearSelectionButton"/>
        <entry key="class_1" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_1" type="xboolean" value="true"/>
        <entry key="key_2" type="xstring" value="svg"/>
        <entry key="class_2" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
        <config key="value_2">
            <entry key="width" type="xint" value="800"/>
            <entry key="height" type="xint" value="600"/>
            <entry key="fullscreen" type="xboolean" value="true"/>
        </config>
        <entry key="key_3" type="xstring" value="legend"/>
        <entry key="class_3" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_3" type="xboolean" value="true"/>
        <entry key="key_4" type="xstring" value="enableHorizontalToggle"/>
        <entry key="class_4" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_4" type="xboolean" value="true"/>
        <entry key="key_5" type="xstring" value="freq"/>
        <entry key="class_5" type="xstring" value="[Ljava.lang.String;"/>
        <config key="value_5">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <entry key="key_6" type="xstring" value="tooltip"/>
        <entry key="class_6" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_6" type="xboolean" value="true"/>
        <entry key="key_7" type="xstring" value="enableTitleEdit"/>
        <entry key="class_7" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_7" type="xboolean" value="true"/>
        <entry key="key_8" type="xstring" value="enableSelection"/>
        <entry key="class_8" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_8" type="xboolean" value="true"/>
        <entry key="key_9" type="xstring" value="sort"/>
        <entry key="class_9" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_9" type="xboolean" value="false"/>
        <entry key="key_10" type="xstring" value="enableSwitchMissValCat"/>
        <entry key="class_10" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_10" type="xboolean" value="true"/>
        <entry key="key_11" type="xstring" value="enableStackedEdit"/>
        <entry key="class_11" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_11" type="xboolean" value="true"/>
        <entry key="key_12" type="xstring" value="enableAxisEdit"/>
        <entry key="class_12" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_12" type="xboolean" value="true"/>
        <entry key="key_13" type="xstring" value="processInMemory"/>
        <entry key="class_13" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_13" type="xboolean" value="true"/>
        <entry key="key_14" type="xstring" value="reportOnMissingValues"/>
        <entry key="class_14" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_14" type="xboolean" value="true"/>
        <entry key="key_15" type="xstring" value="cat"/>
        <entry key="class_15" type="xstring" value="java.lang.String"/>
        <entry key="value_15" type="xstring" value="Height"/>
        <entry key="key_16" type="xstring" value="enableStaggerToggle"/>
        <entry key="class_16" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_16" type="xboolean" value="true"/>
        <entry key="key_17" type="xstring" value="enableStaticValuesEdit"/>
        <entry key="class_17" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_17" type="xboolean" value="true"/>
        <entry key="key_18" type="xstring" value="enableViewControls"/>
        <entry key="class_18" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_18" type="xboolean" value="true"/>
        <entry key="key_19" type="xstring" value="showWarnings"/>
        <entry key="class_19" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_19" type="xboolean" value="true"/>
        <entry key="key_20" type="xstring" value="enableSubtitleEdit"/>
        <entry key="class_20" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_20" type="xboolean" value="true"/>
        <entry key="key_21" type="xstring" value="aggr"/>
        <entry key="class_21" type="xstring" value="java.lang.String"/>
        <entry key="value_21" type="xstring" value="Occurence Count"/>
        <entry key="key_22" type="xstring" value="enableMaximumValue"/>
        <entry key="class_22" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_22" type="xboolean" value="true"/>
    </config>
    <config key="inObjects">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="inObject_0">
            <entry key="className" type="xstring" value="org.knime.dynamic.js.base.grouped.GroupedProcessor$GroupingResult"/>
            <entry key="jsonValue" type="xstring" value="{&quot;table&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;58dd2f0f-9102-4baf-b9e4-6c278e52a1ec&quot;,&quot;rows&quot;:[{&quot;rowKey&quot;:&quot;Row0&quot;,&quot;data&quot;:[&quot;1,8&quot;,27.0]},{&quot;rowKey&quot;:&quot;Row1&quot;,&quot;data&quot;:[&quot;1,78&quot;,15.0]},{&quot;rowKey&quot;:&quot;Row2&quot;,&quot;data&quot;:[&quot;1,62&quot;,22.0]},{&quot;rowKey&quot;:&quot;Row3&quot;,&quot;data&quot;:[&quot;1,64&quot;,3.0]},{&quot;rowKey&quot;:&quot;Row4&quot;,&quot;data&quot;:[&quot;1,72&quot;,17.0]},{&quot;rowKey&quot;:&quot;Row5&quot;,&quot;data&quot;:[&quot;1,85&quot;,13.0]},{&quot;rowKey&quot;:&quot;Row6&quot;,&quot;data&quot;:[&quot;1,65&quot;,20.0]},{&quot;rowKey&quot;:&quot;Row7&quot;,&quot;data&quot;:[&quot;1,77&quot;,6.0]},{&quot;rowKey&quot;:&quot;Row8&quot;,&quot;data&quot;:[&quot;1,93&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row9&quot;,&quot;data&quot;:[&quot;1,6&quot;,5.0]},{&quot;rowKey&quot;:&quot;Row10&quot;,&quot;data&quot;:[&quot;1,7&quot;,37.0]},{&quot;rowKey&quot;:&quot;Row11&quot;,&quot;data&quot;:[&quot;1,75&quot;,34.0]},{&quot;rowKey&quot;:&quot;Row12&quot;,&quot;data&quot;:[&quot;1,68&quot;,5.0]},{&quot;rowKey&quot;:&quot;Row13&quot;,&quot;data&quot;:[&quot;1,79&quot;,6.0]},{&quot;rowKey&quot;:&quot;Row14&quot;,&quot;data&quot;:[&quot;1,66&quot;,5.0]},{&quot;rowKey&quot;:&quot;Row15&quot;,&quot;data&quot;:[&quot;1,81&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row16&quot;,&quot;data&quot;:[&quot;1,82&quot;,7.0]},{&quot;rowKey&quot;:&quot;Row17&quot;,&quot;data&quot;:[&quot;1,76&quot;,10.0]},{&quot;rowKey&quot;:&quot;Row18&quot;,&quot;data&quot;:[&quot;1,67&quot;,8.0]},{&quot;rowKey&quot;:&quot;Row19&quot;,&quot;data&quot;:[&quot;1,88&quot;,3.0]},{&quot;rowKey&quot;:&quot;Row20&quot;,&quot;data&quot;:[&quot;1,87&quot;,5.0]},{&quot;rowKey&quot;:&quot;Row21&quot;,&quot;data&quot;:[&quot;1,89&quot;,3.0]},{&quot;rowKey&quot;:&quot;Row22&quot;,&quot;data&quot;:[&quot;1,74&quot;,14.0]},{&quot;rowKey&quot;:&quot;Row23&quot;,&quot;data&quot;:[&quot;1,61&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row24&quot;,&quot;data&quot;:[&quot;1,69&quot;,5.0]},{&quot;rowKey&quot;:&quot;Row25&quot;,&quot;data&quot;:[&quot;1,83&quot;,9.0]},{&quot;rowKey&quot;:&quot;Row26&quot;,&quot;data&quot;:[&quot;1,92&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row27&quot;,&quot;data&quot;:[&quot;1,84&quot;,6.0]},{&quot;rowKey&quot;:&quot;Row28&quot;,&quot;data&quot;:[&quot;1,91&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row29&quot;,&quot;data&quot;:[&quot;1,71&quot;,6.0]},{&quot;rowKey&quot;:&quot;Row30&quot;,&quot;data&quot;:[&quot;1,9&quot;,3.0]},{&quot;rowKey&quot;:&quot;Row31&quot;,&quot;data&quot;:[&quot;1,86&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row32&quot;,&quot;data&quot;:[&quot;1,98&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row33&quot;,&quot;data&quot;:[&quot;1,58&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row34&quot;,&quot;data&quot;:[&quot;1,73&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row35&quot;,&quot;data&quot;:[&quot;1,56&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row36&quot;,&quot;data&quot;:[&quot;1,743702&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row37&quot;,&quot;data&quot;:[&quot;1,771915&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row38&quot;,&quot;data&quot;:[&quot;1,75376&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row39&quot;,&quot;data&quot;:[&quot;1,882779&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row40&quot;,&quot;data&quot;:[&quot;1,854592&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row41&quot;,&quot;data&quot;:[&quot;1,835643&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row42&quot;,&quot;data&quot;:[&quot;1,755507&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row43&quot;,&quot;data&quot;:[&quot;1,71266&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row44&quot;,&quot;data&quot;:[&quot;1,694265&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row45&quot;,&quot;data&quot;:[&quot;1,710564&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row46&quot;,&quot;data&quot;:[&quot;1,752755&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row47&quot;,&quot;data&quot;:[&quot;1,691007&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row48&quot;,&quot;data&quot;:[&quot;1,753349&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row49&quot;,&quot;data&quot;:[&quot;1,781543&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row50&quot;,&quot;data&quot;:[&quot;1,755823&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row51&quot;,&quot;data&quot;:[&quot;1,836669&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row52&quot;,&quot;data&quot;:[&quot;1,768493&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row53&quot;,&quot;data&quot;:[&quot;1,777108&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row54&quot;,&quot;data&quot;:[&quot;1,793926&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row55&quot;,&quot;data&quot;:[&quot;1,809251&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row56&quot;,&quot;data&quot;:[&quot;1,767335&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row57&quot;,&quot;data&quot;:[&quot;1,848294&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row58&quot;,&quot;data&quot;:[&quot;1,824414&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row59&quot;,&quot;data&quot;:[&quot;1,856633&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row60&quot;,&quot;data&quot;:[&quot;1,767563&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row61&quot;,&quot;data&quot;:[&quot;1,883364&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row62&quot;,&quot;data&quot;:[&quot;1,824655&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row63&quot;,&quot;data&quot;:[&quot;1,840138&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row64&quot;,&quot;data&quot;:[&quot;1,819557&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row65&quot;,&quot;data&quot;:[&quot;1,798645&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row66&quot;,&quot;data&quot;:[&quot;1,7108&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row67&quot;,&quot;data&quot;:[&quot;1,70653&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row68&quot;,&quot;data&quot;:[&quot;1,716691&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row69&quot;,&quot;data&quot;:[&quot;1,717826&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row70&quot;,&quot;data&quot;:[&quot;1,753389&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row71&quot;,&quot;data&quot;:[&quot;1,70165&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row72&quot;,&quot;data&quot;:[&quot;1,75336&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row73&quot;,&quot;data&quot;:[&quot;1,868931&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row74&quot;,&quot;data&quot;:[&quot;1,691206&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row75&quot;,&quot;data&quot;:[&quot;1,788459&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row76&quot;,&quot;data&quot;:[&quot;1,811238&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row77&quot;,&quot;data&quot;:[&quot;1,782756&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row78&quot;,&quot;data&quot;:[&quot;1,896734&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row79&quot;,&quot;data&quot;:[&quot;1,845399&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row80&quot;,&quot;data&quot;:[&quot;1,834637&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row81&quot;,&quot;data&quot;:[&quot;1,721854&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row82&quot;,&quot;data&quot;:[&quot;1,71889&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row83&quot;,&quot;data&quot;:[&quot;1,756338&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row84&quot;,&quot;data&quot;:[&quot;1,770324&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row85&quot;,&quot;data&quot;:[&quot;1,869098&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row86&quot;,&quot;data&quot;:[&quot;1,851123&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row87&quot;,&quot;data&quot;:[&quot;1,787264&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row88&quot;,&quot;data&quot;:[&quot;1,787787&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row89&quot;,&quot;data&quot;:[&quot;1,698914&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row90&quot;,&quot;data&quot;:[&quot;1,75633&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row91&quot;,&quot;data&quot;:[&quot;1,732862&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row92&quot;,&quot;data&quot;:[&quot;1,757958&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row93&quot;,&quot;data&quot;:[&quot;1,786758&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row94&quot;,&quot;data&quot;:[&quot;1,767058&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row95&quot;,&quot;data&quot;:[&quot;1,699437&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row96&quot;,&quot;data&quot;:[&quot;1,82525&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row97&quot;,&quot;data&quot;:[&quot;1,793315&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row98&quot;,&quot;data&quot;:[&quot;1,776989&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row99&quot;,&quot;data&quot;:[&quot;1,854162&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row100&quot;,&quot;data&quot;:[&quot;1,821514&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row101&quot;,&quot;data&quot;:[&quot;1,762073&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row102&quot;,&quot;data&quot;:[&quot;1,759933&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row103&quot;,&quot;data&quot;:[&quot;1,844749&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row104&quot;,&quot;data&quot;:[&quot;1,853325&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row105&quot;,&quot;data&quot;:[&quot;1,854706&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row106&quot;,&quot;data&quot;:[&quot;1,76033&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row107&quot;,&quot;data&quot;:[&quot;1,841879&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row108&quot;,&quot;data&quot;:[&quot;1,856406&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row109&quot;,&quot;data&quot;:[&quot;1,829142&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row110&quot;,&quot;data&quot;:[&quot;1,822084&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row111&quot;,&quot;data&quot;:[&quot;1,80671&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row112&quot;,&quot;data&quot;:[&quot;1,707259&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row113&quot;,&quot;data&quot;:[&quot;1,708107&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row114&quot;,&quot;data&quot;:[&quot;1,739344&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row115&quot;,&quot;data&quot;:[&quot;1,719827&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row116&quot;,&quot;data&quot;:[&quot;1,722547&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row117&quot;,&quot;data&quot;:[&quot;1,738702&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row118&quot;,&quot;data&quot;:[&quot;1,816298&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row119&quot;,&quot;data&quot;:[&quot;1,638085&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row120&quot;,&quot;data&quot;:[&quot;1,813678&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row121&quot;,&quot;data&quot;:[&quot;1,697228&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row122&quot;,&quot;data&quot;:[&quot;1,617469&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row123&quot;,&quot;data&quot;:[&quot;1,855543&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row124&quot;,&quot;data&quot;:[&quot;1,855353&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row125&quot;,&quot;data&quot;:[&quot;1,696336&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row126&quot;,&quot;data&quot;:[&quot;1,698346&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row127&quot;,&quot;data&quot;:[&quot;1,605404&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row128&quot;,&quot;data&quot;:[&quot;1,629194&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row129&quot;,&quot;data&quot;:[&quot;1,752391&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row130&quot;,&quot;data&quot;:[&quot;1,818226&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row131&quot;,&quot;data&quot;:[&quot;1,809101&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row132&quot;,&quot;data&quot;:[&quot;1,709484&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row133&quot;,&quot;data&quot;:[&quot;1,607082&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row134&quot;,&quot;data&quot;:[&quot;1,831357&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row135&quot;,&quot;data&quot;:[&quot;1,778447&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row136&quot;,&quot;data&quot;:[&quot;1,709561&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row137&quot;,&quot;data&quot;:[&quot;1,755317&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row138&quot;,&quot;data&quot;:[&quot;1,708071&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row139&quot;,&quot;data&quot;:[&quot;1,806947&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row140&quot;,&quot;data&quot;:[&quot;1,712556&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row141&quot;,&quot;data&quot;:[&quot;1,858624&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row142&quot;,&quot;data&quot;:[&quot;1,820471&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row143&quot;,&quot;data&quot;:[&quot;1,752123&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row144&quot;,&quot;data&quot;:[&quot;1,857231&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row145&quot;,&quot;data&quot;:[&quot;1,81006&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row146&quot;,&quot;data&quot;:[&quot;1,80179&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row147&quot;,&quot;data&quot;:[&quot;1,625891&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row148&quot;,&quot;data&quot;:[&quot;1,64037&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row149&quot;,&quot;data&quot;:[&quot;1,791047&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row150&quot;,&quot;data&quot;:[&quot;1,679306&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row151&quot;,&quot;data&quot;:[&quot;1,816783&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row152&quot;,&quot;data&quot;:[&quot;1,812472&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row153&quot;,&quot;data&quot;:[&quot;1,870931&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row154&quot;,&quot;data&quot;:[&quot;1,863685&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row155&quot;,&quot;data&quot;:[&quot;1,670227&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row156&quot;,&quot;data&quot;:[&quot;1,717288&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row157&quot;,&quot;data&quot;:[&quot;1,750359&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row158&quot;,&quot;data&quot;:[&quot;1,707557&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row159&quot;,&quot;data&quot;:[&quot;1,752115&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row160&quot;,&quot;data&quot;:[&quot;1,745033&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row161&quot;,&quot;data&quot;:[&quot;1,820643&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row162&quot;,&quot;data&quot;:[&quot;1,80733&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row163&quot;,&quot;data&quot;:[&quot;1,814255&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row164&quot;,&quot;data&quot;:[&quot;1,700181&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row165&quot;,&quot;data&quot;:[&quot;1,859927&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row166&quot;,&quot;data&quot;:[&quot;1,896073&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row167&quot;,&quot;data&quot;:[&quot;1,605314&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row168&quot;,&quot;data&quot;:[&quot;1,712061&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row169&quot;,&quot;data&quot;:[&quot;1,676014&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row170&quot;,&quot;data&quot;:[&quot;1,765874&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row171&quot;,&quot;data&quot;:[&quot;1,74595&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row172&quot;,&quot;data&quot;:[&quot;1,690196&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row173&quot;,&quot;data&quot;:[&quot;1,707968&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row174&quot;,&quot;data&quot;:[&quot;1,855779&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row175&quot;,&quot;data&quot;:[&quot;1,853223&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row176&quot;,&quot;data&quot;:[&quot;1,838791&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row177&quot;,&quot;data&quot;:[&quot;1,804099&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row178&quot;,&quot;data&quot;:[&quot;1,813567&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row179&quot;,&quot;data&quot;:[&quot;1,818848&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row180&quot;,&quot;data&quot;:[&quot;1,817641&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row181&quot;,&quot;data&quot;:[&quot;1,636592&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row182&quot;,&quot;data&quot;:[&quot;1,621412&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row183&quot;,&quot;data&quot;:[&quot;1,802871&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row184&quot;,&quot;data&quot;:[&quot;1,696201&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row185&quot;,&quot;data&quot;:[&quot;1,694633&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row186&quot;,&quot;data&quot;:[&quot;1,856811&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row187&quot;,&quot;data&quot;:[&quot;1,807538&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row188&quot;,&quot;data&quot;:[&quot;1,849425&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row189&quot;,&quot;data&quot;:[&quot;1,712473&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row190&quot;,&quot;data&quot;:[&quot;1,717432&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row191&quot;,&quot;data&quot;:[&quot;1,677573&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row192&quot;,&quot;data&quot;:[&quot;1,610209&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row193&quot;,&quot;data&quot;:[&quot;1,612556&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row194&quot;,&quot;data&quot;:[&quot;1,627396&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row195&quot;,&quot;data&quot;:[&quot;1,822573&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row196&quot;,&quot;data&quot;:[&quot;1,815409&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row197&quot;,&quot;data&quot;:[&quot;1,698049&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row198&quot;,&quot;data&quot;:[&quot;1,710415&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row199&quot;,&quot;data&quot;:[&quot;1,716289&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row200&quot;,&quot;data&quot;:[&quot;1,834715&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row201&quot;,&quot;data&quot;:[&quot;1,775626&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row202&quot;,&quot;data&quot;:[&quot;1,714253&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row203&quot;,&quot;data&quot;:[&quot;1,693628&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row204&quot;,&quot;data&quot;:[&quot;1,776347&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row205&quot;,&quot;data&quot;:[&quot;1,767806&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row206&quot;,&quot;data&quot;:[&quot;1,702516&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row207&quot;,&quot;data&quot;:[&quot;1,814182&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row208&quot;,&quot;data&quot;:[&quot;1,701584&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row209&quot;,&quot;data&quot;:[&quot;1,713343&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row210&quot;,&quot;data&quot;:[&quot;1,874061&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row211&quot;,&quot;data&quot;:[&quot;1,637537&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row212&quot;,&quot;data&quot;:[&quot;1,773656&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row213&quot;,&quot;data&quot;:[&quot;1,751029&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row214&quot;,&quot;data&quot;:[&quot;1,838266&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row215&quot;,&quot;data&quot;:[&quot;1,824449&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row216&quot;,&quot;data&quot;:[&quot;1,773766&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row217&quot;,&quot;data&quot;:[&quot;1,75463&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row218&quot;,&quot;data&quot;:[&quot;1,674327&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row219&quot;,&quot;data&quot;:[&quot;1,913241&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row220&quot;,&quot;data&quot;:[&quot;1,737984&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row221&quot;,&quot;data&quot;:[&quot;1,703688&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row222&quot;,&quot;data&quot;:[&quot;1,716308&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row223&quot;,&quot;data&quot;:[&quot;1,780846&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row224&quot;,&quot;data&quot;:[&quot;1,823168&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row225&quot;,&quot;data&quot;:[&quot;1,768578&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row226&quot;,&quot;data&quot;:[&quot;1,792527&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row227&quot;,&quot;data&quot;:[&quot;1,795311&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row228&quot;,&quot;data&quot;:[&quot;1,713825&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row229&quot;,&quot;data&quot;:[&quot;1,835381&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row230&quot;,&quot;data&quot;:[&quot;1,836943&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row231&quot;,&quot;data&quot;:[&quot;1,819614&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row232&quot;,&quot;data&quot;:[&quot;1,717775&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row233&quot;,&quot;data&quot;:[&quot;1,791867&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row234&quot;,&quot;data&quot;:[&quot;1,68108&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row235&quot;,&quot;data&quot;:[&quot;1,769269&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row236&quot;,&quot;data&quot;:[&quot;1,765188&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row237&quot;,&quot;data&quot;:[&quot;1,654757&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row238&quot;,&quot;data&quot;:[&quot;1,691303&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row239&quot;,&quot;data&quot;:[&quot;1,70074&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row240&quot;,&quot;data&quot;:[&quot;1,715118&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row241&quot;,&quot;data&quot;:[&quot;1,848683&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row242&quot;,&quot;data&quot;:[&quot;1,835678&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row243&quot;,&quot;data&quot;:[&quot;1,699474&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row244&quot;,&quot;data&quot;:[&quot;1,745528&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row245&quot;,&quot;data&quot;:[&quot;1,720379&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row246&quot;,&quot;data&quot;:[&quot;1,758787&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row247&quot;,&quot;data&quot;:[&quot;1,704908&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row248&quot;,&quot;data&quot;:[&quot;1,78629&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row249&quot;,&quot;data&quot;:[&quot;1,705617&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row250&quot;,&quot;data&quot;:[&quot;1,733439&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row251&quot;,&quot;data&quot;:[&quot;1,843172&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row252&quot;,&quot;data&quot;:[&quot;1,705813&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row253&quot;,&quot;data&quot;:[&quot;1,704141&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row254&quot;,&quot;data&quot;:[&quot;1,706082&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row255&quot;,&quot;data&quot;:[&quot;1,842943&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row256&quot;,&quot;data&quot;:[&quot;1,880992&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row257&quot;,&quot;data&quot;:[&quot;1,726774&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row258&quot;,&quot;data&quot;:[&quot;1,73196&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row259&quot;,&quot;data&quot;:[&quot;1,751278&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row260&quot;,&quot;data&quot;:[&quot;1,780448&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row261&quot;,&quot;data&quot;:[&quot;1,785241&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row262&quot;,&quot;data&quot;:[&quot;1,718845&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row263&quot;,&quot;data&quot;:[&quot;1,725587&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row264&quot;,&quot;data&quot;:[&quot;1,786238&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row265&quot;,&quot;data&quot;:[&quot;1,718534&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row266&quot;,&quot;data&quot;:[&quot;1,919543&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row267&quot;,&quot;data&quot;:[&quot;1,707613&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row268&quot;,&quot;data&quot;:[&quot;1,658393&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row269&quot;,&quot;data&quot;:[&quot;1,805459&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row270&quot;,&quot;data&quot;:[&quot;1,744733&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row271&quot;,&quot;data&quot;:[&quot;1,799742&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row272&quot;,&quot;data&quot;:[&quot;1,706912&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row273&quot;,&quot;data&quot;:[&quot;1,752265&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row274&quot;,&quot;data&quot;:[&quot;1,735343&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row275&quot;,&quot;data&quot;:[&quot;1,856759&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row276&quot;,&quot;data&quot;:[&quot;1,77433&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row277&quot;,&quot;data&quot;:[&quot;1,719509&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row278&quot;,&quot;data&quot;:[&quot;1,657221&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row279&quot;,&quot;data&quot;:[&quot;1,713348&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row280&quot;,&quot;data&quot;:[&quot;1,677178&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row281&quot;,&quot;data&quot;:[&quot;1,717722&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row282&quot;,&quot;data&quot;:[&quot;1,718981&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row283&quot;,&quot;data&quot;:[&quot;1,838441&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row284&quot;,&quot;data&quot;:[&quot;1,699818&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row285&quot;,&quot;data&quot;:[&quot;1,718097&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row286&quot;,&quot;data&quot;:[&quot;1,731389&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row287&quot;,&quot;data&quot;:[&quot;1,699667&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row288&quot;,&quot;data&quot;:[&quot;1,823765&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row289&quot;,&quot;data&quot;:[&quot;1,708742&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row290&quot;,&quot;data&quot;:[&quot;1,835024&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row291&quot;,&quot;data&quot;:[&quot;1,7088&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row292&quot;,&quot;data&quot;:[&quot;1,680991&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row293&quot;,&quot;data&quot;:[&quot;1,835271&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row294&quot;,&quot;data&quot;:[&quot;1,742819&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row295&quot;,&quot;data&quot;:[&quot;1,741192&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row296&quot;,&quot;data&quot;:[&quot;1,759721&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row297&quot;,&quot;data&quot;:[&quot;1,810616&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row298&quot;,&quot;data&quot;:[&quot;1,763101&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row299&quot;,&quot;data&quot;:[&quot;1,732492&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row300&quot;,&quot;data&quot;:[&quot;1,780679&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row301&quot;,&quot;data&quot;:[&quot;1,758687&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row302&quot;,&quot;data&quot;:[&quot;1,704573&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row303&quot;,&quot;data&quot;:[&quot;1,716545&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row304&quot;,&quot;data&quot;:[&quot;1,903832&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row305&quot;,&quot;data&quot;:[&quot;1,742538&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row306&quot;,&quot;data&quot;:[&quot;1,747739&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row307&quot;,&quot;data&quot;:[&quot;1,717037&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row308&quot;,&quot;data&quot;:[&quot;1,746055&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row309&quot;,&quot;data&quot;:[&quot;1,841151&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row310&quot;,&quot;data&quot;:[&quot;1,758972&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row311&quot;,&quot;data&quot;:[&quot;1,792435&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row312&quot;,&quot;data&quot;:[&quot;1,784555&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row313&quot;,&quot;data&quot;:[&quot;1,672101&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row314&quot;,&quot;data&quot;:[&quot;1,721348&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row315&quot;,&quot;data&quot;:[&quot;1,803129&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row316&quot;,&quot;data&quot;:[&quot;1,713599&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row317&quot;,&quot;data&quot;:[&quot;1,662728&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row318&quot;,&quot;data&quot;:[&quot;1,837399&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row319&quot;,&quot;data&quot;:[&quot;1,80827&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row320&quot;,&quot;data&quot;:[&quot;1,714508&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row321&quot;,&quot;data&quot;:[&quot;1,793451&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row322&quot;,&quot;data&quot;:[&quot;1,694997&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row323&quot;,&quot;data&quot;:[&quot;1,673394&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row324&quot;,&quot;data&quot;:[&quot;1,769499&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row325&quot;,&quot;data&quot;:[&quot;1,662669&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row326&quot;,&quot;data&quot;:[&quot;1,694423&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row327&quot;,&quot;data&quot;:[&quot;1,685045&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row328&quot;,&quot;data&quot;:[&quot;1,723072&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row329&quot;,&quot;data&quot;:[&quot;1,840708&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row330&quot;,&quot;data&quot;:[&quot;1,836007&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row331&quot;,&quot;data&quot;:[&quot;1,700627&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row332&quot;,&quot;data&quot;:[&quot;1,743935&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row333&quot;,&quot;data&quot;:[&quot;1,742654&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row334&quot;,&quot;data&quot;:[&quot;1,754441&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row335&quot;,&quot;data&quot;:[&quot;1,719342&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row336&quot;,&quot;data&quot;:[&quot;1,799902&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row337&quot;,&quot;data&quot;:[&quot;1,709428&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row338&quot;,&quot;data&quot;:[&quot;1,752456&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row339&quot;,&quot;data&quot;:[&quot;1,685947&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row340&quot;,&quot;data&quot;:[&quot;1,828092&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row341&quot;,&quot;data&quot;:[&quot;1,71338&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row342&quot;,&quot;data&quot;:[&quot;1,680764&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row343&quot;,&quot;data&quot;:[&quot;1,705584&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row344&quot;,&quot;data&quot;:[&quot;1,841852&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row345&quot;,&quot;data&quot;:[&quot;1,834986&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row346&quot;,&quot;data&quot;:[&quot;1,724839&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row347&quot;,&quot;data&quot;:[&quot;1,685127&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row348&quot;,&quot;data&quot;:[&quot;1,750097&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row349&quot;,&quot;data&quot;:[&quot;1,757961&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row350&quot;,&quot;data&quot;:[&quot;1,848965&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row351&quot;,&quot;data&quot;:[&quot;1,789193&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row352&quot;,&quot;data&quot;:[&quot;1,716677&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row353&quot;,&quot;data&quot;:[&quot;1,729177&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row354&quot;,&quot;data&quot;:[&quot;1,719153&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row355&quot;,&quot;data&quot;:[&quot;1,772449&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row356&quot;,&quot;data&quot;:[&quot;1,837117&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row357&quot;,&quot;data&quot;:[&quot;1,784377&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row358&quot;,&quot;data&quot;:[&quot;1,792507&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row359&quot;,&quot;data&quot;:[&quot;1,734237&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row360&quot;,&quot;data&quot;:[&quot;1,775815&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row361&quot;,&quot;data&quot;:[&quot;1,753321&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row362&quot;,&quot;data&quot;:[&quot;1,706525&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row363&quot;,&quot;data&quot;:[&quot;1,673352&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row364&quot;,&quot;data&quot;:[&quot;1,660324&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row365&quot;,&quot;data&quot;:[&quot;1,786318&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row366&quot;,&quot;data&quot;:[&quot;1,757691&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row367&quot;,&quot;data&quot;:[&quot;1,712163&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row368&quot;,&quot;data&quot;:[&quot;1,660955&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row369&quot;,&quot;data&quot;:[&quot;1,781952&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row370&quot;,&quot;data&quot;:[&quot;1,793378&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row371&quot;,&quot;data&quot;:[&quot;1,85478&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row372&quot;,&quot;data&quot;:[&quot;1,791415&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row373&quot;,&quot;data&quot;:[&quot;1,753716&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row374&quot;,&quot;data&quot;:[&quot;1,780503&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row375&quot;,&quot;data&quot;:[&quot;1,819867&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row376&quot;,&quot;data&quot;:[&quot;1,791174&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row377&quot;,&quot;data&quot;:[&quot;1,82093&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row378&quot;,&quot;data&quot;:[&quot;1,773594&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row379&quot;,&quot;data&quot;:[&quot;1,930416&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row380&quot;,&quot;data&quot;:[&quot;1,947406&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row381&quot;,&quot;data&quot;:[&quot;1,738465&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row382&quot;,&quot;data&quot;:[&quot;1,820385&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row383&quot;,&quot;data&quot;:[&quot;1,792239&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row384&quot;,&quot;data&quot;:[&quot;1,82697&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row385&quot;,&quot;data&quot;:[&quot;1,639383&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row386&quot;,&quot;data&quot;:[&quot;1,682916&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row387&quot;,&quot;data&quot;:[&quot;1,690437&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row388&quot;,&quot;data&quot;:[&quot;1,700164&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row389&quot;,&quot;data&quot;:[&quot;1,801848&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row390&quot;,&quot;data&quot;:[&quot;1,844751&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row391&quot;,&quot;data&quot;:[&quot;1,811602&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row392&quot;,&quot;data&quot;:[&quot;1,787521&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row393&quot;,&quot;data&quot;:[&quot;1,789109&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row394&quot;,&quot;data&quot;:[&quot;1,654961&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row395&quot;,&quot;data&quot;:[&quot;1,701986&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row396&quot;,&quot;data&quot;:[&quot;1,657995&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row397&quot;,&quot;data&quot;:[&quot;1,750384&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row398&quot;,&quot;data&quot;:[&quot;1,753081&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row399&quot;,&quot;data&quot;:[&quot;1,770126&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row400&quot;,&quot;data&quot;:[&quot;1,758189&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row401&quot;,&quot;data&quot;:[&quot;1,702825&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row402&quot;,&quot;data&quot;:[&quot;1,735659&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row403&quot;,&quot;data&quot;:[&quot;1,671705&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row404&quot;,&quot;data&quot;:[&quot;1,676595&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row405&quot;,&quot;data&quot;:[&quot;1,699998&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row406&quot;,&quot;data&quot;:[&quot;1,722785&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row407&quot;,&quot;data&quot;:[&quot;1,670667&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row408&quot;,&quot;data&quot;:[&quot;1,789992&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row409&quot;,&quot;data&quot;:[&quot;1,768834&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row410&quot;,&quot;data&quot;:[&quot;1,761008&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row411&quot;,&quot;data&quot;:[&quot;1,810215&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row412&quot;,&quot;data&quot;:[&quot;1,681855&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row413&quot;,&quot;data&quot;:[&quot;1,688436&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row414&quot;,&quot;data&quot;:[&quot;1,710616&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row415&quot;,&quot;data&quot;:[&quot;1,721384&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row416&quot;,&quot;data&quot;:[&quot;1,855433&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row417&quot;,&quot;data&quot;:[&quot;1,856315&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row418&quot;,&quot;data&quot;:[&quot;1,799406&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row419&quot;,&quot;data&quot;:[&quot;1,819875&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row420&quot;,&quot;data&quot;:[&quot;1,790172&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row421&quot;,&quot;data&quot;:[&quot;1,783782&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row422&quot;,&quot;data&quot;:[&quot;1,783906&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row423&quot;,&quot;data&quot;:[&quot;1,844218&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row424&quot;,&quot;data&quot;:[&quot;1,754711&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row425&quot;,&quot;data&quot;:[&quot;1,762515&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row426&quot;,&quot;data&quot;:[&quot;1,942725&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row427&quot;,&quot;data&quot;:[&quot;1,975663&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row428&quot;,&quot;data&quot;:[&quot;1,703098&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row429&quot;,&quot;data&quot;:[&quot;1,706996&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row430&quot;,&quot;data&quot;:[&quot;1,784402&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row431&quot;,&quot;data&quot;:[&quot;1,792687&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row432&quot;,&quot;data&quot;:[&quot;1,814052&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row433&quot;,&quot;data&quot;:[&quot;1,789421&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row434&quot;,&quot;data&quot;:[&quot;1,665798&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row435&quot;,&quot;data&quot;:[&quot;1,66671&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row436&quot;,&quot;data&quot;:[&quot;1,702002&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row437&quot;,&quot;data&quot;:[&quot;1,69382&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row438&quot;,&quot;data&quot;:[&quot;1,798354&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row439&quot;,&quot;data&quot;:[&quot;1,824432&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row440&quot;,&quot;data&quot;:[&quot;1,830384&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row441&quot;,&quot;data&quot;:[&quot;1,829907&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row442&quot;,&quot;data&quot;:[&quot;1,823755&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row443&quot;,&quot;data&quot;:[&quot;1,834842&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row444&quot;,&quot;data&quot;:[&quot;1,783901&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row445&quot;,&quot;data&quot;:[&quot;1,782067&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row446&quot;,&quot;data&quot;:[&quot;1,781032&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row447&quot;,&quot;data&quot;:[&quot;1,728183&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row448&quot;,&quot;data&quot;:[&quot;1,732694&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row449&quot;,&quot;data&quot;:[&quot;1,701634&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row450&quot;,&quot;data&quot;:[&quot;1,723921&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row451&quot;,&quot;data&quot;:[&quot;1,769484&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row452&quot;,&quot;data&quot;:[&quot;1,777416&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row453&quot;,&quot;data&quot;:[&quot;1,777251&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row454&quot;,&quot;data&quot;:[&quot;1,814696&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row455&quot;,&quot;data&quot;:[&quot;1,653751&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row456&quot;,&quot;data&quot;:[&quot;1,680171&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row457&quot;,&quot;data&quot;:[&quot;1,672959&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row458&quot;,&quot;data&quot;:[&quot;1,680058&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row459&quot;,&quot;data&quot;:[&quot;1,664752&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row460&quot;,&quot;data&quot;:[&quot;1,668553&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row461&quot;,&quot;data&quot;:[&quot;1,785286&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row462&quot;,&quot;data&quot;:[&quot;1,780725&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row463&quot;,&quot;data&quot;:[&quot;1,751046&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row464&quot;,&quot;data&quot;:[&quot;1,751365&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row465&quot;,&quot;data&quot;:[&quot;1,717262&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row466&quot;,&quot;data&quot;:[&quot;1,741393&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row467&quot;,&quot;data&quot;:[&quot;1,7921&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row468&quot;,&quot;data&quot;:[&quot;1,785957&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row469&quot;,&quot;data&quot;:[&quot;1,65731&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row470&quot;,&quot;data&quot;:[&quot;1,673287&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row471&quot;,&quot;data&quot;:[&quot;1,781251&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row472&quot;,&quot;data&quot;:[&quot;1,775584&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row473&quot;,&quot;data&quot;:[&quot;1,746645&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row474&quot;,&quot;data&quot;:[&quot;1,741353&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row475&quot;,&quot;data&quot;:[&quot;1,803245&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row476&quot;,&quot;data&quot;:[&quot;1,792646&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row477&quot;,&quot;data&quot;:[&quot;1,87199&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row478&quot;,&quot;data&quot;:[&quot;1,859056&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row479&quot;,&quot;data&quot;:[&quot;1,785718&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row480&quot;,&quot;data&quot;:[&quot;1,7425&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row481&quot;,&quot;data&quot;:[&quot;1,803132&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row482&quot;,&quot;data&quot;:[&quot;1,774644&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row483&quot;,&quot;data&quot;:[&quot;1,782269&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row484&quot;,&quot;data&quot;:[&quot;1,780791&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row485&quot;,&quot;data&quot;:[&quot;1,790151&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row486&quot;,&quot;data&quot;:[&quot;1,818641&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row487&quot;,&quot;data&quot;:[&quot;1,806827&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row488&quot;,&quot;data&quot;:[&quot;1,811189&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row489&quot;,&quot;data&quot;:[&quot;1,811738&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row490&quot;,&quot;data&quot;:[&quot;1,799779&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row491&quot;,&quot;data&quot;:[&quot;1,769328&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row492&quot;,&quot;data&quot;:[&quot;1,807029&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row493&quot;,&quot;data&quot;:[&quot;1,882533&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row494&quot;,&quot;data&quot;:[&quot;1,879144&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row495&quot;,&quot;data&quot;:[&quot;1,931263&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row496&quot;,&quot;data&quot;:[&quot;1,861358&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row497&quot;,&quot;data&quot;:[&quot;1,714143&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row498&quot;,&quot;data&quot;:[&quot;1,723191&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row499&quot;,&quot;data&quot;:[&quot;1,787733&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row500&quot;,&quot;data&quot;:[&quot;1,782722&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row501&quot;,&quot;data&quot;:[&quot;1,797523&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row502&quot;,&quot;data&quot;:[&quot;1,803527&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row503&quot;,&quot;data&quot;:[&quot;1,801224&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row504&quot;,&quot;data&quot;:[&quot;1,829239&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row505&quot;,&quot;data&quot;:[&quot;1,652971&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row506&quot;,&quot;data&quot;:[&quot;1,661277&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row507&quot;,&quot;data&quot;:[&quot;1,641784&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row508&quot;,&quot;data&quot;:[&quot;1,673767&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row509&quot;,&quot;data&quot;:[&quot;1,701413&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row510&quot;,&quot;data&quot;:[&quot;1,709731&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row511&quot;,&quot;data&quot;:[&quot;1,698829&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row512&quot;,&quot;data&quot;:[&quot;1,705304&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row513&quot;,&quot;data&quot;:[&quot;1,80416&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row514&quot;,&quot;data&quot;:[&quot;1,785062&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row515&quot;,&quot;data&quot;:[&quot;1,755926&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row516&quot;,&quot;data&quot;:[&quot;1,787802&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row517&quot;,&quot;data&quot;:[&quot;1,704877&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row518&quot;,&quot;data&quot;:[&quot;1,695347&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row519&quot;,&quot;data&quot;:[&quot;1,908608&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row520&quot;,&quot;data&quot;:[&quot;1,819296&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row521&quot;,&quot;data&quot;:[&quot;1,773259&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row522&quot;,&quot;data&quot;:[&quot;1,774647&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row523&quot;,&quot;data&quot;:[&quot;1,773664&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row524&quot;,&quot;data&quot;:[&quot;1,793476&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row525&quot;,&quot;data&quot;:[&quot;1,82559&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row526&quot;,&quot;data&quot;:[&quot;1,885543&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row527&quot;,&quot;data&quot;:[&quot;1,87407&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row528&quot;,&quot;data&quot;:[&quot;1,755967&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row529&quot;,&quot;data&quot;:[&quot;1,757069&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row530&quot;,&quot;data&quot;:[&quot;1,704028&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row531&quot;,&quot;data&quot;:[&quot;1,849003&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row532&quot;,&quot;data&quot;:[&quot;1,841989&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row533&quot;,&quot;data&quot;:[&quot;1,613491&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row534&quot;,&quot;data&quot;:[&quot;1,647821&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row535&quot;,&quot;data&quot;:[&quot;1,75834&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row536&quot;,&quot;data&quot;:[&quot;1,758398&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row537&quot;,&quot;data&quot;:[&quot;1,670774&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row538&quot;,&quot;data&quot;:[&quot;1,665585&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row539&quot;,&quot;data&quot;:[&quot;1,914186&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row540&quot;,&quot;data&quot;:[&quot;1,899588&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row541&quot;,&quot;data&quot;:[&quot;1,792998&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row542&quot;,&quot;data&quot;:[&quot;1,827279&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row543&quot;,&quot;data&quot;:[&quot;1,775416&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row544&quot;,&quot;data&quot;:[&quot;1,766975&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row545&quot;,&quot;data&quot;:[&quot;1,754218&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row546&quot;,&quot;data&quot;:[&quot;1,754996&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row547&quot;,&quot;data&quot;:[&quot;1,748103&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row548&quot;,&quot;data&quot;:[&quot;1,73325&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row549&quot;,&quot;data&quot;:[&quot;1,84995&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row550&quot;,&quot;data&quot;:[&quot;1,849601&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row551&quot;,&quot;data&quot;:[&quot;1,606066&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row552&quot;,&quot;data&quot;:[&quot;1,611434&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row553&quot;,&quot;data&quot;:[&quot;1,762887&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row554&quot;,&quot;data&quot;:[&quot;1,755938&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row555&quot;,&quot;data&quot;:[&quot;1,787052&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row556&quot;,&quot;data&quot;:[&quot;1,765258&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row557&quot;,&quot;data&quot;:[&quot;1,726279&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row558&quot;,&quot;data&quot;:[&quot;1,735851&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row559&quot;,&quot;data&quot;:[&quot;1,699793&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row560&quot;,&quot;data&quot;:[&quot;1,703202&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row561&quot;,&quot;data&quot;:[&quot;1,906821&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row562&quot;,&quot;data&quot;:[&quot;1,910987&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row563&quot;,&quot;data&quot;:[&quot;1,784049&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row564&quot;,&quot;data&quot;:[&quot;1,783914&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row565&quot;,&quot;data&quot;:[&quot;1,863883&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row566&quot;,&quot;data&quot;:[&quot;1,812259&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row567&quot;,&quot;data&quot;:[&quot;1,75015&quot;,2.0]},{&quot;rowKey&quot;:&quot;Row568&quot;,&quot;data&quot;:[&quot;1,815347&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row569&quot;,&quot;data&quot;:[&quot;1,767077&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row570&quot;,&quot;data&quot;:[&quot;1,762461&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row571&quot;,&quot;data&quot;:[&quot;1,779049&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row572&quot;,&quot;data&quot;:[&quot;1,780731&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row573&quot;,&quot;data&quot;:[&quot;1,872517&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row574&quot;,&quot;data&quot;:[&quot;1,876898&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row575&quot;,&quot;data&quot;:[&quot;1,77558&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row576&quot;,&quot;data&quot;:[&quot;1,76569&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row577&quot;,&quot;data&quot;:[&quot;1,759772&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row578&quot;,&quot;data&quot;:[&quot;1,823545&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row579&quot;,&quot;data&quot;:[&quot;1,868923&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row580&quot;,&quot;data&quot;:[&quot;1,77151&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row581&quot;,&quot;data&quot;:[&quot;1,77219&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row582&quot;,&quot;data&quot;:[&quot;1,858265&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row583&quot;,&quot;data&quot;:[&quot;1,830596&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row584&quot;,&quot;data&quot;:[&quot;1,765836&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row585&quot;,&quot;data&quot;:[&quot;1,770278&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row586&quot;,&quot;data&quot;:[&quot;1,673491&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row587&quot;,&quot;data&quot;:[&quot;1,703346&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row588&quot;,&quot;data&quot;:[&quot;1,842906&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row589&quot;,&quot;data&quot;:[&quot;1,779547&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row590&quot;,&quot;data&quot;:[&quot;1,873368&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row591&quot;,&quot;data&quot;:[&quot;1,755902&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row592&quot;,&quot;data&quot;:[&quot;1,617655&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row593&quot;,&quot;data&quot;:[&quot;1,644517&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row594&quot;,&quot;data&quot;:[&quot;1,701284&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row595&quot;,&quot;data&quot;:[&quot;1,65891&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row596&quot;,&quot;data&quot;:[&quot;1,759324&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row597&quot;,&quot;data&quot;:[&quot;1,758382&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row598&quot;,&quot;data&quot;:[&quot;1,622297&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row599&quot;,&quot;data&quot;:[&quot;1,623278&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row600&quot;,&quot;data&quot;:[&quot;1,918859&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row601&quot;,&quot;data&quot;:[&quot;1,913252&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row602&quot;,&quot;data&quot;:[&quot;1,784994&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row603&quot;,&quot;data&quot;:[&quot;1,792533&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row604&quot;,&quot;data&quot;:[&quot;1,829757&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row605&quot;,&quot;data&quot;:[&quot;1,796415&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row606&quot;,&quot;data&quot;:[&quot;1,762389&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row607&quot;,&quot;data&quot;:[&quot;1,825718&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row608&quot;,&quot;data&quot;:[&quot;1,839699&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row609&quot;,&quot;data&quot;:[&quot;1,749405&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row610&quot;,&quot;data&quot;:[&quot;1,849998&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row611&quot;,&quot;data&quot;:[&quot;1,84998&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row612&quot;,&quot;data&quot;:[&quot;1,607939&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row613&quot;,&quot;data&quot;:[&quot;1,603226&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row614&quot;,&quot;data&quot;:[&quot;1,770663&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row615&quot;,&quot;data&quot;:[&quot;1,758038&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row616&quot;,&quot;data&quot;:[&quot;1,786997&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row617&quot;,&quot;data&quot;:[&quot;1,771837&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row618&quot;,&quot;data&quot;:[&quot;1,722396&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row619&quot;,&quot;data&quot;:[&quot;1,701387&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row620&quot;,&quot;data&quot;:[&quot;1,697421&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row621&quot;,&quot;data&quot;:[&quot;1,696365&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row622&quot;,&quot;data&quot;:[&quot;1,909198&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row623&quot;,&quot;data&quot;:[&quot;1,909105&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row624&quot;,&quot;data&quot;:[&quot;1,801368&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row625&quot;,&quot;data&quot;:[&quot;1,860292&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row626&quot;,&quot;data&quot;:[&quot;1,819535&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row627&quot;,&quot;data&quot;:[&quot;1,793174&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row628&quot;,&quot;data&quot;:[&quot;1,754956&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row629&quot;,&quot;data&quot;:[&quot;1,773115&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row630&quot;,&quot;data&quot;:[&quot;1,772731&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row631&quot;,&quot;data&quot;:[&quot;1,787933&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row632&quot;,&quot;data&quot;:[&quot;1,785277&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row633&quot;,&quot;data&quot;:[&quot;1,817572&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row634&quot;,&quot;data&quot;:[&quot;1,84342&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row635&quot;,&quot;data&quot;:[&quot;1,874519&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row636&quot;,&quot;data&quot;:[&quot;1,796332&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row637&quot;,&quot;data&quot;:[&quot;1,756221&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row638&quot;,&quot;data&quot;:[&quot;1,757132&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row639&quot;,&quot;data&quot;:[&quot;1,889104&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row640&quot;,&quot;data&quot;:[&quot;1,869323&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row641&quot;,&quot;data&quot;:[&quot;1,757154&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row642&quot;,&quot;data&quot;:[&quot;1,764484&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row643&quot;,&quot;data&quot;:[&quot;1,774775&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row644&quot;,&quot;data&quot;:[&quot;1,769933&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row645&quot;,&quot;data&quot;:[&quot;1,760175&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row646&quot;,&quot;data&quot;:[&quot;1,763029&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row647&quot;,&quot;data&quot;:[&quot;1,679515&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row648&quot;,&quot;data&quot;:[&quot;1,699354&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row649&quot;,&quot;data&quot;:[&quot;1,849307&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row650&quot;,&quot;data&quot;:[&quot;1,86741&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row651&quot;,&quot;data&quot;:[&quot;1,86714&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row652&quot;,&quot;data&quot;:[&quot;1,848553&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row653&quot;,&quot;data&quot;:[&quot;1,61981&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row654&quot;,&quot;data&quot;:[&quot;1,647807&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row655&quot;,&quot;data&quot;:[&quot;1,619128&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row656&quot;,&quot;data&quot;:[&quot;1,64187&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row657&quot;,&quot;data&quot;:[&quot;1,787379&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row658&quot;,&quot;data&quot;:[&quot;1,758355&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row659&quot;,&quot;data&quot;:[&quot;1,76414&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row660&quot;,&quot;data&quot;:[&quot;1,767186&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row661&quot;,&quot;data&quot;:[&quot;1,67782&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row662&quot;,&quot;data&quot;:[&quot;1,668478&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row663&quot;,&quot;data&quot;:[&quot;1,685462&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row664&quot;,&quot;data&quot;:[&quot;1,694642&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row665&quot;,&quot;data&quot;:[&quot;1,886109&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row666&quot;,&quot;data&quot;:[&quot;1,915&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row667&quot;,&quot;data&quot;:[&quot;1,841908&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row668&quot;,&quot;data&quot;:[&quot;1,868127&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row669&quot;,&quot;data&quot;:[&quot;1,751688&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row670&quot;,&quot;data&quot;:[&quot;1,755333&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row671&quot;,&quot;data&quot;:[&quot;1,754217&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row672&quot;,&quot;data&quot;:[&quot;1,76071&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row673&quot;,&quot;data&quot;:[&quot;1,765137&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row674&quot;,&quot;data&quot;:[&quot;1,788239&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row675&quot;,&quot;data&quot;:[&quot;1,767121&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row676&quot;,&quot;data&quot;:[&quot;1,840039&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row677&quot;,&quot;data&quot;:[&quot;1,824901&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row678&quot;,&quot;data&quot;:[&quot;1,828391&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row679&quot;,&quot;data&quot;:[&quot;1,829529&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row680&quot;,&quot;data&quot;:[&quot;1,779325&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row681&quot;,&quot;data&quot;:[&quot;1,781139&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row682&quot;,&quot;data&quot;:[&quot;1,764166&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row683&quot;,&quot;data&quot;:[&quot;1,754796&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row684&quot;,&quot;data&quot;:[&quot;1,756509&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row685&quot;,&quot;data&quot;:[&quot;1,756772&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row686&quot;,&quot;data&quot;:[&quot;1,754439&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row687&quot;,&quot;data&quot;:[&quot;1,755142&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row688&quot;,&quot;data&quot;:[&quot;1,706741&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row689&quot;,&quot;data&quot;:[&quot;1,74285&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row690&quot;,&quot;data&quot;:[&quot;1,6811&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row691&quot;,&quot;data&quot;:[&quot;1,705682&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row692&quot;,&quot;data&quot;:[&quot;1,849507&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row693&quot;,&quot;data&quot;:[&quot;1,853373&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row694&quot;,&quot;data&quot;:[&quot;1,84753&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row695&quot;,&quot;data&quot;:[&quot;1,87034&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row696&quot;,&quot;data&quot;:[&quot;1,607787&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row697&quot;,&quot;data&quot;:[&quot;1,603091&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row698&quot;,&quot;data&quot;:[&quot;1,620109&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row699&quot;,&quot;data&quot;:[&quot;1,610647&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row700&quot;,&quot;data&quot;:[&quot;1,758618&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row701&quot;,&quot;data&quot;:[&quot;1,763259&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row702&quot;,&quot;data&quot;:[&quot;1,764138&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row703&quot;,&quot;data&quot;:[&quot;1,75596&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row704&quot;,&quot;data&quot;:[&quot;1,783381&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row705&quot;,&quot;data&quot;:[&quot;1,786532&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row706&quot;,&quot;data&quot;:[&quot;1,766626&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row707&quot;,&quot;data&quot;:[&quot;1,765464&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row708&quot;,&quot;data&quot;:[&quot;1,75853&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row709&quot;,&quot;data&quot;:[&quot;1,758539&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row710&quot;,&quot;data&quot;:[&quot;1,748015&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row711&quot;,&quot;data&quot;:[&quot;1,744974&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row712&quot;,&quot;data&quot;:[&quot;1,701566&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row713&quot;,&quot;data&quot;:[&quot;1,696412&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row714&quot;,&quot;data&quot;:[&quot;1,680489&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row715&quot;,&quot;data&quot;:[&quot;1,703317&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row716&quot;,&quot;data&quot;:[&quot;1,877732&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row717&quot;,&quot;data&quot;:[&quot;1,909639&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row718&quot;,&quot;data&quot;:[&quot;1,909188&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row719&quot;,&quot;data&quot;:[&quot;1,910672&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row720&quot;,&quot;data&quot;:[&quot;1,779136&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row721&quot;,&quot;data&quot;:[&quot;1,767485&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row722&quot;,&quot;data&quot;:[&quot;1,783953&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row723&quot;,&quot;data&quot;:[&quot;1,76714&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row724&quot;,&quot;data&quot;:[&quot;1,816197&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row725&quot;,&quot;data&quot;:[&quot;1,839941&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row726&quot;,&quot;data&quot;:[&quot;1,84842&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row727&quot;,&quot;data&quot;:[&quot;1,830317&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row728&quot;,&quot;data&quot;:[&quot;1,750085&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row729&quot;,&quot;data&quot;:[&quot;1,763582&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row730&quot;,&quot;data&quot;:[&quot;1,816547&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row731&quot;,&quot;data&quot;:[&quot;1,805445&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row732&quot;,&quot;data&quot;:[&quot;1,770124&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row733&quot;,&quot;data&quot;:[&quot;1,77274&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row734&quot;,&quot;data&quot;:[&quot;1,763215&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row735&quot;,&quot;data&quot;:[&quot;1,766547&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row736&quot;,&quot;data&quot;:[&quot;1,773181&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row737&quot;,&quot;data&quot;:[&quot;1,76003&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row738&quot;,&quot;data&quot;:[&quot;1,780089&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row739&quot;,&quot;data&quot;:[&quot;1,766946&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row740&quot;,&quot;data&quot;:[&quot;1,885119&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row741&quot;,&quot;data&quot;:[&quot;1,828276&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row742&quot;,&quot;data&quot;:[&quot;1,806227&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row743&quot;,&quot;data&quot;:[&quot;1,812919&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row744&quot;,&quot;data&quot;:[&quot;1,859717&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row745&quot;,&quot;data&quot;:[&quot;1,86516&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row746&quot;,&quot;data&quot;:[&quot;1,783609&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row747&quot;,&quot;data&quot;:[&quot;1,794827&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row748&quot;,&quot;data&quot;:[&quot;1,759647&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row749&quot;,&quot;data&quot;:[&quot;1,773521&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row750&quot;,&quot;data&quot;:[&quot;1,753327&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row751&quot;,&quot;data&quot;:[&quot;1,761068&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row752&quot;,&quot;data&quot;:[&quot;1,848845&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row753&quot;,&quot;data&quot;:[&quot;1,842812&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row754&quot;,&quot;data&quot;:[&quot;1,825449&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row755&quot;,&quot;data&quot;:[&quot;1,86198&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row756&quot;,&quot;data&quot;:[&quot;1,763987&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row757&quot;,&quot;data&quot;:[&quot;1,761519&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row758&quot;,&quot;data&quot;:[&quot;1,772045&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row759&quot;,&quot;data&quot;:[&quot;1,771817&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row760&quot;,&quot;data&quot;:[&quot;1,79858&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row761&quot;,&quot;data&quot;:[&quot;1,788586&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row762&quot;,&quot;data&quot;:[&quot;1,803207&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row763&quot;,&quot;data&quot;:[&quot;1,836592&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row764&quot;,&quot;data&quot;:[&quot;1,762921&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row765&quot;,&quot;data&quot;:[&quot;1,752863&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row766&quot;,&quot;data&quot;:[&quot;1,768235&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row767&quot;,&quot;data&quot;:[&quot;1,766888&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row768&quot;,&quot;data&quot;:[&quot;1,603501&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row769&quot;,&quot;data&quot;:[&quot;1,690262&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row770&quot;,&quot;data&quot;:[&quot;1,712905&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row771&quot;,&quot;data&quot;:[&quot;1,695735&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row772&quot;,&quot;data&quot;:[&quot;1,829971&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row773&quot;,&quot;data&quot;:[&quot;1,84629&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row774&quot;,&quot;data&quot;:[&quot;1,774983&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row775&quot;,&quot;data&quot;:[&quot;1,78968&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row776&quot;,&quot;data&quot;:[&quot;1,852664&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row777&quot;,&quot;data&quot;:[&quot;1,872561&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row778&quot;,&quot;data&quot;:[&quot;1,81955&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row779&quot;,&quot;data&quot;:[&quot;1,815514&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row780&quot;,&quot;data&quot;:[&quot;1,614075&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row781&quot;,&quot;data&quot;:[&quot;1,609418&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row782&quot;,&quot;data&quot;:[&quot;1,650189&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row783&quot;,&quot;data&quot;:[&quot;1,653876&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row784&quot;,&quot;data&quot;:[&quot;1,657132&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row785&quot;,&quot;data&quot;:[&quot;1,644751&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row786&quot;,&quot;data&quot;:[&quot;1,660761&quot;,1.0]},{&quot;rowKey&quot;:&quot;Row787&quot;,&quot;data&quot;:[&quot;1,69151&quot;,1.0]}],&quot;dataHash&quot;:null,&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;colNames&quot;:[&quot;Height&quot;,&quot;Height_1&quot;],&quot;possibleValues&quot;:[[&quot;1,8&quot;,&quot;1,78&quot;,&quot;1,62&quot;,&quot;1,64&quot;,&quot;1,72&quot;,&quot;1,85&quot;,&quot;1,65&quot;,&quot;1,77&quot;,&quot;1,93&quot;,&quot;1,6&quot;,&quot;1,7&quot;,&quot;1,75&quot;,&quot;1,68&quot;,&quot;1,79&quot;,&quot;1,66&quot;,&quot;1,81&quot;,&quot;1,82&quot;,&quot;1,76&quot;,&quot;1,67&quot;,&quot;1,88&quot;,&quot;1,87&quot;,&quot;1,89&quot;,&quot;1,74&quot;,&quot;1,61&quot;,&quot;1,69&quot;,&quot;1,83&quot;,&quot;1,92&quot;,&quot;1,84&quot;,&quot;1,91&quot;,&quot;1,71&quot;,&quot;1,9&quot;,&quot;1,86&quot;,&quot;1,98&quot;,&quot;1,58&quot;,&quot;1,73&quot;,&quot;1,56&quot;,&quot;1,743702&quot;,&quot;1,771915&quot;,&quot;1,75376&quot;,&quot;1,882779&quot;,&quot;1,854592&quot;,&quot;1,835643&quot;,&quot;1,755507&quot;,&quot;1,71266&quot;,&quot;1,694265&quot;,&quot;1,710564&quot;,&quot;1,752755&quot;,&quot;1,691007&quot;,&quot;1,753349&quot;,&quot;1,781543&quot;,&quot;1,755823&quot;,&quot;1,836669&quot;,&quot;1,768493&quot;,&quot;1,777108&quot;,&quot;1,793926&quot;,&quot;1,809251&quot;,&quot;1,767335&quot;,&quot;1,848294&quot;,&quot;1,824414&quot;,&quot;1,856633&quot;,&quot;1,767563&quot;,&quot;1,883364&quot;,&quot;1,824655&quot;,&quot;1,840138&quot;,&quot;1,819557&quot;,&quot;1,798645&quot;,&quot;1,7108&quot;,&quot;1,70653&quot;,&quot;1,716691&quot;,&quot;1,717826&quot;,&quot;1,753389&quot;,&quot;1,70165&quot;,&quot;1,75336&quot;,&quot;1,868931&quot;,&quot;1,691206&quot;,&quot;1,788459&quot;,&quot;1,811238&quot;,&quot;1,782756&quot;,&quot;1,896734&quot;,&quot;1,845399&quot;,&quot;1,834637&quot;,&quot;1,721854&quot;,&quot;1,71889&quot;,&quot;1,756338&quot;,&quot;1,770324&quot;,&quot;1,869098&quot;,&quot;1,851123&quot;,&quot;1,787264&quot;,&quot;1,787787&quot;,&quot;1,698914&quot;,&quot;1,75633&quot;,&quot;1,732862&quot;,&quot;1,757958&quot;,&quot;1,786758&quot;,&quot;1,767058&quot;,&quot;1,699437&quot;,&quot;1,82525&quot;,&quot;1,793315&quot;,&quot;1,776989&quot;,&quot;1,854162&quot;,&quot;1,821514&quot;,&quot;1,762073&quot;,&quot;1,759933&quot;,&quot;1,844749&quot;,&quot;1,853325&quot;,&quot;1,854706&quot;,&quot;1,76033&quot;,&quot;1,841879&quot;,&quot;1,856406&quot;,&quot;1,829142&quot;,&quot;1,822084&quot;,&quot;1,80671&quot;,&quot;1,707259&quot;,&quot;1,708107&quot;,&quot;1,739344&quot;,&quot;1,719827&quot;,&quot;1,722547&quot;,&quot;1,738702&quot;,&quot;1,816298&quot;,&quot;1,638085&quot;,&quot;1,813678&quot;,&quot;1,697228&quot;,&quot;1,617469&quot;,&quot;1,855543&quot;,&quot;1,855353&quot;,&quot;1,696336&quot;,&quot;1,698346&quot;,&quot;1,605404&quot;,&quot;1,629194&quot;,&quot;1,752391&quot;,&quot;1,818226&quot;,&quot;1,809101&quot;,&quot;1,709484&quot;,&quot;1,607082&quot;,&quot;1,831357&quot;,&quot;1,778447&quot;,&quot;1,709561&quot;,&quot;1,755317&quot;,&quot;1,708071&quot;,&quot;1,806947&quot;,&quot;1,712556&quot;,&quot;1,858624&quot;,&quot;1,820471&quot;,&quot;1,752123&quot;,&quot;1,857231&quot;,&quot;1,81006&quot;,&quot;1,80179&quot;,&quot;1,625891&quot;,&quot;1,64037&quot;,&quot;1,791047&quot;,&quot;1,679306&quot;,&quot;1,816783&quot;,&quot;1,812472&quot;,&quot;1,870931&quot;,&quot;1,863685&quot;,&quot;1,670227&quot;,&quot;1,717288&quot;,&quot;1,750359&quot;,&quot;1,707557&quot;,&quot;1,752115&quot;,&quot;1,745033&quot;,&quot;1,820643&quot;,&quot;1,80733&quot;,&quot;1,814255&quot;,&quot;1,700181&quot;,&quot;1,859927&quot;,&quot;1,896073&quot;,&quot;1,605314&quot;,&quot;1,712061&quot;,&quot;1,676014&quot;,&quot;1,765874&quot;,&quot;1,74595&quot;,&quot;1,690196&quot;,&quot;1,707968&quot;,&quot;1,855779&quot;,&quot;1,853223&quot;,&quot;1,838791&quot;,&quot;1,804099&quot;,&quot;1,813567&quot;,&quot;1,818848&quot;,&quot;1,817641&quot;,&quot;1,636592&quot;,&quot;1,621412&quot;,&quot;1,802871&quot;,&quot;1,696201&quot;,&quot;1,694633&quot;,&quot;1,856811&quot;,&quot;1,807538&quot;,&quot;1,849425&quot;,&quot;1,712473&quot;,&quot;1,717432&quot;,&quot;1,677573&quot;,&quot;1,610209&quot;,&quot;1,612556&quot;,&quot;1,627396&quot;,&quot;1,822573&quot;,&quot;1,815409&quot;,&quot;1,698049&quot;,&quot;1,710415&quot;,&quot;1,716289&quot;,&quot;1,834715&quot;,&quot;1,775626&quot;,&quot;1,714253&quot;,&quot;1,693628&quot;,&quot;1,776347&quot;,&quot;1,767806&quot;,&quot;1,702516&quot;,&quot;1,814182&quot;,&quot;1,701584&quot;,&quot;1,713343&quot;,&quot;1,874061&quot;,&quot;1,637537&quot;,&quot;1,773656&quot;,&quot;1,751029&quot;,&quot;1,838266&quot;,&quot;1,824449&quot;,&quot;1,773766&quot;,&quot;1,75463&quot;,&quot;1,674327&quot;,&quot;1,913241&quot;,&quot;1,737984&quot;,&quot;1,703688&quot;,&quot;1,716308&quot;,&quot;1,780846&quot;,&quot;1,823168&quot;,&quot;1,768578&quot;,&quot;1,792527&quot;,&quot;1,795311&quot;,&quot;1,713825&quot;,&quot;1,835381&quot;,&quot;1,836943&quot;,&quot;1,819614&quot;,&quot;1,717775&quot;,&quot;1,791867&quot;,&quot;1,68108&quot;,&quot;1,769269&quot;,&quot;1,765188&quot;,&quot;1,654757&quot;,&quot;1,691303&quot;,&quot;1,70074&quot;,&quot;1,715118&quot;,&quot;1,848683&quot;,&quot;1,835678&quot;,&quot;1,699474&quot;,&quot;1,745528&quot;,&quot;1,720379&quot;,&quot;1,758787&quot;,&quot;1,704908&quot;,&quot;1,78629&quot;,&quot;1,705617&quot;,&quot;1,733439&quot;,&quot;1,843172&quot;,&quot;1,705813&quot;,&quot;1,704141&quot;,&quot;1,706082&quot;,&quot;1,842943&quot;,&quot;1,880992&quot;,&quot;1,726774&quot;,&quot;1,73196&quot;,&quot;1,751278&quot;,&quot;1,780448&quot;,&quot;1,785241&quot;,&quot;1,718845&quot;,&quot;1,725587&quot;,&quot;1,786238&quot;,&quot;1,718534&quot;,&quot;1,919543&quot;,&quot;1,707613&quot;,&quot;1,658393&quot;,&quot;1,805459&quot;,&quot;1,744733&quot;,&quot;1,799742&quot;,&quot;1,706912&quot;,&quot;1,752265&quot;,&quot;1,735343&quot;,&quot;1,856759&quot;,&quot;1,77433&quot;,&quot;1,719509&quot;,&quot;1,657221&quot;,&quot;1,713348&quot;,&quot;1,677178&quot;,&quot;1,717722&quot;,&quot;1,718981&quot;,&quot;1,838441&quot;,&quot;1,699818&quot;,&quot;1,718097&quot;,&quot;1,731389&quot;,&quot;1,699667&quot;,&quot;1,823765&quot;,&quot;1,708742&quot;,&quot;1,835024&quot;,&quot;1,7088&quot;,&quot;1,680991&quot;,&quot;1,835271&quot;,&quot;1,742819&quot;,&quot;1,741192&quot;,&quot;1,759721&quot;,&quot;1,810616&quot;,&quot;1,763101&quot;,&quot;1,732492&quot;,&quot;1,780679&quot;,&quot;1,758687&quot;,&quot;1,704573&quot;,&quot;1,716545&quot;,&quot;1,903832&quot;,&quot;1,742538&quot;,&quot;1,747739&quot;,&quot;1,717037&quot;,&quot;1,746055&quot;,&quot;1,841151&quot;,&quot;1,758972&quot;,&quot;1,792435&quot;,&quot;1,784555&quot;,&quot;1,672101&quot;,&quot;1,721348&quot;,&quot;1,803129&quot;,&quot;1,713599&quot;,&quot;1,662728&quot;,&quot;1,837399&quot;,&quot;1,80827&quot;,&quot;1,714508&quot;,&quot;1,793451&quot;,&quot;1,694997&quot;,&quot;1,673394&quot;,&quot;1,769499&quot;,&quot;1,662669&quot;,&quot;1,694423&quot;,&quot;1,685045&quot;,&quot;1,723072&quot;,&quot;1,840708&quot;,&quot;1,836007&quot;,&quot;1,700627&quot;,&quot;1,743935&quot;,&quot;1,742654&quot;,&quot;1,754441&quot;,&quot;1,719342&quot;,&quot;1,799902&quot;,&quot;1,709428&quot;,&quot;1,752456&quot;,&quot;1,685947&quot;,&quot;1,828092&quot;,&quot;1,71338&quot;,&quot;1,680764&quot;,&quot;1,705584&quot;,&quot;1,841852&quot;,&quot;1,834986&quot;,&quot;1,724839&quot;,&quot;1,685127&quot;,&quot;1,750097&quot;,&quot;1,757961&quot;,&quot;1,848965&quot;,&quot;1,789193&quot;,&quot;1,716677&quot;,&quot;1,729177&quot;,&quot;1,719153&quot;,&quot;1,772449&quot;,&quot;1,837117&quot;,&quot;1,784377&quot;,&quot;1,792507&quot;,&quot;1,734237&quot;,&quot;1,775815&quot;,&quot;1,753321&quot;,&quot;1,706525&quot;,&quot;1,673352&quot;,&quot;1,660324&quot;,&quot;1,786318&quot;,&quot;1,757691&quot;,&quot;1,712163&quot;,&quot;1,660955&quot;,&quot;1,781952&quot;,&quot;1,793378&quot;,&quot;1,85478&quot;,&quot;1,791415&quot;,&quot;1,753716&quot;,&quot;1,780503&quot;,&quot;1,819867&quot;,&quot;1,791174&quot;,&quot;1,82093&quot;,&quot;1,773594&quot;,&quot;1,930416&quot;,&quot;1,947406&quot;,&quot;1,738465&quot;,&quot;1,820385&quot;,&quot;1,792239&quot;,&quot;1,82697&quot;,&quot;1,639383&quot;,&quot;1,682916&quot;,&quot;1,690437&quot;,&quot;1,700164&quot;,&quot;1,801848&quot;,&quot;1,844751&quot;,&quot;1,811602&quot;,&quot;1,787521&quot;,&quot;1,789109&quot;,&quot;1,654961&quot;,&quot;1,701986&quot;,&quot;1,657995&quot;,&quot;1,750384&quot;,&quot;1,753081&quot;,&quot;1,770126&quot;,&quot;1,758189&quot;,&quot;1,702825&quot;,&quot;1,735659&quot;,&quot;1,671705&quot;,&quot;1,676595&quot;,&quot;1,699998&quot;,&quot;1,722785&quot;,&quot;1,670667&quot;,&quot;1,789992&quot;,&quot;1,768834&quot;,&quot;1,761008&quot;,&quot;1,810215&quot;,&quot;1,681855&quot;,&quot;1,688436&quot;,&quot;1,710616&quot;,&quot;1,721384&quot;,&quot;1,855433&quot;,&quot;1,856315&quot;,&quot;1,799406&quot;,&quot;1,819875&quot;,&quot;1,790172&quot;,&quot;1,783782&quot;,&quot;1,783906&quot;,&quot;1,844218&quot;,&quot;1,754711&quot;,&quot;1,762515&quot;,&quot;1,942725&quot;,&quot;1,975663&quot;,&quot;1,703098&quot;,&quot;1,706996&quot;,&quot;1,784402&quot;,&quot;1,792687&quot;,&quot;1,814052&quot;,&quot;1,789421&quot;,&quot;1,665798&quot;,&quot;1,66671&quot;,&quot;1,702002&quot;,&quot;1,69382&quot;,&quot;1,798354&quot;,&quot;1,824432&quot;,&quot;1,830384&quot;,&quot;1,829907&quot;,&quot;1,823755&quot;,&quot;1,834842&quot;,&quot;1,783901&quot;,&quot;1,782067&quot;,&quot;1,781032&quot;,&quot;1,728183&quot;,&quot;1,732694&quot;,&quot;1,701634&quot;,&quot;1,723921&quot;,&quot;1,769484&quot;,&quot;1,777416&quot;,&quot;1,777251&quot;,&quot;1,814696&quot;,&quot;1,653751&quot;,&quot;1,680171&quot;,&quot;1,672959&quot;,&quot;1,680058&quot;,&quot;1,664752&quot;,&quot;1,668553&quot;,&quot;1,785286&quot;,&quot;1,780725&quot;,&quot;1,751046&quot;,&quot;1,751365&quot;,&quot;1,717262&quot;,&quot;1,741393&quot;,&quot;1,7921&quot;,&quot;1,785957&quot;,&quot;1,65731&quot;,&quot;1,673287&quot;,&quot;1,781251&quot;,&quot;1,775584&quot;,&quot;1,746645&quot;,&quot;1,741353&quot;,&quot;1,803245&quot;,&quot;1,792646&quot;,&quot;1,87199&quot;,&quot;1,859056&quot;,&quot;1,785718&quot;,&quot;1,7425&quot;,&quot;1,803132&quot;,&quot;1,774644&quot;,&quot;1,782269&quot;,&quot;1,780791&quot;,&quot;1,790151&quot;,&quot;1,818641&quot;,&quot;1,806827&quot;,&quot;1,811189&quot;,&quot;1,811738&quot;,&quot;1,799779&quot;,&quot;1,769328&quot;,&quot;1,807029&quot;,&quot;1,882533&quot;,&quot;1,879144&quot;,&quot;1,931263&quot;,&quot;1,861358&quot;,&quot;1,714143&quot;,&quot;1,723191&quot;,&quot;1,787733&quot;,&quot;1,782722&quot;,&quot;1,797523&quot;,&quot;1,803527&quot;,&quot;1,801224&quot;,&quot;1,829239&quot;,&quot;1,652971&quot;,&quot;1,661277&quot;,&quot;1,641784&quot;,&quot;1,673767&quot;,&quot;1,701413&quot;,&quot;1,709731&quot;,&quot;1,698829&quot;,&quot;1,705304&quot;,&quot;1,80416&quot;,&quot;1,785062&quot;,&quot;1,755926&quot;,&quot;1,787802&quot;,&quot;1,704877&quot;,&quot;1,695347&quot;,&quot;1,908608&quot;,&quot;1,819296&quot;,&quot;1,773259&quot;,&quot;1,774647&quot;,&quot;1,773664&quot;,&quot;1,793476&quot;,&quot;1,82559&quot;,&quot;1,885543&quot;,&quot;1,87407&quot;,&quot;1,755967&quot;,&quot;1,757069&quot;,&quot;1,704028&quot;,&quot;1,849003&quot;,&quot;1,841989&quot;,&quot;1,613491&quot;,&quot;1,647821&quot;,&quot;1,75834&quot;,&quot;1,758398&quot;,&quot;1,670774&quot;,&quot;1,665585&quot;,&quot;1,914186&quot;,&quot;1,899588&quot;,&quot;1,792998&quot;,&quot;1,827279&quot;,&quot;1,775416&quot;,&quot;1,766975&quot;,&quot;1,754218&quot;,&quot;1,754996&quot;,&quot;1,748103&quot;,&quot;1,73325&quot;,&quot;1,84995&quot;,&quot;1,849601&quot;,&quot;1,606066&quot;,&quot;1,611434&quot;,&quot;1,762887&quot;,&quot;1,755938&quot;,&quot;1,787052&quot;,&quot;1,765258&quot;,&quot;1,726279&quot;,&quot;1,735851&quot;,&quot;1,699793&quot;,&quot;1,703202&quot;,&quot;1,906821&quot;,&quot;1,910987&quot;,&quot;1,784049&quot;,&quot;1,783914&quot;,&quot;1,863883&quot;,&quot;1,812259&quot;,&quot;1,75015&quot;,&quot;1,815347&quot;,&quot;1,767077&quot;,&quot;1,762461&quot;,&quot;1,779049&quot;,&quot;1,780731&quot;,&quot;1,872517&quot;,&quot;1,876898&quot;,&quot;1,77558&quot;,&quot;1,76569&quot;,&quot;1,759772&quot;,&quot;1,823545&quot;,&quot;1,868923&quot;,&quot;1,77151&quot;,&quot;1,77219&quot;,&quot;1,858265&quot;,&quot;1,830596&quot;,&quot;1,765836&quot;,&quot;1,770278&quot;,&quot;1,673491&quot;,&quot;1,703346&quot;,&quot;1,842906&quot;,&quot;1,779547&quot;,&quot;1,873368&quot;,&quot;1,755902&quot;,&quot;1,617655&quot;,&quot;1,644517&quot;,&quot;1,701284&quot;,&quot;1,65891&quot;,&quot;1,759324&quot;,&quot;1,758382&quot;,&quot;1,622297&quot;,&quot;1,623278&quot;,&quot;1,918859&quot;,&quot;1,913252&quot;,&quot;1,784994&quot;,&quot;1,792533&quot;,&quot;1,829757&quot;,&quot;1,796415&quot;,&quot;1,762389&quot;,&quot;1,825718&quot;,&quot;1,839699&quot;,&quot;1,749405&quot;,&quot;1,849998&quot;,&quot;1,84998&quot;,&quot;1,607939&quot;,&quot;1,603226&quot;,&quot;1,770663&quot;,&quot;1,758038&quot;,&quot;1,786997&quot;,&quot;1,771837&quot;,&quot;1,722396&quot;,&quot;1,701387&quot;,&quot;1,697421&quot;,&quot;1,696365&quot;,&quot;1,909198&quot;,&quot;1,909105&quot;,&quot;1,801368&quot;,&quot;1,860292&quot;,&quot;1,819535&quot;,&quot;1,793174&quot;,&quot;1,754956&quot;,&quot;1,773115&quot;,&quot;1,772731&quot;,&quot;1,787933&quot;,&quot;1,785277&quot;,&quot;1,817572&quot;,&quot;1,84342&quot;,&quot;1,874519&quot;,&quot;1,796332&quot;,&quot;1,756221&quot;,&quot;1,757132&quot;,&quot;1,889104&quot;,&quot;1,869323&quot;,&quot;1,757154&quot;,&quot;1,764484&quot;,&quot;1,774775&quot;,&quot;1,769933&quot;,&quot;1,760175&quot;,&quot;1,763029&quot;,&quot;1,679515&quot;,&quot;1,699354&quot;,&quot;1,849307&quot;,&quot;1,86741&quot;,&quot;1,86714&quot;,&quot;1,848553&quot;,&quot;1,61981&quot;,&quot;1,647807&quot;,&quot;1,619128&quot;,&quot;1,64187&quot;,&quot;1,787379&quot;,&quot;1,758355&quot;,&quot;1,76414&quot;,&quot;1,767186&quot;,&quot;1,67782&quot;,&quot;1,668478&quot;,&quot;1,685462&quot;,&quot;1,694642&quot;,&quot;1,886109&quot;,&quot;1,915&quot;,&quot;1,841908&quot;,&quot;1,868127&quot;,&quot;1,751688&quot;,&quot;1,755333&quot;,&quot;1,754217&quot;,&quot;1,76071&quot;,&quot;1,765137&quot;,&quot;1,788239&quot;,&quot;1,767121&quot;,&quot;1,840039&quot;,&quot;1,824901&quot;,&quot;1,828391&quot;,&quot;1,829529&quot;,&quot;1,779325&quot;,&quot;1,781139&quot;,&quot;1,764166&quot;,&quot;1,754796&quot;,&quot;1,756509&quot;,&quot;1,756772&quot;,&quot;1,754439&quot;,&quot;1,755142&quot;,&quot;1,706741&quot;,&quot;1,74285&quot;,&quot;1,6811&quot;,&quot;1,705682&quot;,&quot;1,849507&quot;,&quot;1,853373&quot;,&quot;1,84753&quot;,&quot;1,87034&quot;,&quot;1,607787&quot;,&quot;1,603091&quot;,&quot;1,620109&quot;,&quot;1,610647&quot;,&quot;1,758618&quot;,&quot;1,763259&quot;,&quot;1,764138&quot;,&quot;1,75596&quot;,&quot;1,783381&quot;,&quot;1,786532&quot;,&quot;1,766626&quot;,&quot;1,765464&quot;,&quot;1,75853&quot;,&quot;1,758539&quot;,&quot;1,748015&quot;,&quot;1,744974&quot;,&quot;1,701566&quot;,&quot;1,696412&quot;,&quot;1,680489&quot;,&quot;1,703317&quot;,&quot;1,877732&quot;,&quot;1,909639&quot;,&quot;1,909188&quot;,&quot;1,910672&quot;,&quot;1,779136&quot;,&quot;1,767485&quot;,&quot;1,783953&quot;,&quot;1,76714&quot;,&quot;1,816197&quot;,&quot;1,839941&quot;,&quot;1,84842&quot;,&quot;1,830317&quot;,&quot;1,750085&quot;,&quot;1,763582&quot;,&quot;1,816547&quot;,&quot;1,805445&quot;,&quot;1,770124&quot;,&quot;1,77274&quot;,&quot;1,763215&quot;,&quot;1,766547&quot;,&quot;1,773181&quot;,&quot;1,76003&quot;,&quot;1,780089&quot;,&quot;1,766946&quot;,&quot;1,885119&quot;,&quot;1,828276&quot;,&quot;1,806227&quot;,&quot;1,812919&quot;,&quot;1,859717&quot;,&quot;1,86516&quot;,&quot;1,783609&quot;,&quot;1,794827&quot;,&quot;1,759647&quot;,&quot;1,773521&quot;,&quot;1,753327&quot;,&quot;1,761068&quot;,&quot;1,848845&quot;,&quot;1,842812&quot;,&quot;1,825449&quot;,&quot;1,86198&quot;,&quot;1,763987&quot;,&quot;1,761519&quot;,&quot;1,772045&quot;,&quot;1,771817&quot;,&quot;1,79858&quot;,&quot;1,788586&quot;,&quot;1,803207&quot;,&quot;1,836592&quot;,&quot;1,762921&quot;,&quot;1,752863&quot;,&quot;1,768235&quot;,&quot;1,766888&quot;,&quot;1,603501&quot;,&quot;1,690262&quot;,&quot;1,712905&quot;,&quot;1,695735&quot;,&quot;1,829971&quot;,&quot;1,84629&quot;,&quot;1,774983&quot;,&quot;1,78968&quot;,&quot;1,852664&quot;,&quot;1,872561&quot;,&quot;1,81955&quot;,&quot;1,815514&quot;,&quot;1,614075&quot;,&quot;1,609418&quot;,&quot;1,650189&quot;,&quot;1,653876&quot;,&quot;1,657132&quot;,&quot;1,644751&quot;,&quot;1,660761&quot;,&quot;1,69151&quot;],null],&quot;hiddenColumns&quot;:[],&quot;containsMissingValues&quot;:[false,false],&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (integer)&quot;],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;],&quot;colorModels&quot;:[],&quot;filterIds&quot;:[null,null],&quot;numColumns&quot;:2,&quot;numRows&quot;:788,&quot;minValues&quot;:[&quot;1,56&quot;,1.0],&quot;maxValues&quot;:[&quot;1,98&quot;,37.0],&quot;rowSizeValues&quot;:null,&quot;numExtensions&quot;:0,&quot;extensionTypes&quot;:[],&quot;extensionNames&quot;:[]},&quot;filtered&quot;:false,&quot;fragmentFirstRowIndex&quot;:0,&quot;totalFilteredRows&quot;:0,&quot;totalRows&quot;:0,&quot;fragment&quot;:false},&quot;translator&quot;:{&quot;sourceID&quot;:null,&quot;targetIDs&quot;:null,&quot;forward&quot;:false,&quot;mapping&quot;:{&quot;Row370&quot;:[&quot;Row1248&quot;],&quot;Row371&quot;:[&quot;Row1249&quot;],&quot;Row130&quot;:[&quot;Row767&quot;],&quot;Row372&quot;:[&quot;Row1252&quot;],&quot;Row131&quot;:[&quot;Row768&quot;],&quot;Row373&quot;:[&quot;Row1253&quot;],&quot;Row132&quot;:[&quot;Row769&quot;],&quot;Row374&quot;:[&quot;Row1254&quot;],&quot;Row133&quot;:[&quot;Row770&quot;],&quot;Row375&quot;:[&quot;Row1255&quot;],&quot;Row134&quot;:[&quot;Row772&quot;],&quot;Row376&quot;:[&quot;Row1256&quot;],&quot;Row135&quot;:[&quot;Row775&quot;],&quot;Row377&quot;:[&quot;Row1257&quot;],&quot;Row136&quot;:[&quot;Row776&quot;],&quot;Row378&quot;:[&quot;Row1260&quot;],&quot;Row137&quot;:[&quot;Row778&quot;],&quot;Row379&quot;:[&quot;Row1261&quot;],&quot;Row138&quot;:[&quot;Row779&quot;],&quot;Row139&quot;:[&quot;Row780&quot;],&quot;Row380&quot;:[&quot;Row1262&quot;],&quot;Row381&quot;:[&quot;Row1265&quot;],&quot;Row140&quot;:[&quot;Row783&quot;],&quot;Row382&quot;:[&quot;Row1268&quot;],&quot;Row141&quot;:[&quot;Row788&quot;],&quot;Row383&quot;:[&quot;Row1269&quot;],&quot;Row142&quot;:[&quot;Row795&quot;],&quot;Row384&quot;:[&quot;Row1270&quot;],&quot;Row143&quot;:[&quot;Row797&quot;],&quot;Row385&quot;:[&quot;Row1272&quot;],&quot;Row144&quot;:[&quot;Row798&quot;],&quot;Row386&quot;:[&quot;Row1273&quot;],&quot;Row145&quot;:[&quot;Row803&quot;],&quot;Row387&quot;:[&quot;Row1275&quot;],&quot;Row146&quot;:[&quot;Row804&quot;],&quot;Row388&quot;:[&quot;Row1276&quot;],&quot;Row147&quot;:[&quot;Row805&quot;],&quot;Row389&quot;:[&quot;Row1278&quot;],&quot;Row148&quot;:[&quot;Row806&quot;],&quot;Row149&quot;:[&quot;Row807&quot;],&quot;Row109&quot;:[&quot;Row730&quot;],&quot;Row590&quot;:[&quot;Row1595&quot;],&quot;Row591&quot;:[&quot;Row1596&quot;],&quot;Row350&quot;:[&quot;Row1200&quot;],&quot;Row592&quot;:[&quot;Row1597&quot;],&quot;Row351&quot;:[&quot;Row1201&quot;],&quot;Row593&quot;:[&quot;Row1598&quot;],&quot;Row110&quot;:[&quot;Row731&quot;],&quot;Row352&quot;:[&quot;Row1202&quot;],&quot;Row594&quot;:[&quot;Row1599&quot;],&quot;Row111&quot;:[&quot;Row732&quot;],&quot;Row353&quot;:[&quot;Row1206&quot;],&quot;Row595&quot;:[&quot;Row1600&quot;],&quot;Row112&quot;:[&quot;Row733&quot;],&quot;Row354&quot;:[&quot;Row1207&quot;],&quot;Row596&quot;:[&quot;Row1601&quot;],&quot;Row113&quot;:[&quot;Row734&quot;],&quot;Row355&quot;:[&quot;Row1209&quot;],&quot;Row597&quot;:[&quot;Row1602&quot;],&quot;Row114&quot;:[&quot;Row735&quot;],&quot;Row356&quot;:[&quot;Row1210&quot;],&quot;Row598&quot;:[&quot;Row1603&quot;],&quot;Row115&quot;:[&quot;Row742&quot;],&quot;Row357&quot;:[&quot;Row1211&quot;],&quot;Row599&quot;:[&quot;Row1604&quot;],&quot;Row116&quot;:[&quot;Row743&quot;],&quot;Row358&quot;:[&quot;Row1212&quot;],&quot;Row117&quot;:[&quot;Row744&quot;],&quot;Row359&quot;:[&quot;Row1224&quot;],&quot;Row118&quot;:[&quot;Row745&quot;],&quot;Row119&quot;:[&quot;Row746&quot;],&quot;Row360&quot;:[&quot;Row1225&quot;],&quot;Row361&quot;:[&quot;Row1228&quot;],&quot;Row120&quot;:[&quot;Row747&quot;],&quot;Row362&quot;:[&quot;Row1230&quot;],&quot;Row121&quot;:[&quot;Row748&quot;],&quot;Row363&quot;:[&quot;Row1232&quot;],&quot;Row122&quot;:[&quot;Row749&quot;],&quot;Row364&quot;:[&quot;Row1233&quot;],&quot;Row123&quot;:[&quot;Row750&quot;],&quot;Row365&quot;:[&quot;Row1234&quot;],&quot;Row124&quot;:[&quot;Row752&quot;],&quot;Row366&quot;:[&quot;Row1235&quot;],&quot;Row125&quot;:[&quot;Row753&quot;],&quot;Row367&quot;:[&quot;Row1236&quot;],&quot;Row126&quot;:[&quot;Row755&quot;],&quot;Row368&quot;:[&quot;Row1243&quot;],&quot;Row127&quot;:[&quot;Row758&quot;],&quot;Row369&quot;:[&quot;Row1245&quot;],&quot;Row128&quot;:[&quot;Row762&quot;],&quot;Row129&quot;:[&quot;Row766&quot;],&quot;Row170&quot;:[&quot;Row857&quot;],&quot;Row171&quot;:[&quot;Row858&quot;],&quot;Row172&quot;:[&quot;Row859&quot;],&quot;Row173&quot;:[&quot;Row864&quot;],&quot;Row174&quot;:[&quot;Row871&quot;],&quot;Row175&quot;:[&quot;Row872&quot;],&quot;Row176&quot;:[&quot;Row882&quot;],&quot;Row177&quot;:[&quot;Row886&quot;],&quot;Row178&quot;:[&quot;Row887&quot;],&quot;Row179&quot;:[&quot;Row893&quot;],&quot;Row180&quot;:[&quot;Row894&quot;],&quot;Row181&quot;:[&quot;Row895&quot;],&quot;Row182&quot;:[&quot;Row896&quot;],&quot;Row183&quot;:[&quot;Row897&quot;],&quot;Row184&quot;:[&quot;Row898&quot;],&quot;Row185&quot;:[&quot;Row899&quot;],&quot;Row186&quot;:[&quot;Row901&quot;],&quot;Row187&quot;:[&quot;Row904&quot;],&quot;Row188&quot;:[&quot;Row905&quot;],&quot;Row189&quot;:[&quot;Row906&quot;],&quot;Row390&quot;:[&quot;Row1279&quot;],&quot;Row391&quot;:[&quot;Row1280&quot;],&quot;Row150&quot;:[&quot;Row808&quot;],&quot;Row392&quot;:[&quot;Row1281&quot;],&quot;Row151&quot;:[&quot;Row811&quot;],&quot;Row393&quot;:[&quot;Row1282&quot;],&quot;Row152&quot;:[&quot;Row812&quot;],&quot;Row394&quot;:[&quot;Row1289&quot;],&quot;Row153&quot;:[&quot;Row814&quot;],&quot;Row395&quot;:[&quot;Row1290&quot;],&quot;Row154&quot;:[&quot;Row815&quot;],&quot;Row396&quot;:[&quot;Row1292&quot;],&quot;Row155&quot;:[&quot;Row816&quot;],&quot;Row397&quot;:[&quot;Row1297&quot;],&quot;Row156&quot;:[&quot;Row817&quot;],&quot;Row398&quot;:[&quot;Row1298&quot;],&quot;Row157&quot;:[&quot;Row818&quot;],&quot;Row399&quot;:[&quot;Row1303&quot;],&quot;Row158&quot;:[&quot;Row819&quot;],&quot;Row159&quot;:[&quot;Row837&quot;],&quot;Row160&quot;:[&quot;Row838&quot;],&quot;Row161&quot;:[&quot;Row839&quot;],&quot;Row162&quot;:[&quot;Row840&quot;],&quot;Row163&quot;:[&quot;Row842&quot;],&quot;Row164&quot;:[&quot;Row843&quot;],&quot;Row165&quot;:[&quot;Row848&quot;],&quot;Row166&quot;:[&quot;Row849&quot;],&quot;Row167&quot;:[&quot;Row850&quot;],&quot;Row168&quot;:[&quot;Row854&quot;],&quot;Row169&quot;:[&quot;Row855&quot;],&quot;Row190&quot;:[&quot;Row908&quot;],&quot;Row191&quot;:[&quot;Row909&quot;],&quot;Row192&quot;:[&quot;Row913&quot;],&quot;Row193&quot;:[&quot;Row914&quot;],&quot;Row194&quot;:[&quot;Row920&quot;],&quot;Row195&quot;:[&quot;Row927&quot;],&quot;Row196&quot;:[&quot;Row928&quot;],&quot;Row197&quot;:[&quot;Row929&quot;],&quot;Row198&quot;:[&quot;Row932&quot;],&quot;Row199&quot;:[&quot;Row933&quot;],&quot;Row700&quot;:[&quot;Row1711&quot;],&quot;Row701&quot;:[&quot;Row1712&quot;],&quot;Row702&quot;:[&quot;Row1713&quot;],&quot;Row725&quot;:[&quot;Row1736&quot;],&quot;Row726&quot;:[&quot;Row1737&quot;],&quot;Row727&quot;:[&quot;Row1738&quot;],&quot;Row728&quot;:[&quot;Row1739&quot;],&quot;Row729&quot;:[&quot;Row1740&quot;],&quot;Row730&quot;:[&quot;Row1741&quot;],&quot;Row731&quot;:[&quot;Row1742&quot;],&quot;Row732&quot;:[&quot;Row1743&quot;],&quot;Row733&quot;:[&quot;Row1744&quot;],&quot;Row734&quot;:[&quot;Row1745&quot;],&quot;Row735&quot;:[&quot;Row1746&quot;],&quot;Row736&quot;:[&quot;Row1747&quot;],&quot;Row737&quot;:[&quot;Row1748&quot;],&quot;Row738&quot;:[&quot;Row1749&quot;],&quot;Row739&quot;:[&quot;Row1750&quot;],&quot;Row740&quot;:[&quot;Row1751&quot;],&quot;Row741&quot;:[&quot;Row1752&quot;],&quot;Row500&quot;:[&quot;Row1492&quot;],&quot;Row742&quot;:[&quot;Row1753&quot;],&quot;Row501&quot;:[&quot;Row1493&quot;],&quot;Row743&quot;:[&quot;Row1754&quot;],&quot;Row502&quot;:[&quot;Row1494&quot;],&quot;Row744&quot;:[&quot;Row1755&quot;],&quot;Row503&quot;:[&quot;Row1578&quot;,&quot;Row1495&quot;],&quot;Row745&quot;:[&quot;Row1756&quot;],&quot;Row504&quot;:[&quot;Row1496&quot;],&quot;Row746&quot;:[&quot;Row1757&quot;],&quot;Row703&quot;:[&quot;Row1714&quot;],&quot;Row704&quot;:[&quot;Row1715&quot;],&quot;Row705&quot;:[&quot;Row1716&quot;],&quot;Row706&quot;:[&quot;Row1717&quot;],&quot;Row707&quot;:[&quot;Row1718&quot;],&quot;Row708&quot;:[&quot;Row1719&quot;],&quot;Row709&quot;:[&quot;Row1720&quot;],&quot;Row710&quot;:[&quot;Row1721&quot;],&quot;Row711&quot;:[&quot;Row1722&quot;],&quot;Row712&quot;:[&quot;Row1723&quot;],&quot;Row713&quot;:[&quot;Row1724&quot;],&quot;Row714&quot;:[&quot;Row1725&quot;],&quot;Row715&quot;:[&quot;Row1726&quot;],&quot;Row716&quot;:[&quot;Row1727&quot;],&quot;Row717&quot;:[&quot;Row1728&quot;],&quot;Row718&quot;:[&quot;Row1729&quot;],&quot;Row719&quot;:[&quot;Row1730&quot;],&quot;Row720&quot;:[&quot;Row1731&quot;],&quot;Row721&quot;:[&quot;Row1732&quot;],&quot;Row722&quot;:[&quot;Row1733&quot;],&quot;Row723&quot;:[&quot;Row1734&quot;],&quot;Row724&quot;:[&quot;Row1735&quot;],&quot;Row527&quot;:[&quot;Row1526&quot;],&quot;Row769&quot;:[&quot;Row1780&quot;],&quot;Row528&quot;:[&quot;Row1527&quot;],&quot;Row529&quot;:[&quot;Row1528&quot;],&quot;Row770&quot;:[&quot;Row1781&quot;],&quot;Row771&quot;:[&quot;Row1782&quot;],&quot;Row530&quot;:[&quot;Row1530&quot;],&quot;Row772&quot;:[&quot;Row1783&quot;],&quot;Row531&quot;:[&quot;Row1531&quot;],&quot;Row773&quot;:[&quot;Row1784&quot;],&quot;Row532&quot;:[&quot;Row1532&quot;],&quot;Row774&quot;:[&quot;Row1785&quot;],&quot;Row533&quot;:[&quot;Row1533&quot;],&quot;Row775&quot;:[&quot;Row1786&quot;],&quot;Row534&quot;:[&quot;Row1534&quot;],&quot;Row776&quot;:[&quot;Row1787&quot;],&quot;Row535&quot;:[&quot;Row1535&quot;],&quot;Row777&quot;:[&quot;Row1788&quot;],&quot;Row536&quot;:[&quot;Row1536&quot;],&quot;Row778&quot;:[&quot;Row1789&quot;],&quot;Row537&quot;:[&quot;Row1537&quot;],&quot;Row779&quot;:[&quot;Row1790&quot;],&quot;Row538&quot;:[&quot;Row1538&quot;],&quot;Row539&quot;:[&quot;Row1539&quot;],&quot;Row780&quot;:[&quot;Row1791&quot;],&quot;Row781&quot;:[&quot;Row1792&quot;],&quot;Row540&quot;:[&quot;Row1540&quot;],&quot;Row782&quot;:[&quot;Row1793&quot;],&quot;Row541&quot;:[&quot;Row1544&quot;],&quot;Row783&quot;:[&quot;Row1794&quot;],&quot;Row300&quot;:[&quot;Row1122&quot;],&quot;Row542&quot;:[&quot;Row1546&quot;],&quot;Row784&quot;:[&quot;Row1795&quot;],&quot;Row301&quot;:[&quot;Row1123&quot;],&quot;Row543&quot;:[&quot;Row1547&quot;],&quot;Row785&quot;:[&quot;Row1796&quot;],&quot;Row302&quot;:[&quot;Row1124&quot;],&quot;Row544&quot;:[&quot;Row1548&quot;],&quot;Row786&quot;:[&quot;Row1797&quot;],&quot;Row303&quot;:[&quot;Row1125&quot;],&quot;Row545&quot;:[&quot;Row1549&quot;],&quot;Row787&quot;:[&quot;Row1798&quot;],&quot;Row304&quot;:[&quot;Row1126&quot;],&quot;Row546&quot;:[&quot;Row1550&quot;],&quot;Row305&quot;:[&quot;Row1127&quot;],&quot;Row547&quot;:[&quot;Row1551&quot;],&quot;Row306&quot;:[&quot;Row1128&quot;],&quot;Row548&quot;:[&quot;Row1552&quot;],&quot;Row505&quot;:[&quot;Row1499&quot;],&quot;Row747&quot;:[&quot;Row1758&quot;],&quot;Row506&quot;:[&quot;Row1500&quot;],&quot;Row748&quot;:[&quot;Row1759&quot;],&quot;Row507&quot;:[&quot;Row1501&quot;],&quot;Row749&quot;:[&quot;Row1760&quot;],&quot;Row508&quot;:[&quot;Row1502&quot;],&quot;Row509&quot;:[&quot;Row1505&quot;],&quot;Row750&quot;:[&quot;Row1761&quot;],&quot;Row751&quot;:[&quot;Row1762&quot;],&quot;Row510&quot;:[&quot;Row1506&quot;],&quot;Row752&quot;:[&quot;Row1763&quot;],&quot;Row511&quot;:[&quot;Row1507&quot;],&quot;Row753&quot;:[&quot;Row1764&quot;],&quot;Row512&quot;:[&quot;Row1508&quot;],&quot;Row754&quot;:[&quot;Row1765&quot;],&quot;Row513&quot;:[&quot;Row1511&quot;],&quot;Row755&quot;:[&quot;Row1766&quot;],&quot;Row514&quot;:[&quot;Row1512&quot;],&quot;Row756&quot;:[&quot;Row1767&quot;],&quot;Row515&quot;:[&quot;Row1513&quot;],&quot;Row757&quot;:[&quot;Row1768&quot;],&quot;Row516&quot;:[&quot;Row1514&quot;],&quot;Row758&quot;:[&quot;Row1769&quot;],&quot;Row517&quot;:[&quot;Row1515&quot;],&quot;Row759&quot;:[&quot;Row1770&quot;],&quot;Row518&quot;:[&quot;Row1516&quot;],&quot;Row519&quot;:[&quot;Row1517&quot;],&quot;Row760&quot;:[&quot;Row1771&quot;],&quot;Row761&quot;:[&quot;Row1772&quot;],&quot;Row520&quot;:[&quot;Row1518&quot;],&quot;Row762&quot;:[&quot;Row1773&quot;],&quot;Row521&quot;:[&quot;Row1519&quot;],&quot;Row763&quot;:[&quot;Row1774&quot;],&quot;Row522&quot;:[&quot;Row1520&quot;],&quot;Row764&quot;:[&quot;Row1775&quot;],&quot;Row523&quot;:[&quot;Row1521&quot;,&quot;Row1543&quot;],&quot;Row765&quot;:[&quot;Row1776&quot;],&quot;Row524&quot;:[&quot;Row1522&quot;],&quot;Row766&quot;:[&quot;Row1777&quot;],&quot;Row525&quot;:[&quot;Row1523&quot;,&quot;Row1545&quot;],&quot;Row767&quot;:[&quot;Row1778&quot;],&quot;Row526&quot;:[&quot;Row1524&quot;],&quot;Row768&quot;:[&quot;Row1779&quot;],&quot;Row329&quot;:[&quot;Row1174&quot;],&quot;Row570&quot;:[&quot;Row1574&quot;],&quot;Row571&quot;:[&quot;Row1575&quot;],&quot;Row330&quot;:[&quot;Row1175&quot;],&quot;Row572&quot;:[&quot;Row1576&quot;],&quot;Row331&quot;:[&quot;Row1178&quot;],&quot;Row573&quot;:[&quot;Row1577&quot;],&quot;Row332&quot;:[&quot;Row1179&quot;],&quot;Row574&quot;:[&quot;Row1579&quot;],&quot;Row333&quot;:[&quot;Row1180&quot;],&quot;Row575&quot;:[&quot;Row1580&quot;],&quot;Row334&quot;:[&quot;Row1181&quot;],&quot;Row576&quot;:[&quot;Row1581&quot;],&quot;Row335&quot;:[&quot;Row1182&quot;],&quot;Row577&quot;:[&quot;Row1582&quot;],&quot;Row336&quot;:[&quot;Row1184&quot;],&quot;Row578&quot;:[&quot;Row1583&quot;],&quot;Row337&quot;:[&quot;Row1185&quot;],&quot;Row579&quot;:[&quot;Row1584&quot;],&quot;Row338&quot;:[&quot;Row1186&quot;],&quot;Row339&quot;:[&quot;Row1187&quot;],&quot;Row580&quot;:[&quot;Row1585&quot;],&quot;Row581&quot;:[&quot;Row1586&quot;],&quot;Row340&quot;:[&quot;Row1190&quot;],&quot;Row582&quot;:[&quot;Row1587&quot;],&quot;Row341&quot;:[&quot;Row1191&quot;],&quot;Row583&quot;:[&quot;Row1588&quot;],&quot;Row100&quot;:[&quot;Row701&quot;],&quot;Row342&quot;:[&quot;Row1192&quot;],&quot;Row584&quot;:[&quot;Row1589&quot;],&quot;Row101&quot;:[&quot;Row702&quot;],&quot;Row343&quot;:[&quot;Row1193&quot;],&quot;Row585&quot;:[&quot;Row1590&quot;],&quot;Row102&quot;:[&quot;Row704&quot;],&quot;Row344&quot;:[&quot;Row1194&quot;],&quot;Row586&quot;:[&quot;Row1591&quot;],&quot;Row103&quot;:[&quot;Row715&quot;],&quot;Row345&quot;:[&quot;Row1195&quot;],&quot;Row587&quot;:[&quot;Row1592&quot;],&quot;Row104&quot;:[&quot;Row716&quot;],&quot;Row346&quot;:[&quot;Row1196&quot;],&quot;Row588&quot;:[&quot;Row1593&quot;],&quot;Row105&quot;:[&quot;Row717&quot;],&quot;Row347&quot;:[&quot;Row1197&quot;],&quot;Row589&quot;:[&quot;Row1594&quot;],&quot;Row106&quot;:[&quot;Row727&quot;],&quot;Row348&quot;:[&quot;Row1198&quot;],&quot;Row107&quot;:[&quot;Row728&quot;],&quot;Row349&quot;:[&quot;Row1199&quot;],&quot;Row108&quot;:[&quot;Row729&quot;],&quot;Row307&quot;:[&quot;Row1129&quot;],&quot;Row549&quot;:[&quot;Row1553&quot;],&quot;Row308&quot;:[&quot;Row1132&quot;],&quot;Row309&quot;:[&quot;Row1133&quot;],&quot;Row550&quot;:[&quot;Row1554&quot;],&quot;Row551&quot;:[&quot;Row1555&quot;],&quot;Row310&quot;:[&quot;Row1136&quot;],&quot;Row552&quot;:[&quot;Row1556&quot;],&quot;Row311&quot;:[&quot;Row1139&quot;],&quot;Row553&quot;:[&quot;Row1557&quot;],&quot;Row312&quot;:[&quot;Row1140&quot;],&quot;Row554&quot;:[&quot;Row1683&quot;,&quot;Row1558&quot;],&quot;Row313&quot;:[&quot;Row1142&quot;],&quot;Row555&quot;:[&quot;Row1559&quot;],&quot;Row314&quot;:[&quot;Row1144&quot;],&quot;Row556&quot;:[&quot;Row1560&quot;],&quot;Row315&quot;:[&quot;Row1146&quot;],&quot;Row557&quot;:[&quot;Row1561&quot;],&quot;Row316&quot;:[&quot;Row1149&quot;],&quot;Row558&quot;:[&quot;Row1562&quot;],&quot;Row317&quot;:[&quot;Row1150&quot;],&quot;Row559&quot;:[&quot;Row1563&quot;],&quot;Row318&quot;:[&quot;Row1151&quot;],&quot;Row319&quot;:[&quot;Row1152&quot;],&quot;Row560&quot;:[&quot;Row1564&quot;],&quot;Row561&quot;:[&quot;Row1565&quot;],&quot;Row320&quot;:[&quot;Row1153&quot;],&quot;Row562&quot;:[&quot;Row1566&quot;],&quot;Row321&quot;:[&quot;Row1154&quot;],&quot;Row563&quot;:[&quot;Row1567&quot;],&quot;Row322&quot;:[&quot;Row1156&quot;],&quot;Row564&quot;:[&quot;Row1568&quot;],&quot;Row323&quot;:[&quot;Row1158&quot;],&quot;Row565&quot;:[&quot;Row1569&quot;],&quot;Row324&quot;:[&quot;Row1159&quot;],&quot;Row566&quot;:[&quot;Row1570&quot;],&quot;Row325&quot;:[&quot;Row1161&quot;],&quot;Row567&quot;:[&quot;Row1571&quot;,&quot;Row1637&quot;],&quot;Row326&quot;:[&quot;Row1163&quot;],&quot;Row568&quot;:[&quot;Row1572&quot;],&quot;Row327&quot;:[&quot;Row1168&quot;],&quot;Row569&quot;:[&quot;Row1573&quot;],&quot;Row328&quot;:[&quot;Row1169&quot;],&quot;Row490&quot;:[&quot;Row1470&quot;],&quot;Row491&quot;:[&quot;Row1475&quot;],&quot;Row250&quot;:[&quot;Row1041&quot;,&quot;Row1219&quot;],&quot;Row492&quot;:[&quot;Row1476&quot;],&quot;Row251&quot;:[&quot;Row1045&quot;],&quot;Row493&quot;:[&quot;Row1477&quot;],&quot;Row252&quot;:[&quot;Row1046&quot;],&quot;Row494&quot;:[&quot;Row1478&quot;],&quot;Row253&quot;:[&quot;Row1047&quot;],&quot;Row495&quot;:[&quot;Row1479&quot;],&quot;Row254&quot;:[&quot;Row1048&quot;],&quot;Row496&quot;:[&quot;Row1480&quot;],&quot;Row255&quot;:[&quot;Row1049&quot;],&quot;Row497&quot;:[&quot;Row1485&quot;],&quot;Row256&quot;:[&quot;Row1050&quot;],&quot;Row498&quot;:[&quot;Row1486&quot;],&quot;Row257&quot;:[&quot;Row1051&quot;],&quot;Row499&quot;:[&quot;Row1491&quot;],&quot;Row258&quot;:[&quot;Row1052&quot;],&quot;Row259&quot;:[&quot;Row1053&quot;],&quot;Row260&quot;:[&quot;Row1054&quot;],&quot;Row261&quot;:[&quot;Row1056&quot;],&quot;Row262&quot;:[&quot;Row1057&quot;],&quot;Row263&quot;:[&quot;Row1061&quot;],&quot;Row264&quot;:[&quot;Row1064&quot;],&quot;Row265&quot;:[&quot;Row1065&quot;],&quot;Row266&quot;:[&quot;Row1066&quot;],&quot;Row267&quot;:[&quot;Row1067&quot;],&quot;Row268&quot;:[&quot;Row1068&quot;],&quot;Row269&quot;:[&quot;Row1070&quot;],&quot;Row470&quot;:[&quot;Row1442&quot;],&quot;Row471&quot;:[&quot;Row1445&quot;],&quot;Row230&quot;:[&quot;Row1006&quot;],&quot;Row472&quot;:[&quot;Row1446&quot;],&quot;Row231&quot;:[&quot;Row1007&quot;],&quot;Row473&quot;:[&quot;Row1447&quot;],&quot;Row232&quot;:[&quot;Row1008&quot;],&quot;Row474&quot;:[&quot;Row1448&quot;],&quot;Row233&quot;:[&quot;Row1009&quot;],&quot;Row475&quot;:[&quot;Row1451&quot;],&quot;Row234&quot;:[&quot;Row1011&quot;],&quot;Row476&quot;:[&quot;Row1452&quot;],&quot;Row235&quot;:[&quot;Row1013&quot;],&quot;Row477&quot;:[&quot;Row1453&quot;],&quot;Row236&quot;:[&quot;Row1014&quot;],&quot;Row478&quot;:[&quot;Row1454&quot;],&quot;Row237&quot;:[&quot;Row1016&quot;],&quot;Row479&quot;:[&quot;Row1459&quot;],&quot;Row238&quot;:[&quot;Row1018&quot;],&quot;Row239&quot;:[&quot;Row1023&quot;],&quot;Row480&quot;:[&quot;Row1460&quot;],&quot;Row481&quot;:[&quot;Row1461&quot;],&quot;Row240&quot;:[&quot;Row1024&quot;],&quot;Row482&quot;:[&quot;Row1462&quot;],&quot;Row241&quot;:[&quot;Row1029&quot;],&quot;Row483&quot;:[&quot;Row1463&quot;],&quot;Row242&quot;:[&quot;Row1030&quot;],&quot;Row484&quot;:[&quot;Row1464&quot;],&quot;Row243&quot;:[&quot;Row1033&quot;],&quot;Row485&quot;:[&quot;Row1465&quot;],&quot;Row244&quot;:[&quot;Row1034&quot;],&quot;Row486&quot;:[&quot;Row1466&quot;],&quot;Row245&quot;:[&quot;Row1035&quot;],&quot;Row487&quot;:[&quot;Row1467&quot;],&quot;Row246&quot;:[&quot;Row1036&quot;],&quot;Row488&quot;:[&quot;Row1468&quot;],&quot;Row247&quot;:[&quot;Row1037&quot;],&quot;Row489&quot;:[&quot;Row1469&quot;],&quot;Row248&quot;:[&quot;Row1039&quot;],&quot;Row249&quot;:[&quot;Row1040&quot;],&quot;Row290&quot;:[&quot;Row1109&quot;],&quot;Row291&quot;:[&quot;Row1110&quot;],&quot;Row292&quot;:[&quot;Row1111&quot;],&quot;Row293&quot;:[&quot;Row1112&quot;],&quot;Row294&quot;:[&quot;Row1113&quot;],&quot;Row295&quot;:[&quot;Row1114&quot;],&quot;Row296&quot;:[&quot;Row1115&quot;],&quot;Row297&quot;:[&quot;Row1116&quot;],&quot;Row298&quot;:[&quot;Row1117&quot;],&quot;Row299&quot;:[&quot;Row1120&quot;],&quot;Row270&quot;:[&quot;Row1072&quot;],&quot;Row271&quot;:[&quot;Row1074&quot;],&quot;Row272&quot;:[&quot;Row1076&quot;],&quot;Row273&quot;:[&quot;Row1078&quot;],&quot;Row274&quot;:[&quot;Row1079&quot;],&quot;Row275&quot;:[&quot;Row1083&quot;],&quot;Row276&quot;:[&quot;Row1084&quot;],&quot;Row277&quot;:[&quot;Row1086&quot;],&quot;Row278&quot;:[&quot;Row1088&quot;],&quot;Row279&quot;:[&quot;Row1089&quot;],&quot;Row280&quot;:[&quot;Row1090&quot;],&quot;Row281&quot;:[&quot;Row1092&quot;],&quot;Row282&quot;:[&quot;Row1095&quot;],&quot;Row283&quot;:[&quot;Row1098&quot;],&quot;Row284&quot;:[&quot;Row1100&quot;],&quot;Row285&quot;:[&quot;Row1101&quot;],&quot;Row286&quot;:[&quot;Row1102&quot;],&quot;Row287&quot;:[&quot;Row1103&quot;],&quot;Row288&quot;:[&quot;Row1105&quot;],&quot;Row289&quot;:[&quot;Row1106&quot;],&quot;Row41&quot;:[&quot;Row533&quot;],&quot;Row40&quot;:[&quot;Row532&quot;],&quot;Row49&quot;:[&quot;Row556&quot;],&quot;Row48&quot;:[&quot;Row555&quot;],&quot;Row47&quot;:[&quot;Row554&quot;],&quot;Row46&quot;:[&quot;Row553&quot;],&quot;Row45&quot;:[&quot;Row552&quot;],&quot;Row44&quot;:[&quot;Row536&quot;],&quot;Row43&quot;:[&quot;Row535&quot;],&quot;Row42&quot;:[&quot;Row534&quot;],&quot;Row39&quot;:[&quot;Row531&quot;],&quot;Row30&quot;:[&quot;Row429&quot;,&quot;Row230&quot;,&quot;Row356&quot;],&quot;Row38&quot;:[&quot;Row509&quot;],&quot;Row37&quot;:[&quot;Row508&quot;],&quot;Row36&quot;:[&quot;Row507&quot;],&quot;Row35&quot;:[&quot;Row497&quot;],&quot;Row34&quot;:[&quot;Row378&quot;],&quot;Row33&quot;:[&quot;Row369&quot;],&quot;Row32&quot;:[&quot;Row349&quot;],&quot;Row31&quot;:[&quot;Row294&quot;],&quot;Row29&quot;:[&quot;Row390&quot;,&quot;Row273&quot;,&quot;Row450&quot;,&quot;Row461&quot;,&quot;Row217&quot;,&quot;Row415&quot;],&quot;Row28&quot;:[&quot;Row178&quot;],&quot;Row63&quot;:[&quot;Row594&quot;],&quot;Row62&quot;:[&quot;Row593&quot;],&quot;Row61&quot;:[&quot;Row592&quot;],&quot;Row60&quot;:[&quot;Row591&quot;],&quot;Row69&quot;:[&quot;Row606&quot;],&quot;Row68&quot;:[&quot;Row599&quot;],&quot;Row67&quot;:[&quot;Row598&quot;],&quot;Row66&quot;:[&quot;Row597&quot;],&quot;Row65&quot;:[&quot;Row596&quot;],&quot;Row64&quot;:[&quot;Row595&quot;],&quot;Row52&quot;:[&quot;Row559&quot;],&quot;Row51&quot;:[&quot;Row1371&quot;,&quot;Row558&quot;],&quot;Row50&quot;:[&quot;Row557&quot;],&quot;Row59&quot;:[&quot;Row581&quot;],&quot;Row58&quot;:[&quot;Row580&quot;],&quot;Row57&quot;:[&quot;Row579&quot;],&quot;Row56&quot;:[&quot;Row566&quot;],&quot;Row55&quot;:[&quot;Row565&quot;],&quot;Row54&quot;:[&quot;Row564&quot;],&quot;Row53&quot;:[&quot;Row560&quot;],&quot;Row0&quot;:[&quot;Row308&quot;,&quot;Row81&quot;,&quot;Row69&quot;,&quot;Row66&quot;,&quot;Row291&quot;,&quot;Row370&quot;,&quot;Row195&quot;,&quot;Row493&quot;,&quot;Row495&quot;,&quot;Row210&quot;,&quot;Row298&quot;,&quot;Row375&quot;,&quot;Row432&quot;,&quot;Row213&quot;,&quot;Row2&quot;,&quot;Row3&quot;,&quot;Row13&quot;,&quot;Row381&quot;,&quot;Row340&quot;,&quot;Row363&quot;,&quot;Row463&quot;,&quot;Row485&quot;,&quot;Row323&quot;,&quot;Row841&quot;,&quot;Row347&quot;,&quot;Row304&quot;,&quot;Row447&quot;],&quot;Row1&quot;:[&quot;Row92&quot;,&quot;Row1319&quot;,&quot;Row193&quot;,&quot;Row150&quot;,&quot;Row1237&quot;,&quot;Row186&quot;,&quot;Row187&quot;,&quot;Row188&quot;,&quot;Row474&quot;,&quot;Row8&quot;,&quot;Row255&quot;,&quot;Row388&quot;,&quot;Row4&quot;,&quot;Row337&quot;,&quot;Row404&quot;],&quot;Row8&quot;:[&quot;Row16&quot;,&quot;Row464&quot;],&quot;Row9&quot;:[&quot;Row241&quot;,&quot;Row341&quot;,&quot;Row25&quot;,&quot;Row137&quot;,&quot;Row190&quot;],&quot;Row6&quot;:[&quot;Row85&quot;,&quot;Row61&quot;,&quot;Row38&quot;,&quot;Row79&quot;,&quot;Row12&quot;,&quot;Row34&quot;,&quot;Row67&quot;,&quot;Row20&quot;,&quot;Row1015&quot;,&quot;Row161&quot;,&quot;Row1220&quot;,&quot;Row430&quot;,&quot;Row167&quot;,&quot;Row343&quot;,&quot;Row1160&quot;,&quot;Row399&quot;,&quot;Row400&quot;,&quot;Row214&quot;,&quot;Row985&quot;,&quot;Row1291&quot;],&quot;Row7&quot;:[&quot;Row30&quot;,&quot;Row417&quot;,&quot;Row284&quot;,&quot;Row164&quot;,&quot;Row134&quot;,&quot;Row14&quot;],&quot;Row4&quot;:[&quot;Row99&quot;,&quot;Row170&quot;,&quot;Row260&quot;,&quot;Row462&quot;,&quot;Row221&quot;,&quot;Row496&quot;,&quot;Row980&quot;,&quot;Row442&quot;,&quot;Row9&quot;,&quot;Row311&quot;,&quot;Row366&quot;,&quot;Row443&quot;,&quot;Row301&quot;,&quot;Row269&quot;,&quot;Row248&quot;,&quot;Row128&quot;,&quot;Row327&quot;],&quot;Row5&quot;:[&quot;Row73&quot;,&quot;Row24&quot;,&quot;Row10&quot;,&quot;Row86&quot;,&quot;Row1055&quot;,&quot;Row243&quot;,&quot;Row332&quot;,&quot;Row398&quot;,&quot;Row420&quot;,&quot;Row257&quot;,&quot;Row455&quot;,&quot;Row412&quot;,&quot;Row423&quot;],&quot;Row2&quot;:[&quot;Row824&quot;,&quot;Row923&quot;,&quot;Row419&quot;,&quot;Row958&quot;,&quot;Row184&quot;,&quot;Row371&quot;,&quot;Row174&quot;,&quot;Row790&quot;,&quot;Row131&quot;,&quot;Row145&quot;,&quot;Row179&quot;,&quot;Row763&quot;,&quot;Row764&quot;,&quot;Row830&quot;,&quot;Row831&quot;,&quot;Row5&quot;,&quot;Row832&quot;,&quot;Row118&quot;,&quot;Row833&quot;,&quot;Row921&quot;,&quot;Row834&quot;,&quot;Row922&quot;],&quot;Row3&quot;:[&quot;Row7&quot;,&quot;Row57&quot;,&quot;Row159&quot;],&quot;Row27&quot;:[&quot;Row177&quot;,&quot;Row364&quot;,&quot;Row421&quot;,&quot;Row487&quot;,&quot;Row302&quot;,&quot;Row416&quot;],&quot;Row26&quot;:[&quot;Row165&quot;],&quot;Row25&quot;:[&quot;Row192&quot;,&quot;Row160&quot;,&quot;Row410&quot;,&quot;Row225&quot;,&quot;Row401&quot;,&quot;Row204&quot;,&quot;Row402&quot;,&quot;Row446&quot;,&quot;Row414&quot;],&quot;Row24&quot;:[&quot;Row283&quot;,&quot;Row153&quot;,&quot;Row203&quot;,&quot;Row478&quot;,&quot;Row458&quot;],&quot;Row23&quot;:[&quot;Row144&quot;],&quot;Row22&quot;:[&quot;Row173&quot;,&quot;Row481&quot;,&quot;Row262&quot;,&quot;Row142&quot;,&quot;Row263&quot;,&quot;Row154&quot;,&quot;Row297&quot;,&quot;Row331&quot;,&quot;Row342&quot;,&quot;Row466&quot;,&quot;Row467&quot;,&quot;Row424&quot;,&quot;Row328&quot;,&quot;Row405&quot;],&quot;Row21&quot;:[&quot;Row140&quot;,&quot;Row163&quot;,&quot;Row434&quot;],&quot;Row20&quot;:[&quot;Row360&quot;,&quot;Row141&quot;,&quot;Row121&quot;,&quot;Row264&quot;,&quot;Row344&quot;],&quot;Row19&quot;:[&quot;Row289&quot;,&quot;Row488&quot;,&quot;Row107&quot;],&quot;Row18&quot;:[&quot;Row62&quot;,&quot;Row82&quot;,&quot;Row251&quot;,&quot;Row276&quot;,&quot;Row320&quot;,&quot;Row157&quot;,&quot;Row268&quot;,&quot;Row126&quot;],&quot;Row17&quot;:[&quot;Row406&quot;,&quot;Row392&quot;,&quot;Row374&quot;,&quot;Row59&quot;,&quot;Row124&quot;,&quot;Row377&quot;,&quot;Row68&quot;,&quot;Row138&quot;,&quot;Row249&quot;,&quot;Row459&quot;],&quot;Row16&quot;:[&quot;Row270&quot;,&quot;Row293&quot;,&quot;Row277&quot;,&quot;Row46&quot;,&quot;Row348&quot;,&quot;Row87&quot;,&quot;Row290&quot;],&quot;Row15&quot;:[&quot;Row408&quot;,&quot;Row44&quot;],&quot;Row14&quot;:[&quot;Row491&quot;,&quot;Row397&quot;,&quot;Row123&quot;,&quot;Row313&quot;,&quot;Row43&quot;],&quot;Row13&quot;:[&quot;Row252&quot;,&quot;Row285&quot;,&quot;Row310&quot;,&quot;Row136&quot;,&quot;Row279&quot;,&quot;Row33&quot;],&quot;Row12&quot;:[&quot;Row41&quot;,&quot;Row63&quot;,&quot;Row29&quot;,&quot;Row215&quot;,&quot;Row55&quot;],&quot;Row11&quot;:[&quot;Row47&quot;,&quot;Row1618&quot;,&quot;Row1613&quot;,&quot;Row191&quot;,&quot;Row1542&quot;,&quot;Row490&quot;,&quot;Row1246&quot;,&quot;Row196&quot;,&quot;Row350&quot;,&quot;Row197&quot;,&quot;Row110&quot;,&quot;Row452&quot;,&quot;Row1541&quot;,&quot;Row256&quot;,&quot;Row358&quot;,&quot;Row413&quot;,&quot;Row316&quot;,&quot;Row317&quot;,&quot;Row1529&quot;,&quot;Row1607&quot;,&quot;Row1608&quot;,&quot;Row1525&quot;,&quot;Row280&quot;,&quot;Row28&quot;,&quot;Row122&quot;,&quot;Row321&quot;,&quot;Row486&quot;,&quot;Row125&quot;,&quot;Row422&quot;,&quot;Row206&quot;,&quot;Row305&quot;,&quot;Row426&quot;,&quot;Row108&quot;,&quot;Row207&quot;],&quot;Row10&quot;:[&quot;Row428&quot;,&quot;Row84&quot;,&quot;Row26&quot;,&quot;Row292&quot;,&quot;Row1004&quot;,&quot;Row272&quot;,&quot;Row393&quot;,&quot;Row492&quot;,&quot;Row1143&quot;,&quot;Row451&quot;,&quot;Row1002&quot;,&quot;Row299&quot;,&quot;Row135&quot;,&quot;Row258&quot;,&quot;Row335&quot;,&quot;Row379&quot;,&quot;Row336&quot;,&quot;Row139&quot;,&quot;Row315&quot;,&quot;Row998&quot;,&quot;Row1081&quot;,&quot;Row74&quot;,&quot;Row95&quot;,&quot;Row418&quot;,&quot;Row56&quot;,&quot;Row281&quot;,&quot;Row380&quot;,&quot;Row383&quot;,&quot;Row265&quot;,&quot;Row101&quot;,&quot;Row365&quot;,&quot;Row267&quot;,&quot;Row300&quot;,&quot;Row345&quot;,&quot;Row444&quot;,&quot;Row326&quot;,&quot;Row129&quot;],&quot;Row85&quot;:[&quot;Row667&quot;],&quot;Row604&quot;:[&quot;Row1611&quot;],&quot;Row84&quot;:[&quot;Row644&quot;],&quot;Row605&quot;:[&quot;Row1612&quot;],&quot;Row83&quot;:[&quot;Row643&quot;],&quot;Row606&quot;:[&quot;Row1614&quot;],&quot;Row82&quot;:[&quot;Row642&quot;],&quot;Row607&quot;:[&quot;Row1615&quot;],&quot;Row81&quot;:[&quot;Row639&quot;],&quot;Row608&quot;:[&quot;Row1616&quot;],&quot;Row80&quot;:[&quot;Row638&quot;],&quot;Row609&quot;:[&quot;Row1617&quot;],&quot;Row89&quot;:[&quot;Row672&quot;],&quot;Row88&quot;:[&quot;Row670&quot;],&quot;Row87&quot;:[&quot;Row669&quot;],&quot;Row86&quot;:[&quot;Row668&quot;],&quot;Row610&quot;:[&quot;Row1619&quot;],&quot;Row611&quot;:[&quot;Row1620&quot;],&quot;Row612&quot;:[&quot;Row1621&quot;],&quot;Row613&quot;:[&quot;Row1622&quot;],&quot;Row614&quot;:[&quot;Row1623&quot;],&quot;Row74&quot;:[&quot;Row624&quot;],&quot;Row615&quot;:[&quot;Row1624&quot;],&quot;Row73&quot;:[&quot;Row617&quot;],&quot;Row616&quot;:[&quot;Row1625&quot;],&quot;Row72&quot;:[&quot;Row609&quot;],&quot;Row617&quot;:[&quot;Row1626&quot;],&quot;Row71&quot;:[&quot;Row608&quot;],&quot;Row618&quot;:[&quot;Row1627&quot;],&quot;Row70&quot;:[&quot;Row607&quot;],&quot;Row619&quot;:[&quot;Row1628&quot;],&quot;Row79&quot;:[&quot;Row637&quot;],&quot;Row78&quot;:[&quot;Row633&quot;],&quot;Row77&quot;:[&quot;Row628&quot;],&quot;Row76&quot;:[&quot;Row626&quot;],&quot;Row75&quot;:[&quot;Row625&quot;],&quot;Row620&quot;:[&quot;Row1629&quot;],&quot;Row621&quot;:[&quot;Row1630&quot;],&quot;Row622&quot;:[&quot;Row1631&quot;],&quot;Row623&quot;:[&quot;Row1632&quot;],&quot;Row624&quot;:[&quot;Row1633&quot;],&quot;Row625&quot;:[&quot;Row1634&quot;],&quot;Row96&quot;:[&quot;Row694&quot;],&quot;Row95&quot;:[&quot;Row693&quot;],&quot;Row94&quot;:[&quot;Row692&quot;],&quot;Row93&quot;:[&quot;Row691&quot;],&quot;Row92&quot;:[&quot;Row690&quot;],&quot;Row91&quot;:[&quot;Row688&quot;],&quot;Row90&quot;:[&quot;Row680&quot;],&quot;Row99&quot;:[&quot;Row700&quot;],&quot;Row98&quot;:[&quot;Row696&quot;],&quot;Row97&quot;:[&quot;Row695&quot;],&quot;Row600&quot;:[&quot;Row1605&quot;],&quot;Row601&quot;:[&quot;Row1606&quot;],&quot;Row602&quot;:[&quot;Row1609&quot;],&quot;Row603&quot;:[&quot;Row1610&quot;],&quot;Row406&quot;:[&quot;Row1314&quot;],&quot;Row648&quot;:[&quot;Row1658&quot;],&quot;Row407&quot;:[&quot;Row1315&quot;],&quot;Row649&quot;:[&quot;Row1659&quot;],&quot;Row408&quot;:[&quot;Row1316&quot;],&quot;Row409&quot;:[&quot;Row1317&quot;],&quot;Row650&quot;:[&quot;Row1660&quot;],&quot;Row651&quot;:[&quot;Row1661&quot;],&quot;Row410&quot;:[&quot;Row1318&quot;],&quot;Row652&quot;:[&quot;Row1662&quot;],&quot;Row411&quot;:[&quot;Row1320&quot;],&quot;Row653&quot;:[&quot;Row1663&quot;],&quot;Row412&quot;:[&quot;Row1327&quot;],&quot;Row654&quot;:[&quot;Row1664&quot;],&quot;Row413&quot;:[&quot;Row1328&quot;],&quot;Row655&quot;:[&quot;Row1665&quot;],&quot;Row414&quot;:[&quot;Row1331&quot;],&quot;Row656&quot;:[&quot;Row1666&quot;],&quot;Row415&quot;:[&quot;Row1332&quot;],&quot;Row657&quot;:[&quot;Row1667&quot;],&quot;Row416&quot;:[&quot;Row1335&quot;],&quot;Row658&quot;:[&quot;Row1668&quot;],&quot;Row417&quot;:[&quot;Row1336&quot;],&quot;Row659&quot;:[&quot;Row1669&quot;],&quot;Row418&quot;:[&quot;Row1339&quot;],&quot;Row419&quot;:[&quot;Row1340&quot;],&quot;Row660&quot;:[&quot;Row1670&quot;],&quot;Row661&quot;:[&quot;Row1671&quot;],&quot;Row420&quot;:[&quot;Row1341&quot;],&quot;Row662&quot;:[&quot;Row1672&quot;],&quot;Row421&quot;:[&quot;Row1342&quot;],&quot;Row663&quot;:[&quot;Row1673&quot;],&quot;Row422&quot;:[&quot;Row1343&quot;],&quot;Row664&quot;:[&quot;Row1674&quot;],&quot;Row423&quot;:[&quot;Row1344&quot;],&quot;Row665&quot;:[&quot;Row1675&quot;],&quot;Row424&quot;:[&quot;Row1347&quot;],&quot;Row666&quot;:[&quot;Row1676&quot;],&quot;Row425&quot;:[&quot;Row1348&quot;],&quot;Row667&quot;:[&quot;Row1677&quot;],&quot;Row426&quot;:[&quot;Row1349&quot;],&quot;Row668&quot;:[&quot;Row1678&quot;],&quot;Row427&quot;:[&quot;Row1350&quot;],&quot;Row669&quot;:[&quot;Row1679&quot;],&quot;Row626&quot;:[&quot;Row1635&quot;],&quot;Row627&quot;:[&quot;Row1636&quot;],&quot;Row628&quot;:[&quot;Row1638&quot;],&quot;Row629&quot;:[&quot;Row1639&quot;],&quot;Row630&quot;:[&quot;Row1640&quot;],&quot;Row631&quot;:[&quot;Row1641&quot;],&quot;Row632&quot;:[&quot;Row1642&quot;],&quot;Row633&quot;:[&quot;Row1643&quot;],&quot;Row634&quot;:[&quot;Row1644&quot;],&quot;Row635&quot;:[&quot;Row1645&quot;],&quot;Row636&quot;:[&quot;Row1646&quot;],&quot;Row637&quot;:[&quot;Row1647&quot;],&quot;Row638&quot;:[&quot;Row1648&quot;],&quot;Row639&quot;:[&quot;Row1649&quot;],&quot;Row640&quot;:[&quot;Row1650&quot;],&quot;Row641&quot;:[&quot;Row1651&quot;],&quot;Row400&quot;:[&quot;Row1304&quot;],&quot;Row642&quot;:[&quot;Row1652&quot;],&quot;Row401&quot;:[&quot;Row1307&quot;],&quot;Row643&quot;:[&quot;Row1653&quot;],&quot;Row402&quot;:[&quot;Row1308&quot;],&quot;Row644&quot;:[&quot;Row1654&quot;],&quot;Row403&quot;:[&quot;Row1311&quot;],&quot;Row645&quot;:[&quot;Row1655&quot;],&quot;Row404&quot;:[&quot;Row1312&quot;],&quot;Row646&quot;:[&quot;Row1656&quot;],&quot;Row405&quot;:[&quot;Row1313&quot;],&quot;Row647&quot;:[&quot;Row1657&quot;],&quot;Row208&quot;:[&quot;Row949&quot;],&quot;Row209&quot;:[&quot;Row950&quot;],&quot;Row690&quot;:[&quot;Row1701&quot;],&quot;Row691&quot;:[&quot;Row1702&quot;],&quot;Row450&quot;:[&quot;Row1404&quot;],&quot;Row692&quot;:[&quot;Row1703&quot;],&quot;Row451&quot;:[&quot;Row1405&quot;],&quot;Row693&quot;:[&quot;Row1704&quot;],&quot;Row210&quot;:[&quot;Row956&quot;],&quot;Row452&quot;:[&quot;Row1406&quot;],&quot;Row694&quot;:[&quot;Row1705&quot;],&quot;Row211&quot;:[&quot;Row961&quot;],&quot;Row453&quot;:[&quot;Row1411&quot;],&quot;Row695&quot;:[&quot;Row1706&quot;],&quot;Row212&quot;:[&quot;Row966&quot;],&quot;Row454&quot;:[&quot;Row1412&quot;],&quot;Row696&quot;:[&quot;Row1707&quot;],&quot;Row213&quot;:[&quot;Row969&quot;],&quot;Row455&quot;:[&quot;Row1415&quot;],&quot;Row697&quot;:[&quot;Row1708&quot;],&quot;Row214&quot;:[&quot;Row970&quot;],&quot;Row456&quot;:[&quot;Row1416&quot;],&quot;Row698&quot;:[&quot;Row1709&quot;],&quot;Row215&quot;:[&quot;Row971&quot;],&quot;Row457&quot;:[&quot;Row1419&quot;],&quot;Row699&quot;:[&quot;Row1710&quot;],&quot;Row216&quot;:[&quot;Row977&quot;],&quot;Row458&quot;:[&quot;Row1420&quot;],&quot;Row217&quot;:[&quot;Row978&quot;],&quot;Row459&quot;:[&quot;Row1421&quot;],&quot;Row218&quot;:[&quot;Row979&quot;],&quot;Row219&quot;:[&quot;Row981&quot;],&quot;Row460&quot;:[&quot;Row1422&quot;],&quot;Row461&quot;:[&quot;Row1423&quot;],&quot;Row220&quot;:[&quot;Row982&quot;],&quot;Row462&quot;:[&quot;Row1424&quot;],&quot;Row221&quot;:[&quot;Row983&quot;],&quot;Row463&quot;:[&quot;Row1425&quot;],&quot;Row222&quot;:[&quot;Row984&quot;],&quot;Row464&quot;:[&quot;Row1426&quot;],&quot;Row223&quot;:[&quot;Row987&quot;],&quot;Row465&quot;:[&quot;Row1427&quot;],&quot;Row224&quot;:[&quot;Row988&quot;],&quot;Row466&quot;:[&quot;Row1428&quot;],&quot;Row225&quot;:[&quot;Row991&quot;],&quot;Row467&quot;:[&quot;Row1429&quot;],&quot;Row226&quot;:[&quot;Row994&quot;],&quot;Row468&quot;:[&quot;Row1430&quot;],&quot;Row227&quot;:[&quot;Row995&quot;],&quot;Row469&quot;:[&quot;Row1441&quot;],&quot;Row228&quot;:[&quot;Row999&quot;],&quot;Row229&quot;:[&quot;Row1001&quot;],&quot;Row428&quot;:[&quot;Row1353&quot;],&quot;Row429&quot;:[&quot;Row1354&quot;],&quot;Row670&quot;:[&quot;Row1680&quot;],&quot;Row671&quot;:[&quot;Row1681&quot;],&quot;Row430&quot;:[&quot;Row1357&quot;],&quot;Row672&quot;:[&quot;Row1682&quot;],&quot;Row431&quot;:[&quot;Row1358&quot;],&quot;Row673&quot;:[&quot;Row1684&quot;],&quot;Row432&quot;:[&quot;Row1359&quot;],&quot;Row674&quot;:[&quot;Row1685&quot;],&quot;Row433&quot;:[&quot;Row1360&quot;],&quot;Row675&quot;:[&quot;Row1686&quot;],&quot;Row434&quot;:[&quot;Row1363&quot;],&quot;Row676&quot;:[&quot;Row1687&quot;],&quot;Row435&quot;:[&quot;Row1364&quot;],&quot;Row677&quot;:[&quot;Row1688&quot;],&quot;Row436&quot;:[&quot;Row1367&quot;],&quot;Row678&quot;:[&quot;Row1689&quot;],&quot;Row437&quot;:[&quot;Row1368&quot;],&quot;Row679&quot;:[&quot;Row1690&quot;],&quot;Row438&quot;:[&quot;Row1372&quot;],&quot;Row439&quot;:[&quot;Row1373&quot;],&quot;Row680&quot;:[&quot;Row1691&quot;],&quot;Row681&quot;:[&quot;Row1692&quot;],&quot;Row440&quot;:[&quot;Row1374&quot;],&quot;Row682&quot;:[&quot;Row1693&quot;],&quot;Row441&quot;:[&quot;Row1375&quot;],&quot;Row683&quot;:[&quot;Row1694&quot;],&quot;Row200&quot;:[&quot;Row934&quot;],&quot;Row442&quot;:[&quot;Row1376&quot;],&quot;Row684&quot;:[&quot;Row1695&quot;],&quot;Row201&quot;:[&quot;Row939&quot;],&quot;Row443&quot;:[&quot;Row1377&quot;],&quot;Row685&quot;:[&quot;Row1696&quot;],&quot;Row202&quot;:[&quot;Row940&quot;],&quot;Row444&quot;:[&quot;Row1378&quot;],&quot;Row686&quot;:[&quot;Row1697&quot;],&quot;Row203&quot;:[&quot;Row941&quot;],&quot;Row445&quot;:[&quot;Row1379&quot;],&quot;Row687&quot;:[&quot;Row1698&quot;],&quot;Row204&quot;:[&quot;Row943&quot;],&quot;Row446&quot;:[&quot;Row1380&quot;],&quot;Row688&quot;:[&quot;Row1699&quot;],&quot;Row205&quot;:[&quot;Row944&quot;],&quot;Row447&quot;:[&quot;Row1393&quot;],&quot;Row689&quot;:[&quot;Row1700&quot;],&quot;Row206&quot;:[&quot;Row945&quot;],&quot;Row448&quot;:[&quot;Row1394&quot;],&quot;Row207&quot;:[&quot;Row946&quot;],&quot;Row449&quot;:[&quot;Row1403&quot;]}},&quot;uuid&quot;:&quot;f4132612-63de-4c8f-9697-abb763ed958e&quot;}"/>
        </config>
        <config key="inObject_1">
            <entry key="jsonValue" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <entry key="warnMessage" type="xstring" value=""/>
    <entry key="errorMessage" type="xstring" value=""/>
</config>
